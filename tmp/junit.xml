<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="bun test" tests="1818" assertions="4322" failures="28" skipped="0" time="2.123967">
  <testsuite name="__tests__/core.test.ts" file="__tests__/core.test.ts" tests="16" assertions="40" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Core Types" file="__tests__/core.test.ts" line="58" tests="4" assertions="7" failures="0" skipped="0" time="0.024" hostname="Andrews-MacBook-Pro-188.local">
      <testcase name="Component interface should be properly typed" classname="Core Types" time="0.01685" file="__tests__/core.test.ts" line="59" assertions="2" />
      <testcase name="Component update should handle messages correctly" classname="Core Types" time="0.006941" file="__tests__/core.test.ts" line="68" assertions="3" />
      <testcase name="Component view should render correctly" classname="Core Types" time="0.001417" file="__tests__/core.test.ts" line="86" assertions="1" />
      <testcase name="Component should handle system messages" classname="Core Types" time="0.001227" file="__tests__/core.test.ts" line="94" assertions="1" />
    </testsuite>
    <testsuite name="Error System" file="__tests__/core.test.ts" line="116" tests="6" assertions="21" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testcase name="TerminalError should be properly structured" classname="Error System" time="0.000145" file="__tests__/core.test.ts" line="117" assertions="5" />
      <testcase name="InputError should be properly structured" classname="Error System" time="0.000031" file="__tests__/core.test.ts" line="132" assertions="3" />
      <testcase name="RenderError should be properly structured" classname="Error System" time="0.000038" file="__tests__/core.test.ts" line="144" assertions="4" />
      <testcase name="ErrorUtils.isCritical should classify errors correctly" classname="Error System" time="0.00005" file="__tests__/core.test.ts" line="157" assertions="3" />
      <testcase name="ErrorUtils.fromUnknown should handle various error types" classname="Error System" time="0.000107" file="__tests__/core.test.ts" line="166" assertions="4" />
      <testcase name="ErrorUtils.getUserMessage should provide user-friendly messages" classname="Error System" time="0.000048" file="__tests__/core.test.ts" line="186" assertions="2" />
    </testsuite>
    <testsuite name="Error Boundaries" file="__tests__/core.test.ts" line="202" tests="3" assertions="5" failures="0" skipped="0" time="0.002" hostname="Andrews-MacBook-Pro-188.local">
      <testcase name="withErrorBoundary should catch and handle errors" classname="Error Boundaries" time="0.000678" file="__tests__/core.test.ts" line="203" assertions="1" />
      <testcase name="withErrorBoundary should pass through successful effects" classname="Error Boundaries" time="0.000066" file="__tests__/core.test.ts" line="216" assertions="1" />
      <testcase name="Recovery strategies should work correctly" classname="Error Boundaries" time="0.00214" file="__tests__/core.test.ts" line="228" assertions="3" />
    </testsuite>
    <testsuite name="Framework Integration" file="__tests__/core.test.ts" line="260" tests="3" assertions="7" failures="0" skipped="0" time="0.011" hostname="Andrews-MacBook-Pro-188.local">
      <testcase name="Component should work with mock services" classname="Framework Integration" time="0.004489" file="__tests__/core.test.ts" line="261" assertions="3" />
      <testcase name="Multiple components should not interfere" classname="Framework Integration" time="0.003552" file="__tests__/core.test.ts" line="285" assertions="2" />
      <testcase name="Error handling should work end-to-end" classname="Framework Integration" time="0.004291" file="__tests__/core.test.ts" line="299" assertions="2" />
    </testsuite>
  </testsuite>
  <testsuite name="tests/e2e/process-monitor.test.ts" file="tests/e2e/process-monitor.test.ts" tests="7" assertions="24" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testcase name="Process Monitor - Initial State" classname="" time="0.000428" file="tests/e2e/process-monitor.test.ts" line="122" assertions="6" />
    <testcase name="Process Monitor - Refresh Functionality" classname="" time="0.000309" file="tests/e2e/process-monitor.test.ts" line="138" assertions="3" />
    <testcase name="Process Monitor - Kill Process" classname="" time="0.000175" file="tests/e2e/process-monitor.test.ts" line="154" assertions="1" />
    <testcase name="Process Monitor - Change Refresh Rate" classname="" time="0.000207" file="tests/e2e/process-monitor.test.ts" line="168" assertions="3" />
    <testcase name="Process Monitor - Navigation" classname="" time="0.000298" file="tests/e2e/process-monitor.test.ts" line="187" assertions="3" />
    <testcase name="Process Monitor - Keyboard Mapping" classname="" time="0.000042" file="tests/e2e/process-monitor.test.ts" line="210" assertions="6" />
    <testcase name="Process Monitor - Keyboard Sequence" classname="" time="0.000219" file="tests/e2e/process-monitor.test.ts" line="220" assertions="2" />
  </testsuite>
  <testsuite name="tests/e2e/log-viewer.test.ts" file="tests/e2e/log-viewer.test.ts" tests="8" assertions="43" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testcase name="Log Viewer - Initial State" classname="" time="0.00024" file="tests/e2e/log-viewer.test.ts" line="198" assertions="5" />
    <testcase name="Log Viewer - Toggle Search Mode" classname="" time="0.000354" file="tests/e2e/log-viewer.test.ts" line="213" assertions="2" />
    <testcase name="Log Viewer - Toggle Filters" classname="" time="0.000246" file="tests/e2e/log-viewer.test.ts" line="228" assertions="4" />
    <testcase name="Log Viewer - Level Filtering" classname="" time="0.000243" file="tests/e2e/log-viewer.test.ts" line="248" assertions="6" />
    <testcase name="Log Viewer - Navigation" classname="" time="0.000155" file="tests/e2e/log-viewer.test.ts" line="274" assertions="5" />
    <testcase name="Log Viewer - View Mode Toggle" classname="" time="0.000302" file="tests/e2e/log-viewer.test.ts" line="298" assertions="4" />
    <testcase name="Log Viewer - Keyboard Mapping" classname="" time="0.000087" file="tests/e2e/log-viewer.test.ts" line="321" assertions="11" />
    <testcase name="Log Viewer - Complex Workflow" classname="" time="0.000256" file="tests/e2e/log-viewer.test.ts" line="355" assertions="6" />
  </testsuite>
  <testsuite name="tests/e2e/recommended-approach.test.ts" file="tests/e2e/recommended-approach.test.ts" tests="4" assertions="21" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testcase name="Editor - Component Logic" classname="" time="0.000534" file="tests/e2e/recommended-approach.test.ts" line="111" assertions="7" />
    <testcase name="Editor - Keyboard Mapping" classname="" time="0.000067" file="tests/e2e/recommended-approach.test.ts" line="143" assertions="8" />
    <testcase name="Editor - Keyboard Sequence" classname="" time="0.000272" file="tests/e2e/recommended-approach.test.ts" line="161" assertions="3" />
    <testcase name="Editor - Subscription Logic" classname="" time="0.000064" file="tests/e2e/recommended-approach.test.ts" line="196" assertions="3" />
  </testsuite>
  <testsuite name="tests/e2e/log-viewer-component.test.ts" file="tests/e2e/log-viewer-component.test.ts" tests="8" assertions="0" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testcase name="Log Viewer Component - Initial State" classname="" time="0.000496" file="tests/e2e/log-viewer-component.test.ts" line="154" assertions="0" />
    <testcase name="Log Viewer Component - Toggle Search Mode" classname="" time="0.000418" file="tests/e2e/log-viewer-component.test.ts" line="175" assertions="0" />
    <testcase name="Log Viewer Component - Toggle Auto-scroll" classname="" time="0.000148" file="tests/e2e/log-viewer-component.test.ts" line="193" assertions="0" />
    <testcase name="Log Viewer Component - Level Filtering" classname="" time="0.000131" file="tests/e2e/log-viewer-component.test.ts" line="210" assertions="0" />
    <testcase name="Log Viewer Component - Navigation" classname="" time="0.000061" file="tests/e2e/log-viewer-component.test.ts" line="228" assertions="0" />
    <testcase name="Log Viewer Component - Toggle View Mode" classname="" time="0.000054" file="tests/e2e/log-viewer-component.test.ts" line="241" assertions="0" />
    <testcase name="Log Viewer Component - Toggle Filters" classname="" time="0.000061" file="tests/e2e/log-viewer-component.test.ts" line="254" assertions="0" />
    <testcase name="Log Viewer Component - Complex Workflow" classname="" time="0.000164" file="tests/e2e/log-viewer-component.test.ts" line="267" assertions="0" />
  </testsuite>
  <testsuite name="tests/e2e/package-manager.test.ts" file="tests/e2e/package-manager.test.ts" tests="10" assertions="42" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testcase name="Package Manager - Initial State" classname="" time="0.000273" file="tests/e2e/package-manager.test.ts" line="151" assertions="6" />
    <testcase name="Package Manager - Tab Navigation" classname="" time="0.0003" file="tests/e2e/package-manager.test.ts" line="167" assertions="6" />
    <testcase name="Package Manager - Install Package" classname="" time="0.00014" file="tests/e2e/package-manager.test.ts" line="193" assertions="2" />
    <testcase name="Package Manager - Uninstall Package" classname="" time="0.000133" file="tests/e2e/package-manager.test.ts" line="208" assertions="2" />
    <testcase name="Package Manager - Update Package" classname="" time="0.000233" file="tests/e2e/package-manager.test.ts" line="223" assertions="2" />
    <testcase name="Package Manager - Bulk Install" classname="" time="0.000223" file="tests/e2e/package-manager.test.ts" line="238" assertions="2" />
    <testcase name="Package Manager - Package Selection" classname="" time="0.000169" file="tests/e2e/package-manager.test.ts" line="253" assertions="2" />
    <testcase name="Package Manager - Search" classname="" time="0.000153" file="tests/e2e/package-manager.test.ts" line="268" assertions="3" />
    <testcase name="Package Manager - Keyboard Mapping" classname="" time="0.000052" file="tests/e2e/package-manager.test.ts" line="287" assertions="8" />
    <testcase name="Package Manager - Complete Workflow" classname="" time="0.000403" file="tests/e2e/package-manager.test.ts" line="299" assertions="9" />
  </testsuite>
  <testsuite name="tests/e2e/git-dashboard.test.ts" file="tests/e2e/git-dashboard.test.ts" tests="9" assertions="39" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testcase name="Git Dashboard - Initial State" classname="" time="0.00095" file="tests/e2e/git-dashboard.test.ts" line="148" assertions="6" />
    <testcase name="Git Dashboard - Panel Navigation" classname="" time="0.00032" file="tests/e2e/git-dashboard.test.ts" line="164" assertions="7" />
    <testcase name="Git Dashboard - File Selection" classname="" time="0.000131" file="tests/e2e/git-dashboard.test.ts" line="191" assertions="2" />
    <testcase name="Git Dashboard - Stage File" classname="" time="0.000172" file="tests/e2e/git-dashboard.test.ts" line="206" assertions="2" />
    <testcase name="Git Dashboard - Unstage File" classname="" time="0.000287" file="tests/e2e/git-dashboard.test.ts" line="222" assertions="2" />
    <testcase name="Git Dashboard - Commit Files" classname="" time="0.00034" file="tests/e2e/git-dashboard.test.ts" line="239" assertions="3" />
    <testcase name="Git Dashboard - Refresh Status" classname="" time="0.000146" file="tests/e2e/git-dashboard.test.ts" line="259" assertions="1" />
    <testcase name="Git Dashboard - Keyboard Mapping" classname="" time="0.000052" file="tests/e2e/git-dashboard.test.ts" line="273" assertions="8" />
    <testcase name="Git Dashboard - Complete Git Workflow" classname="" time="0.000525" file="tests/e2e/git-dashboard.test.ts" line="285" assertions="8" />
  </testsuite>
  <testsuite name="__tests__/unit/debug-router.test.ts" file="__tests__/unit/debug-router.test.ts" tests="2" assertions="9" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Debug Router" file="__tests__/unit/debug-router.test.ts" line="7" tests="2" assertions="9" failures="0" skipped="0" time="0.001" hostname="Andrews-MacBook-Pro-188.local">
      <testcase name="imports router correctly" classname="Debug Router" time="0.001391" file="__tests__/unit/debug-router.test.ts" line="8" assertions="3" />
      <testcase name="creates router instance" classname="Debug Router" time="0.000099" file="__tests__/unit/debug-router.test.ts" line="16" assertions="6" />
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/jsx-runtime-edge.test.ts" file="__tests__/unit/jsx-runtime-edge.test.ts" tests="19" assertions="32" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="JSX Runtime - Edge Cases" file="__tests__/unit/jsx-runtime-edge.test.ts" line="10" tests="19" assertions="32" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="jsx function" file="__tests__/unit/jsx-runtime-edge.test.ts" line="11" tests="9" assertions="12" failures="0" skipped="0" time="0.001" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles text elements" classname="jsx function &amp;gt; JSX Runtime - Edge Cases" time="0.001154" file="__tests__/unit/jsx-runtime-edge.test.ts" line="12" assertions="1" />
        <testcase name="handles vstack elements" classname="jsx function &amp;gt; JSX Runtime - Edge Cases" time="0.000373" file="__tests__/unit/jsx-runtime-edge.test.ts" line="18" assertions="2" />
        <testcase name="handles hstack elements" classname="jsx function &amp;gt; JSX Runtime - Edge Cases" time="0.000398" file="__tests__/unit/jsx-runtime-edge.test.ts" line="28" assertions="2" />
        <testcase name="handles custom components" classname="jsx function &amp;gt; JSX Runtime - Edge Cases" time="0.000058" file="__tests__/unit/jsx-runtime-edge.test.ts" line="38" assertions="1" />
        <testcase name="handles null children" classname="jsx function &amp;gt; JSX Runtime - Edge Cases" time="0.000047" file="__tests__/unit/jsx-runtime-edge.test.ts" line="47" assertions="1" />
        <testcase name="handles undefined children" classname="jsx function &amp;gt; JSX Runtime - Edge Cases" time="0.000036" file="__tests__/unit/jsx-runtime-edge.test.ts" line="53" assertions="1" />
        <testcase name="handles empty props" classname="jsx function &amp;gt; JSX Runtime - Edge Cases" time="0.000034" file="__tests__/unit/jsx-runtime-edge.test.ts" line="59" assertions="1" />
        <testcase name="handles numeric children" classname="jsx function &amp;gt; JSX Runtime - Edge Cases" time="0.00006" file="__tests__/unit/jsx-runtime-edge.test.ts" line="65" assertions="1" />
        <testcase name="handles boolean children" classname="jsx function &amp;gt; JSX Runtime - Edge Cases" time="0.000062" file="__tests__/unit/jsx-runtime-edge.test.ts" line="71" assertions="2" />
      </testsuite>
      <testsuite name="jsxs function" file="__tests__/unit/jsx-runtime-edge.test.ts" line="83" tests="3" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles multiple children" classname="jsxs function &amp;gt; JSX Runtime - Edge Cases" time="0.000151" file="__tests__/unit/jsx-runtime-edge.test.ts" line="84" assertions="3" />
        <testcase name="handles mixed children types" classname="jsxs function &amp;gt; JSX Runtime - Edge Cases" time="0.000086" file="__tests__/unit/jsx-runtime-edge.test.ts" line="99" assertions="3" />
        <testcase name="filters out null and undefined" classname="jsxs function &amp;gt; JSX Runtime - Edge Cases" time="0.000043" file="__tests__/unit/jsx-runtime-edge.test.ts" line="116" assertions="1" />
      </testsuite>
      <testsuite name="jsxDEV function" file="__tests__/unit/jsx-runtime-edge.test.ts" line="126" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="works in development mode" classname="jsxDEV function &amp;gt; JSX Runtime - Edge Cases" time="0.000058" file="__tests__/unit/jsx-runtime-edge.test.ts" line="127" assertions="1" />
        <testcase name="handles source information" classname="jsxDEV function &amp;gt; JSX Runtime - Edge Cases" time="0.000092" file="__tests__/unit/jsx-runtime-edge.test.ts" line="141" assertions="2" />
      </testsuite>
      <testsuite name="Fragment" file="__tests__/unit/jsx-runtime-edge.test.ts" line="160" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="Fragment is defined" classname="Fragment &amp;gt; JSX Runtime - Edge Cases" time="0.000013" file="__tests__/unit/jsx-runtime-edge.test.ts" line="161" assertions="2" />
        <testcase name="can be used in JSX" classname="Fragment &amp;gt; JSX Runtime - Edge Cases" time="0.0001" file="__tests__/unit/jsx-runtime-edge.test.ts" line="166" assertions="1" />
      </testsuite>
      <testsuite name="Integration patterns" file="__tests__/unit/jsx-runtime-edge.test.ts" line="179" tests="3" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles nested components" classname="Integration patterns &amp;gt; JSX Runtime - Edge Cases" time="0.000142" file="__tests__/unit/jsx-runtime-edge.test.ts" line="180" assertions="2" />
        <testcase name="handles conditional rendering" classname="Integration patterns &amp;gt; JSX Runtime - Edge Cases" time="0.000142" file="__tests__/unit/jsx-runtime-edge.test.ts" line="202" assertions="2" />
        <testcase name="handles array mapping" classname="Integration patterns &amp;gt; JSX Runtime - Edge Cases" time="0.000159" file="__tests__/unit/jsx-runtime-edge.test.ts" line="218" assertions="3" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/performance/rendering.bench.test.ts" file="__tests__/performance/rendering.bench.test.ts" tests="6" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Rendering Performance" file="__tests__/performance/rendering.bench.test.ts" line="13" tests="6" assertions="6" failures="0" skipped="0" time="0.153" hostname="Andrews-MacBook-Pro-188.local">
      <testcase name="simple text rendering" classname="Rendering Performance" time="0.001703" file="__tests__/performance/rendering.bench.test.ts" line="26" assertions="1" />
      <testcase name="styled text rendering" classname="Rendering Performance" time="0.011223" file="__tests__/performance/rendering.bench.test.ts" line="34" assertions="1" />
      <testcase name="vstack with 10 items" classname="Rendering Performance" time="0.007952" file="__tests__/performance/rendering.bench.test.ts" line="45" assertions="1" />
      <testcase name="vstack with 100 items" classname="Rendering Performance" time="0.002535" file="__tests__/performance/rendering.bench.test.ts" line="55" assertions="1" />
      <testcase name="nested layout rendering" classname="Rendering Performance" time="0.112601" file="__tests__/performance/rendering.bench.test.ts" line="65" assertions="1" />
      <testcase name="panel rendering" classname="Rendering Performance" time="0.020439" file="__tests__/performance/rendering.bench.test.ts" line="79" assertions="1" />
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/performance/cli-startup.bench.test.ts" file="__tests__/performance/cli-startup.bench.test.ts" tests="6" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="CLI Startup Performance" file="__tests__/performance/cli-startup.bench.test.ts" line="13" tests="6" assertions="6" failures="0" skipped="0" time="0.003" hostname="Andrews-MacBook-Pro-188.local">
      <testcase name="minimal config parsing" classname="CLI Startup Performance" time="0.000558" file="__tests__/performance/cli-startup.bench.test.ts" line="60" assertions="1" />
      <testcase name="complex config parsing" classname="CLI Startup Performance" time="0.003182" file="__tests__/performance/cli-startup.bench.test.ts" line="68" assertions="1" />
      <testcase name="router initialization - minimal" classname="CLI Startup Performance" time="0.000184" file="__tests__/performance/cli-startup.bench.test.ts" line="76" assertions="1" />
      <testcase name="router initialization - complex" classname="CLI Startup Performance" time="0.000152" file="__tests__/performance/cli-startup.bench.test.ts" line="83" assertions="1" />
      <testcase name="help generation - minimal" classname="CLI Startup Performance" time="0.000239" file="__tests__/performance/cli-startup.bench.test.ts" line="90" assertions="1" />
      <testcase name="help generation - complex" classname="CLI Startup Performance" time="0.000919" file="__tests__/performance/cli-startup.bench.test.ts" line="99" assertions="1" />
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/e2e/button-showcase.test.ts" file="__tests__/e2e/button-showcase.test.ts" tests="8" assertions="14" failures="0" skipped="0" time="0.001" hostname="Andrews-MacBook-Pro-188.local">
    <testcase name="Button Showcase - Initial State" classname="" time="0.001104" file="__tests__/e2e/button-showcase.test.ts" line="119" assertions="4" />
    <testcase name="Button Showcase - Navigation Down" classname="" time="0.00031" file="__tests__/e2e/button-showcase.test.ts" line="133" assertions="2" />
    <testcase name="Button Showcase - Navigation Up" classname="" time="0.00017" file="__tests__/e2e/button-showcase.test.ts" line="148" assertions="1" />
    <testcase name="Button Showcase - Button Activation" classname="" time="0.000188" file="__tests__/e2e/button-showcase.test.ts" line="163" assertions="1" />
    <testcase name="Button Showcase - Disabled Button Handling" classname="" time="0.00015" file="__tests__/e2e/button-showcase.test.ts" line="181" assertions="1" />
    <testcase name="Button Showcase - Direct Button Click" classname="" time="0.000053" file="__tests__/e2e/button-showcase.test.ts" line="198" assertions="1" />
    <testcase name="Button Showcase - Clear Message" classname="" time="0.000251" file="__tests__/e2e/button-showcase.test.ts" line="212" assertions="2" />
    <testcase name="Button Showcase - Navigation Bounds" classname="" time="0.00025" file="__tests__/e2e/button-showcase.test.ts" line="228" assertions="2" />
  </testsuite>
  <testsuite name="__tests__/e2e/layout-patterns.test.ts" file="__tests__/e2e/layout-patterns.test.ts" tests="8" assertions="28" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testcase name="Layout Patterns - Initial State" classname="" time="0.000229" file="__tests__/e2e/layout-patterns.test.ts" line="69" assertions="3" />
    <testcase name="Layout Patterns - Next Layout Navigation" classname="" time="0.000183" file="__tests__/e2e/layout-patterns.test.ts" line="82" assertions="3" />
    <testcase name="Layout Patterns - Previous Layout Navigation" classname="" time="0.000146" file="__tests__/e2e/layout-patterns.test.ts" line="98" assertions="2" />
    <testcase name="Layout Patterns - Wrap Around Navigation" classname="" time="0.000186" file="__tests__/e2e/layout-patterns.test.ts" line="114" assertions="2" />
    <testcase name="Layout Patterns - Reverse Wrap Around" classname="" time="0.000114" file="__tests__/e2e/layout-patterns.test.ts" line="132" assertions="2" />
    <testcase name="Layout Patterns - All Layout Names" classname="" time="0.000185" file="__tests__/e2e/layout-patterns.test.ts" line="147" assertions="8" />
    <testcase name="Layout Patterns - Navigation Instructions" classname="" time="0.000125" file="__tests__/e2e/layout-patterns.test.ts" line="175" assertions="6" />
    <testcase name="Layout Patterns - Rapid Navigation" classname="" time="0.000179" file="__tests__/e2e/layout-patterns.test.ts" line="191" assertions="2" />
  </testsuite>
  <testsuite name="__tests__/unit/core/errors.test.ts" file="__tests__/unit/core/errors.test.ts" tests="34" assertions="108" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Error Classes" file="__tests__/unit/core/errors.test.ts" line="27" tests="15" assertions="46" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="TerminalError" file="__tests__/unit/core/errors.test.ts" line="28" tests="2" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates terminal error with required fields" classname="TerminalError &amp;gt; Error Classes" time="0.000076" file="__tests__/unit/core/errors.test.ts" line="29" assertions="5" />
        <testcase name="includes cause and context" classname="TerminalError &amp;gt; Error Classes" time="0.000029" file="__tests__/unit/core/errors.test.ts" line="42" assertions="2" />
      </testsuite>
      <testsuite name="InputError" file="__tests__/unit/core/errors.test.ts" line="55" tests="2" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates input error for different devices" classname="InputError &amp;gt; Error Classes" time="0.000028" file="__tests__/unit/core/errors.test.ts" line="56" assertions="4" />
        <testcase name="handles error without operation" classname="InputError &amp;gt; Error Classes" time="0.000012" file="__tests__/unit/core/errors.test.ts" line="73" assertions="1" />
      </testsuite>
      <testsuite name="RenderError" file="__tests__/unit/core/errors.test.ts" line="82" tests="2" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates render error" classname="RenderError &amp;gt; Error Classes" time="0.000021" file="__tests__/unit/core/errors.test.ts" line="83" assertions="5" />
        <testcase name="handles error without operation" classname="RenderError &amp;gt; Error Classes" time="0.000012" file="__tests__/unit/core/errors.test.ts" line="97" assertions="1" />
      </testsuite>
      <testsuite name="StorageError" file="__tests__/unit/core/errors.test.ts" line="106" tests="2" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates storage error with path" classname="StorageError &amp;gt; Error Classes" time="0.000041" file="__tests__/unit/core/errors.test.ts" line="107" assertions="4" />
        <testcase name="creates storage error without path" classname="StorageError &amp;gt; Error Classes" time="0.000012" file="__tests__/unit/core/errors.test.ts" line="119" assertions="1" />
      </testsuite>
      <testsuite name="ConfigError" file="__tests__/unit/core/errors.test.ts" line="128" tests="2" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates config error with key and expected" classname="ConfigError &amp;gt; Error Classes" time="0.000033" file="__tests__/unit/core/errors.test.ts" line="129" assertions="5" />
        <testcase name="creates config error without key" classname="ConfigError &amp;gt; Error Classes" time="0.000016" file="__tests__/unit/core/errors.test.ts" line="143" assertions="1" />
      </testsuite>
      <testsuite name="ComponentError" file="__tests__/unit/core/errors.test.ts" line="152" tests="1" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates component error" classname="ComponentError &amp;gt; Error Classes" time="0.000024" file="__tests__/unit/core/errors.test.ts" line="153" assertions="5" />
      </testsuite>
      <testsuite name="ApplicationError" file="__tests__/unit/core/errors.test.ts" line="168" tests="2" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates application error" classname="ApplicationError &amp;gt; Error Classes" time="0.000017" file="__tests__/unit/core/errors.test.ts" line="169" assertions="5" />
        <testcase name="handles error without operation" classname="ApplicationError &amp;gt; Error Classes" time="0.000012" file="__tests__/unit/core/errors.test.ts" line="183" assertions="1" />
      </testsuite>
      <testsuite name="ValidationError" file="__tests__/unit/core/errors.test.ts" line="192" tests="2" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates validation error" classname="ValidationError &amp;gt; Error Classes" time="0.000034" file="__tests__/unit/core/errors.test.ts" line="193" assertions="5" />
        <testcase name="creates validation error with multiple fields" classname="ValidationError &amp;gt; Error Classes" time="0.000021" file="__tests__/unit/core/errors.test.ts" line="208" assertions="1" />
      </testsuite>
    </testsuite>
    <testsuite name="Error Utilities" file="__tests__/unit/core/errors.test.ts" line="220" tests="2" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="isAppError" file="__tests__/unit/core/errors.test.ts" line="221" tests="1" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="identifies app errors" classname="isAppError &amp;gt; Error Utilities" time="0.00007" file="__tests__/unit/core/errors.test.ts" line="222" assertions="6" />
      </testsuite>
      <testsuite name="ErrorCode enum" file="__tests__/unit/core/errors.test.ts" line="236" tests="1" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="has all error codes" classname="ErrorCode enum &amp;gt; Error Utilities" time="0.000003" file="__tests__/unit/core/errors.test.ts" line="237" assertions="2" />
      </testsuite>
    </testsuite>
    <testsuite name="Recovery Strategies" file="__tests__/unit/core/errors.test.ts" line="246" tests="6" assertions="9" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="retry strategy" file="__tests__/unit/core/errors.test.ts" line="247" tests="2" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates retry strategy" classname="retry strategy &amp;gt; Recovery Strategies" time="0.000038" file="__tests__/unit/core/errors.test.ts" line="248" assertions="3" />
        <testcase name="has default values" classname="retry strategy &amp;gt; Recovery Strategies" time="0.000014" file="__tests__/unit/core/errors.test.ts" line="256" assertions="2" />
      </testsuite>
      <testsuite name="fallback strategy" file="__tests__/unit/core/errors.test.ts" line="264" tests="1" assertions="1" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="uses fallback value on error" classname="fallback strategy &amp;gt; Recovery Strategies" time="0.000113" file="__tests__/unit/core/errors.test.ts" line="265" assertions="1" />
      </testsuite>
      <testsuite name="ignore strategy" file="__tests__/unit/core/errors.test.ts" line="280" tests="1" assertions="1" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="ignores error and returns null" classname="ignore strategy &amp;gt; Recovery Strategies" time="0.000055" file="__tests__/unit/core/errors.test.ts" line="281" assertions="1" />
      </testsuite>
      <testsuite name="restoreTerminal strategy" file="__tests__/unit/core/errors.test.ts" line="292" tests="2" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="can recover non-fatal terminal errors" classname="restoreTerminal strategy &amp;gt; Recovery Strategies" time="0.000038" file="__tests__/unit/core/errors.test.ts" line="293" assertions="1" />
        <testcase name="cannot recover fatal terminal errors" classname="restoreTerminal strategy &amp;gt; Recovery Strategies" time="0.00002" file="__tests__/unit/core/errors.test.ts" line="300" assertions="1" />
      </testsuite>
    </testsuite>
    <testsuite name="Error Boundaries" file="__tests__/unit/core/errors.test.ts" line="310" tests="3" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="withErrorBoundary" file="__tests__/unit/core/errors.test.ts" line="311" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles errors with fallback" classname="withErrorBoundary &amp;gt; Error Boundaries" time="0.000128" file="__tests__/unit/core/errors.test.ts" line="312" assertions="1" />
        <testcase name="calls onError handler" classname="withErrorBoundary &amp;gt; Error Boundaries" time="0.000118" file="__tests__/unit/core/errors.test.ts" line="326" assertions="2" />
      </testsuite>
      <testsuite name="withRecovery" file="__tests__/unit/core/errors.test.ts" line="347" tests="1" assertions="1" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="applies recovery strategy" classname="withRecovery &amp;gt; Error Boundaries" time="0.000094" file="__tests__/unit/core/errors.test.ts" line="348" assertions="1" />
      </testsuite>
    </testsuite>
    <testsuite name="ErrorUtils" file="__tests__/unit/core/errors.test.ts" line="361" tests="8" assertions="41" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="isRecoverable" file="__tests__/unit/core/errors.test.ts" line="362" tests="1" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="identifies recoverable errors" classname="isRecoverable &amp;gt; ErrorUtils" time="0.000067" file="__tests__/unit/core/errors.test.ts" line="363" assertions="8" />
      </testsuite>
      <testsuite name="isCritical" file="__tests__/unit/core/errors.test.ts" line="376" tests="1" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="identifies critical errors" classname="isCritical &amp;gt; ErrorUtils" time="0.000025" file="__tests__/unit/core/errors.test.ts" line="377" assertions="4" />
      </testsuite>
      <testsuite name="getUserMessage" file="__tests__/unit/core/errors.test.ts" line="386" tests="1" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="converts errors to user-friendly messages" classname="getUserMessage &amp;gt; ErrorUtils" time="0.000054" file="__tests__/unit/core/errors.test.ts" line="387" assertions="8" />
      </testsuite>
      <testsuite name="getDebugInfo" file="__tests__/unit/core/errors.test.ts" line="414" tests="1" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="returns debug information" classname="getDebugInfo &amp;gt; ErrorUtils" time="0.000057" file="__tests__/unit/core/errors.test.ts" line="415" assertions="5" />
      </testsuite>
      <testsuite name="fromUnknown" file="__tests__/unit/core/errors.test.ts" line="427" tests="3" assertions="10" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="returns AppError if already an AppError" classname="fromUnknown &amp;gt; ErrorUtils" time="0.000016" file="__tests__/unit/core/errors.test.ts" line="428" assertions="1" />
        <testcase name="wraps Error in ApplicationError" classname="fromUnknown &amp;gt; ErrorUtils" time="0.000025" file="__tests__/unit/core/errors.test.ts" line="435" assertions="5" />
        <testcase name="wraps unknown value in ApplicationError" classname="fromUnknown &amp;gt; ErrorUtils" time="0.00003" file="__tests__/unit/core/errors.test.ts" line="446" assertions="4" />
      </testsuite>
      <testsuite name="logError" file="__tests__/unit/core/errors.test.ts" line="456" tests="1" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="logs error with debug info" classname="logError &amp;gt; ErrorUtils" time="0.000016" file="__tests__/unit/core/errors.test.ts" line="457" assertions="6" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/core/view-cache.test.ts" file="__tests__/unit/core/view-cache.test.ts" tests="37" assertions="64" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="View Cache System" file="__tests__/unit/core/view-cache.test.ts" line="28" tests="37" assertions="64" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="CacheEntry interface" file="__tests__/unit/core/view-cache.test.ts" line="29" tests="1" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="defines cache entry structure" classname="CacheEntry interface &amp;gt; View Cache System" time="0.000071" file="__tests__/unit/core/view-cache.test.ts" line="30" assertions="3" />
      </testsuite>
      <testsuite name="ViewCache class" file="__tests__/unit/core/view-cache.test.ts" line="43" tests="23" assertions="37" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testsuite name="constructor" file="__tests__/unit/core/view-cache.test.ts" line="50" tests="4" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="creates cache with default options" classname="constructor &amp;gt; ViewCache class &amp;gt; View Cache System" time="0.000012" file="__tests__/unit/core/view-cache.test.ts" line="51" assertions="1" />
          <testcase name="accepts custom maxSize option" classname="constructor &amp;gt; ViewCache class &amp;gt; View Cache System" time="0.000012" file="__tests__/unit/core/view-cache.test.ts" line="56" assertions="1" />
          <testcase name="accepts custom maxAge option" classname="constructor &amp;gt; ViewCache class &amp;gt; View Cache System" time="0.00001" file="__tests__/unit/core/view-cache.test.ts" line="61" assertions="1" />
          <testcase name="accepts both custom options" classname="constructor &amp;gt; ViewCache class &amp;gt; View Cache System" time="0.00002" file="__tests__/unit/core/view-cache.test.ts" line="66" assertions="1" />
        </testsuite>
        <testsuite name="renderCached" file="__tests__/unit/core/view-cache.test.ts" line="72" tests="6" assertions="9" failures="0" skipped="0" time="0.016" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="renders and caches new view" classname="renderCached &amp;gt; ViewCache class &amp;gt; View Cache System" time="0.000277" file="__tests__/unit/core/view-cache.test.ts" line="73" assertions="1" />
          <testcase name="returns cached result on second call" classname="renderCached &amp;gt; ViewCache class &amp;gt; View Cache System" time="0.000055" file="__tests__/unit/core/view-cache.test.ts" line="82" assertions="2" />
          <testcase name="increments access count on cache hit" classname="renderCached &amp;gt; ViewCache class &amp;gt; View Cache System" time="0.000135" file="__tests__/unit/core/view-cache.test.ts" line="95" assertions="1" />
          <testcase name="handles async render functions" classname="renderCached &amp;gt; ViewCache class &amp;gt; View Cache System" time="0.011547" file="__tests__/unit/core/view-cache.test.ts" line="108" assertions="1" />
          <testcase name="renders different results for different keys" classname="renderCached &amp;gt; ViewCache class &amp;gt; View Cache System" time="0.000115" file="__tests__/unit/core/view-cache.test.ts" line="117" assertions="2" />
          <testcase name="overwrites expired cache entries" classname="renderCached &amp;gt; ViewCache class &amp;gt; View Cache System" time="0.005547" file="__tests__/unit/core/view-cache.test.ts" line="128" assertions="2" />
        </testsuite>
        <testsuite name="generateKey" file="__tests__/unit/core/view-cache.test.ts" line="146" tests="7" assertions="10" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="generates consistent keys for same view" classname="generateKey &amp;gt; ViewCache class &amp;gt; View Cache System" time="0.00031" file="__tests__/unit/core/view-cache.test.ts" line="147" assertions="1" />
          <testcase name="generates different keys for different views" classname="generateKey &amp;gt; ViewCache class &amp;gt; View Cache System" time="0.000027" file="__tests__/unit/core/view-cache.test.ts" line="156" assertions="1" />
          <testcase name="includes props in key generation" classname="generateKey &amp;gt; ViewCache class &amp;gt; View Cache System" time="0.00003" file="__tests__/unit/core/view-cache.test.ts" line="166" assertions="1" />
          <testcase name="handles views without props" classname="generateKey &amp;gt; ViewCache class &amp;gt; View Cache System" time="0.00002" file="__tests__/unit/core/view-cache.test.ts" line="175" assertions="2" />
          <testcase name="includes view dimensions in key" classname="generateKey &amp;gt; ViewCache class &amp;gt; View Cache System" time="0.000019" file="__tests__/unit/core/view-cache.test.ts" line="184" assertions="1" />
          <testcase name="handles views with type property" classname="generateKey &amp;gt; ViewCache class &amp;gt; View Cache System" time="0.000078" file="__tests__/unit/core/view-cache.test.ts" line="194" assertions="2" />
          <testcase name="handles complex nested props" classname="generateKey &amp;gt; ViewCache class &amp;gt; View Cache System" time="0.000058" file="__tests__/unit/core/view-cache.test.ts" line="206" assertions="2" />
        </testsuite>
        <testsuite name="clear" file="__tests__/unit/core/view-cache.test.ts" line="221" tests="1" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="removes all cache entries" classname="clear &amp;gt; ViewCache class &amp;gt; View Cache System" time="0.000107" file="__tests__/unit/core/view-cache.test.ts" line="222" assertions="2" />
        </testsuite>
        <testsuite name="getStats" file="__tests__/unit/core/view-cache.test.ts" line="241" tests="3" assertions="8" failures="0" skipped="0" time="0.01" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="returns cache statistics" classname="getStats &amp;gt; ViewCache class &amp;gt; View Cache System" time="0.00006" file="__tests__/unit/core/view-cache.test.ts" line="242" assertions="6" />
          <testcase name="calculates total access correctly" classname="getStats &amp;gt; ViewCache class &amp;gt; View Cache System" time="0.00004" file="__tests__/unit/core/view-cache.test.ts" line="261" assertions="1" />
          <testcase name="calculates average age" classname="getStats &amp;gt; ViewCache class &amp;gt; View Cache System" time="0.010916" file="__tests__/unit/core/view-cache.test.ts" line="273" assertions="1" />
        </testsuite>
        <testsuite name="cache eviction" file="__tests__/unit/core/view-cache.test.ts" line="286" tests="2" assertions="4" failures="0" skipped="0" time="0.016" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="evicts expired entries" classname="cache eviction &amp;gt; ViewCache class &amp;gt; View Cache System" time="0.016225" file="__tests__/unit/core/view-cache.test.ts" line="287" assertions="2" />
          <testcase name="evicts least accessed entries when size limit exceeded" classname="cache eviction &amp;gt; ViewCache class &amp;gt; View Cache System" time="0.000223" file="__tests__/unit/core/view-cache.test.ts" line="305" assertions="2" />
        </testsuite>
      </testsuite>
      <testsuite name="globalViewCache" file="__tests__/unit/core/view-cache.test.ts" line="328" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="provides global cache instance" classname="globalViewCache &amp;gt; View Cache System" time="0.000025" file="__tests__/unit/core/view-cache.test.ts" line="329" assertions="2" />
        <testcase name="can be used across modules" classname="globalViewCache &amp;gt; View Cache System" time="0.000046" file="__tests__/unit/core/view-cache.test.ts" line="334" assertions="1" />
      </testsuite>
      <testsuite name="memoizeRender" file="__tests__/unit/core/view-cache.test.ts" line="344" tests="5" assertions="6" failures="0" skipped="0" time="0.006" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates memoized render function" classname="memoizeRender &amp;gt; View Cache System" time="0.000025" file="__tests__/unit/core/view-cache.test.ts" line="349" assertions="1" />
        <testcase name="caches render results" classname="memoizeRender &amp;gt; View Cache System" time="0.00024" file="__tests__/unit/core/view-cache.test.ts" line="356" assertions="2" />
        <testcase name="uses custom key function when provided" classname="memoizeRender &amp;gt; View Cache System" time="0.000068" file="__tests__/unit/core/view-cache.test.ts" line="371" assertions="1" />
        <testcase name="handles render errors appropriately" classname="memoizeRender &amp;gt; View Cache System" time="0.001118" file="__tests__/unit/core/view-cache.test.ts" line="382" assertions="1" />
        <testcase name="works with async render functions" classname="memoizeRender &amp;gt; View Cache System" time="0.005269" file="__tests__/unit/core/view-cache.test.ts" line="398" assertions="1" />
      </testsuite>
      <testsuite name="integration scenarios" file="__tests__/unit/core/view-cache.test.ts" line="409" tests="4" assertions="10" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles high-frequency rendering" classname="integration scenarios &amp;gt; View Cache System" time="0.000663" file="__tests__/unit/core/view-cache.test.ts" line="414" assertions="3" />
        <testcase name="maintains performance under memory pressure" classname="integration scenarios &amp;gt; View Cache System" time="0.000216" file="__tests__/unit/core/view-cache.test.ts" line="436" assertions="1" />
        <testcase name="handles complex view hierarchies" classname="integration scenarios &amp;gt; View Cache System" time="0.000105" file="__tests__/unit/core/view-cache.test.ts" line="449" assertions="2" />
        <testcase name="works with memoized render functions in real scenarios" classname="integration scenarios &amp;gt; View Cache System" time="0.000246" file="__tests__/unit/core/view-cache.test.ts" line="472" assertions="4" />
      </testsuite>
      <testsuite name="performance characteristics" file="__tests__/unit/core/view-cache.test.ts" line="498" tests="2" assertions="5" failures="0" skipped="0" time="0.028" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="provides faster access for cached items" classname="performance characteristics &amp;gt; View Cache System" time="0.021359" file="__tests__/unit/core/view-cache.test.ts" line="499" assertions="3" />
        <testcase name="handles large cache sizes efficiently" classname="performance characteristics &amp;gt; View Cache System" time="0.007387" file="__tests__/unit/core/view-cache.test.ts" line="522" assertions="2" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/core/types.test.ts" file="__tests__/unit/core/types.test.ts" tests="39" assertions="128" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Core Types" file="__tests__/unit/core/types.test.ts" line="35" tests="39" assertions="128" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="View Interface" file="__tests__/unit/core/types.test.ts" line="36" tests="3" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates a valid view with render function" classname="View Interface &amp;gt; Core Types" time="0.000076" file="__tests__/unit/core/types.test.ts" line="37" assertions="3" />
        <testcase name="creates view with only render function" classname="View Interface &amp;gt; Core Types" time="0.000023" file="__tests__/unit/core/types.test.ts" line="49" assertions="3" />
        <testcase name="view render returns Effect" classname="View Interface &amp;gt; Core Types" time="0.000094" file="__tests__/unit/core/types.test.ts" line="59" assertions="1" />
      </testsuite>
      <testsuite name="Component Interface" file="__tests__/unit/core/types.test.ts" line="69" tests="5" assertions="9" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="has required component methods" classname="Component Interface &amp;gt; Core Types" time="0.00001" file="__tests__/unit/core/types.test.ts" line="90" assertions="3" />
        <testcase name="init returns model and commands" classname="Component Interface &amp;gt; Core Types" time="0.000062" file="__tests__/unit/core/types.test.ts" line="96" assertions="2" />
        <testcase name="update processes messages correctly" classname="Component Interface &amp;gt; Core Types" time="0.000075" file="__tests__/unit/core/types.test.ts" line="102" assertions="2" />
        <testcase name="view renders model" classname="Component Interface &amp;gt; Core Types" time="0.000061" file="__tests__/unit/core/types.test.ts" line="112" assertions="1" />
        <testcase name="handles component with subscriptions" classname="Component Interface &amp;gt; Core Types" time="0.000023" file="__tests__/unit/core/types.test.ts" line="120" assertions="1" />
      </testsuite>
      <testsuite name="System Messages" file="__tests__/unit/core/types.test.ts" line="130" tests="4" assertions="14" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates KeyPress system message" classname="System Messages &amp;gt; Core Types" time="0.000029" file="__tests__/unit/core/types.test.ts" line="131" assertions="2" />
        <testcase name="creates MouseEvent system message" classname="System Messages &amp;gt; Core Types" time="0.000023" file="__tests__/unit/core/types.test.ts" line="147" assertions="3" />
        <testcase name="creates WindowResize system message" classname="System Messages &amp;gt; Core Types" time="0.00001" file="__tests__/unit/core/types.test.ts" line="168" assertions="3" />
        <testcase name="creates other system messages" classname="System Messages &amp;gt; Core Types" time="0.00003" file="__tests__/unit/core/types.test.ts" line="184" assertions="6" />
      </testsuite>
      <testsuite name="Component Messages" file="__tests__/unit/core/types.test.ts" line="200" tests="1" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="combines system and custom messages" classname="Component Messages &amp;gt; Core Types" time="0.000015" file="__tests__/unit/core/types.test.ts" line="203" assertions="3" />
      </testsuite>
      <testsuite name="Input Events" file="__tests__/unit/core/types.test.ts" line="213" tests="2" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates MouseEvent" classname="Input Events &amp;gt; Core Types" time="0.000007" file="__tests__/unit/core/types.test.ts" line="214" assertions="4" />
        <testcase name="creates WindowSize" classname="Input Events &amp;gt; Core Types" time="0.000011" file="__tests__/unit/core/types.test.ts" line="231" assertions="2" />
      </testsuite>
      <testsuite name="Application Configuration" file="__tests__/unit/core/types.test.ts" line="242" tests="4" assertions="14" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates AppOptions with all properties" classname="Application Configuration &amp;gt; Core Types" time="0.000018" file="__tests__/unit/core/types.test.ts" line="243" assertions="5" />
        <testcase name="creates minimal AppOptions" classname="Application Configuration &amp;gt; Core Types" time="0.000008" file="__tests__/unit/core/types.test.ts" line="259" assertions="2" />
        <testcase name="creates Viewport" classname="Application Configuration &amp;gt; Core Types" time="0.000011" file="__tests__/unit/core/types.test.ts" line="266" assertions="4" />
        <testcase name="creates TerminalCapabilities" classname="Application Configuration &amp;gt; Core Types" time="0.000012" file="__tests__/unit/core/types.test.ts" line="280" assertions="3" />
      </testsuite>
      <testsuite name="Error Types" file="__tests__/unit/core/types.test.ts" line="295" tests="8" assertions="52" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates TerminalError" classname="Error Types &amp;gt; Core Types" time="0.00009" file="__tests__/unit/core/types.test.ts" line="296" assertions="4" />
        <testcase name="creates TerminalError without cause" classname="Error Types &amp;gt; Core Types" time="0.000019" file="__tests__/unit/core/types.test.ts" line="308" assertions="3" />
        <testcase name="creates InputError with all device types" classname="Error Types &amp;gt; Core Types" time="0.000057" file="__tests__/unit/core/types.test.ts" line="318" assertions="9" />
        <testcase name="creates RenderError with all phases" classname="Error Types &amp;gt; Core Types" time="0.00008" file="__tests__/unit/core/types.test.ts" line="346" assertions="11" />
        <testcase name="creates StorageError with all operations" classname="Error Types &amp;gt; Core Types" time="0.000059" file="__tests__/unit/core/types.test.ts" line="378" assertions="12" />
        <testcase name="error types can be used in union" classname="Error Types &amp;gt; Core Types" time="0.000034" file="__tests__/unit/core/types.test.ts" line="411" assertions="5" />
        <testcase name="errors inherit from Error class" classname="Error Types &amp;gt; Core Types" time="0.000025" file="__tests__/unit/core/types.test.ts" line="426" assertions="4" />
        <testcase name="errors can be thrown and caught" classname="Error Types &amp;gt; Core Types" time="0.000077" file="__tests__/unit/core/types.test.ts" line="438" assertions="4" />
      </testsuite>
      <testsuite name="Utility Types" file="__tests__/unit/core/types.test.ts" line="455" tests="4" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="extracts model type" classname="Utility Types &amp;gt; Core Types" time="0.00001" file="__tests__/unit/core/types.test.ts" line="465" assertions="1" />
        <testcase name="extracts message type" classname="Utility Types &amp;gt; Core Types" time="0.000014" file="__tests__/unit/core/types.test.ts" line="472" assertions="1" />
        <testcase name="creates Program" classname="Utility Types &amp;gt; Core Types" time="0.000024" file="__tests__/unit/core/types.test.ts" line="479" assertions="2" />
        <testcase name="creates RuntimeState" classname="Utility Types &amp;gt; Core Types" time="0.00002" file="__tests__/unit/core/types.test.ts" line="492" assertions="4" />
      </testsuite>
      <testsuite name="Effect and Stream Types" file="__tests__/unit/core/types.test.ts" line="513" tests="3" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates Cmd type" classname="Effect and Stream Types &amp;gt; Core Types" time="0.000009" file="__tests__/unit/core/types.test.ts" line="514" assertions="1" />
        <testcase name="creates Sub type" classname="Effect and Stream Types &amp;gt; Core Types" time="0.000013" file="__tests__/unit/core/types.test.ts" line="520" assertions="1" />
        <testcase name="runs command effect" classname="Effect and Stream Types &amp;gt; Core Types" time="0.000051" file="__tests__/unit/core/types.test.ts" line="526" assertions="1" />
      </testsuite>
      <testsuite name="Type Guards and Validation" file="__tests__/unit/core/types.test.ts" line="534" tests="2" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="validates View structure" classname="Type Guards and Validation &amp;gt; Core Types" time="0.000019" file="__tests__/unit/core/types.test.ts" line="535" assertions="3" />
        <testcase name="validates Component structure" classname="Type Guards and Validation &amp;gt; Core Types" time="0.000021" file="__tests__/unit/core/types.test.ts" line="545" assertions="3" />
      </testsuite>
      <testsuite name="Complex Component Scenarios" file="__tests__/unit/core/types.test.ts" line="561" tests="3" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles complex state updates" classname="Complex Component Scenarios &amp;gt; Core Types" time="0.000138" file="__tests__/unit/core/types.test.ts" line="616" assertions="4" />
        <testcase name="renders complex state correctly" classname="Complex Component Scenarios &amp;gt; Core Types" time="0.000098" file="__tests__/unit/core/types.test.ts" line="636" assertions="1" />
        <testcase name="renders loading state" classname="Complex Component Scenarios &amp;gt; Core Types" time="0.000043" file="__tests__/unit/core/types.test.ts" line="649" assertions="1" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/core/keys.test.ts" file="__tests__/unit/core/keys.test.ts" tests="42" assertions="156" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Core Keys" file="__tests__/unit/core/keys.test.ts" line="15" tests="42" assertions="156" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="KeyType enum" file="__tests__/unit/core/keys.test.ts" line="16" tests="5" assertions="23" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="has all expected key types" classname="KeyType enum &amp;gt; Core Keys" time="0.000026" file="__tests__/unit/core/keys.test.ts" line="17" assertions="7" />
        <testcase name="has navigation keys" classname="KeyType enum &amp;gt; Core Keys" time="0.000022" file="__tests__/unit/core/keys.test.ts" line="27" assertions="8" />
        <testcase name="has function keys" classname="KeyType enum &amp;gt; Core Keys" time="0.000016" file="__tests__/unit/core/keys.test.ts" line="38" assertions="2" />
        <testcase name="has control keys" classname="KeyType enum &amp;gt; Core Keys" time="0.000012" file="__tests__/unit/core/keys.test.ts" line="43" assertions="3" />
        <testcase name="has modified navigation keys" classname="KeyType enum &amp;gt; Core Keys" time="0.000009" file="__tests__/unit/core/keys.test.ts" line="49" assertions="3" />
      </testsuite>
      <testsuite name="ANSI_SEQUENCES" file="__tests__/unit/core/keys.test.ts" line="56" tests="9" assertions="27" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="maps basic arrow keys" classname="ANSI_SEQUENCES &amp;gt; Core Keys" time="0.000037" file="__tests__/unit/core/keys.test.ts" line="57" assertions="4" />
        <testcase name="maps VT sequences" classname="ANSI_SEQUENCES &amp;gt; Core Keys" time="0.000018" file="__tests__/unit/core/keys.test.ts" line="64" assertions="2" />
        <testcase name="maps modified arrows with shift" classname="ANSI_SEQUENCES &amp;gt; Core Keys" time="0.000015" file="__tests__/unit/core/keys.test.ts" line="69" assertions="2" />
        <testcase name="maps modified arrows with alt" classname="ANSI_SEQUENCES &amp;gt; Core Keys" time="0.000004" file="__tests__/unit/core/keys.test.ts" line="82" assertions="1" />
        <testcase name="maps modified arrows with ctrl" classname="ANSI_SEQUENCES &amp;gt; Core Keys" time="0.000009" file="__tests__/unit/core/keys.test.ts" line="90" assertions="1" />
        <testcase name="maps function keys" classname="ANSI_SEQUENCES &amp;gt; Core Keys" time="0.00002" file="__tests__/unit/core/keys.test.ts" line="98" assertions="4" />
        <testcase name="maps navigation keys" classname="ANSI_SEQUENCES &amp;gt; Core Keys" time="0.000026" file="__tests__/unit/core/keys.test.ts" line="105" assertions="5" />
        <testcase name="maps special keys" classname="ANSI_SEQUENCES &amp;gt; Core Keys" time="0.000032" file="__tests__/unit/core/keys.test.ts" line="113" assertions="7" />
        <testcase name="maps shift+tab" classname="ANSI_SEQUENCES &amp;gt; Core Keys" time="0.00001" file="__tests__/unit/core/keys.test.ts" line="123" assertions="1" />
      </testsuite>
      <testsuite name="getKeyName" file="__tests__/unit/core/keys.test.ts" line="132" tests="8" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="returns key for special keys" classname="getKeyName &amp;gt; Core Keys" time="0.000047" file="__tests__/unit/core/keys.test.ts" line="133" assertions="1" />
        <testcase name="builds key name for runes without modifiers" classname="getKeyName &amp;gt; Core Keys" time="0.000025" file="__tests__/unit/core/keys.test.ts" line="145" assertions="1" />
        <testcase name="builds key name for runes with ctrl" classname="getKeyName &amp;gt; Core Keys" time="0.000013" file="__tests__/unit/core/keys.test.ts" line="158" assertions="1" />
        <testcase name="builds key name for runes with alt" classname="getKeyName &amp;gt; Core Keys" time="0.000084" file="__tests__/unit/core/keys.test.ts" line="171" assertions="1" />
        <testcase name="builds key name for runes with shift" classname="getKeyName &amp;gt; Core Keys" time="0.000023" file="__tests__/unit/core/keys.test.ts" line="184" assertions="1" />
        <testcase name="builds key name for runes with meta" classname="getKeyName &amp;gt; Core Keys" time="0.00001" file="__tests__/unit/core/keys.test.ts" line="197" assertions="1" />
        <testcase name="builds key name with multiple modifiers in correct order" classname="getKeyName &amp;gt; Core Keys" time="0.000022" file="__tests__/unit/core/keys.test.ts" line="210" assertions="1" />
        <testcase name="does not include shift for lowercase runes" classname="getKeyName &amp;gt; Core Keys" time="0.000013" file="__tests__/unit/core/keys.test.ts" line="223" assertions="1" />
      </testsuite>
      <testsuite name="parseChar" file="__tests__/unit/core/keys.test.ts" line="237" tests="5" assertions="27" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="parses regular character" classname="parseChar &amp;gt; Core Keys" time="0.000069" file="__tests__/unit/core/keys.test.ts" line="238" assertions="7" />
        <testcase name="parses character with modifiers" classname="parseChar &amp;gt; Core Keys" time="0.000022" file="__tests__/unit/core/keys.test.ts" line="249" assertions="6" />
        <testcase name="parses control character" classname="parseChar &amp;gt; Core Keys" time="0.000024" file="__tests__/unit/core/keys.test.ts" line="259" assertions="4" />
        <testcase name="parses unknown control character as runes" classname="parseChar &amp;gt; Core Keys" time="0.000021" file="__tests__/unit/core/keys.test.ts" line="268" assertions="4" />
        <testcase name="handles edge cases" classname="parseChar &amp;gt; Core Keys" time="0.000022" file="__tests__/unit/core/keys.test.ts" line="276" assertions="6" />
      </testsuite>
      <testsuite name="KeyUtils" file="__tests__/unit/core/keys.test.ts" line="294" tests="10" assertions="48" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testsuite name="matches" file="__tests__/unit/core/keys.test.ts" line="295" tests="2" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="matches key event against patterns" classname="matches &amp;gt; KeyUtils &amp;gt; Core Keys" time="0.00006" file="__tests__/unit/core/keys.test.ts" line="296" assertions="4" />
          <testcase name="works with multiple patterns" classname="matches &amp;gt; KeyUtils &amp;gt; Core Keys" time="0.000015" file="__tests__/unit/core/keys.test.ts" line="312" assertions="2" />
        </testsuite>
        <testsuite name="binding" file="__tests__/unit/core/keys.test.ts" line="327" tests="3" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="creates a key binding" classname="binding &amp;gt; KeyUtils &amp;gt; Core Keys" time="0.000044" file="__tests__/unit/core/keys.test.ts" line="328" assertions="3" />
          <testcase name="key binding matches function works" classname="binding &amp;gt; KeyUtils &amp;gt; Core Keys" time="0.000031" file="__tests__/unit/core/keys.test.ts" line="336" assertions="3" />
          <testcase name="creates binding without help" classname="binding &amp;gt; KeyUtils &amp;gt; Core Keys" time="0.000011" file="__tests__/unit/core/keys.test.ts" line="372" assertions="2" />
        </testsuite>
        <testsuite name="common bindings" file="__tests__/unit/core/keys.test.ts" line="380" tests="5" assertions="34" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="has quit binding" classname="common bindings &amp;gt; KeyUtils &amp;gt; Core Keys" time="0.000023" file="__tests__/unit/core/keys.test.ts" line="381" assertions="2" />
          <testcase name="has help binding" classname="common bindings &amp;gt; KeyUtils &amp;gt; Core Keys" time="0.000013" file="__tests__/unit/core/keys.test.ts" line="387" assertions="2" />
          <testcase name="has navigation bindings" classname="common bindings &amp;gt; KeyUtils &amp;gt; Core Keys" time="0.00001" file="__tests__/unit/core/keys.test.ts" line="393" assertions="4" />
          <testcase name="has action bindings" classname="common bindings &amp;gt; KeyUtils &amp;gt; Core Keys" time="0.000016" file="__tests__/unit/core/keys.test.ts" line="400" assertions="2" />
          <testcase name="all bindings have help text" classname="common bindings &amp;gt; KeyUtils &amp;gt; Core Keys" time="0.000034" file="__tests__/unit/core/keys.test.ts" line="405" assertions="24" />
        </testsuite>
      </testsuite>
      <testsuite name="KeyEvent interface" file="__tests__/unit/core/keys.test.ts" line="415" tests="2" assertions="12" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates a valid key event" classname="KeyEvent interface &amp;gt; Core Keys" time="0.000022" file="__tests__/unit/core/keys.test.ts" line="416" assertions="9" />
        <testcase name="handles optional properties" classname="KeyEvent interface &amp;gt; Core Keys" time="0.000016" file="__tests__/unit/core/keys.test.ts" line="440" assertions="3" />
      </testsuite>
      <testsuite name="Integration scenarios" file="__tests__/unit/core/keys.test.ts" line="456" tests="3" assertions="11" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles complex key combinations" classname="Integration scenarios &amp;gt; Core Keys" time="0.000021" file="__tests__/unit/core/keys.test.ts" line="457" assertions="4" />
        <testcase name="processes ANSI sequences correctly" classname="Integration scenarios &amp;gt; Core Keys" time="0.000027" file="__tests__/unit/core/keys.test.ts" line="466" assertions="5" />
        <testcase name="matches key bindings in real usage" classname="Integration scenarios &amp;gt; Core Keys" time="0.000019" file="__tests__/unit/core/keys.test.ts" line="477" assertions="2" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/core/view.test.ts" file="__tests__/unit/core/view.test.ts" tests="63" assertions="143" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Core View System" file="__tests__/unit/core/view.test.ts" line="36" tests="63" assertions="143" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="text" file="__tests__/unit/core/view.test.ts" line="37" tests="5" assertions="13" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates a simple text view" classname="text &amp;gt; Core View System" time="0.000104" file="__tests__/unit/core/view.test.ts" line="38" assertions="3" />
        <testcase name="handles multi-line text" classname="text &amp;gt; Core View System" time="0.000034" file="__tests__/unit/core/view.test.ts" line="48" assertions="3" />
        <testcase name="handles empty text" classname="text &amp;gt; Core View System" time="0.000042" file="__tests__/unit/core/view.test.ts" line="58" assertions="3" />
        <testcase name="calculates width correctly for varying line lengths" classname="text &amp;gt; Core View System" time="0.000025" file="__tests__/unit/core/view.test.ts" line="68" assertions="2" />
        <testcase name="handles unicode characters" classname="text &amp;gt; Core View System" time="0.000044" file="__tests__/unit/core/view.test.ts" line="75" assertions="2" />
      </testsuite>
      <testsuite name="empty" file="__tests__/unit/core/view.test.ts" line="86" tests="1" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates an empty view" classname="empty &amp;gt; Core View System" time="0.000028" file="__tests__/unit/core/view.test.ts" line="87" assertions="3" />
      </testsuite>
      <testsuite name="createView" file="__tests__/unit/core/view.test.ts" line="96" tests="1" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="is an alias for text function" classname="createView &amp;gt; Core View System" time="0.000051" file="__tests__/unit/core/view.test.ts" line="97" assertions="3" />
      </testsuite>
      <testsuite name="isView" file="__tests__/unit/core/view.test.ts" line="110" tests="3" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="identifies valid view objects" classname="isView &amp;gt; Core View System" time="0.000021" file="__tests__/unit/core/view.test.ts" line="111" assertions="1" />
        <testcase name="rejects non-view objects" classname="isView &amp;gt; Core View System" time="0.000026" file="__tests__/unit/core/view.test.ts" line="116" assertions="6" />
        <testcase name="identifies objects with render function" classname="isView &amp;gt; Core View System" time="0.000016" file="__tests__/unit/core/view.test.ts" line="125" assertions="1" />
      </testsuite>
      <testsuite name="measureView" file="__tests__/unit/core/view.test.ts" line="135" tests="3" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="measures view dimensions" classname="measureView &amp;gt; Core View System" time="0.000052" file="__tests__/unit/core/view.test.ts" line="136" assertions="2" />
        <testcase name="handles undefined dimensions" classname="measureView &amp;gt; Core View System" time="0.00004" file="__tests__/unit/core/view.test.ts" line="144" assertions="2" />
        <testcase name="measures empty view" classname="measureView &amp;gt; Core View System" time="0.000032" file="__tests__/unit/core/view.test.ts" line="154" assertions="2" />
      </testsuite>
      <testsuite name="renderView" file="__tests__/unit/core/view.test.ts" line="161" tests="2" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="renders a view to string" classname="renderView &amp;gt; Core View System" time="0.000032" file="__tests__/unit/core/view.test.ts" line="162" assertions="1" />
        <testcase name="handles multi-line content" classname="renderView &amp;gt; Core View System" time="0.000035" file="__tests__/unit/core/view.test.ts" line="168" assertions="1" />
      </testsuite>
      <testsuite name="styledText" file="__tests__/unit/core/view.test.ts" line="175" tests="4" assertions="9" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates styled text using new styling system" classname="styledText &amp;gt; Core View System" time="0.000153" file="__tests__/unit/core/view.test.ts" line="176" assertions="4" />
        <testcase name="respects style dimensions" classname="styledText &amp;gt; Core View System" time="0.000062" file="__tests__/unit/core/view.test.ts" line="188" assertions="2" />
        <testcase name="handles multi-line content" classname="styledText &amp;gt; Core View System" time="0.000027" file="__tests__/unit/core/view.test.ts" line="196" assertions="1" />
        <testcase name="handles style without dimensions" classname="styledText &amp;gt; Core View System" time="0.000048" file="__tests__/unit/core/view.test.ts" line="203" assertions="2" />
      </testsuite>
      <testsuite name="vstack" file="__tests__/unit/core/view.test.ts" line="212" tests="5" assertions="13" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="stacks views vertically" classname="vstack &amp;gt; Core View System" time="0.000078" file="__tests__/unit/core/view.test.ts" line="213" assertions="3" />
        <testcase name="handles empty views in stack" classname="vstack &amp;gt; Core View System" time="0.000058" file="__tests__/unit/core/view.test.ts" line="227" assertions="2" />
        <testcase name="handles single view" classname="vstack &amp;gt; Core View System" time="0.000042" file="__tests__/unit/core/view.test.ts" line="240" assertions="3" />
        <testcase name="handles no views" classname="vstack &amp;gt; Core View System" time="0.000046" file="__tests__/unit/core/view.test.ts" line="251" assertions="3" />
        <testcase name="handles multi-line views" classname="vstack &amp;gt; Core View System" time="0.000042" file="__tests__/unit/core/view.test.ts" line="261" assertions="2" />
      </testsuite>
      <testsuite name="hstack" file="__tests__/unit/core/view.test.ts" line="274" tests="7" assertions="19" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="stacks views horizontally" classname="hstack &amp;gt; Core View System" time="0.000058" file="__tests__/unit/core/view.test.ts" line="275" assertions="3" />
        <testcase name="handles different height views" classname="hstack &amp;gt; Core View System" time="0.000057" file="__tests__/unit/core/view.test.ts" line="288" assertions="3" />
        <testcase name="pads shorter views to match height" classname="hstack &amp;gt; Core View System" time="0.000049" file="__tests__/unit/core/view.test.ts" line="301" assertions="3" />
        <testcase name="pads lines to view width" classname="hstack &amp;gt; Core View System" time="0.000051" file="__tests__/unit/core/view.test.ts" line="314" assertions="1" />
        <testcase name="handles empty views" classname="hstack &amp;gt; Core View System" time="0.000042" file="__tests__/unit/core/view.test.ts" line="324" assertions="3" />
        <testcase name="handles no views" classname="hstack &amp;gt; Core View System" time="0.000041" file="__tests__/unit/core/view.test.ts" line="337" assertions="3" />
        <testcase name="handles multiple multi-line views" classname="hstack &amp;gt; Core View System" time="0.000049" file="__tests__/unit/core/view.test.ts" line="347" assertions="3" />
      </testsuite>
      <testsuite name="box" file="__tests__/unit/core/view.test.ts" line="362" tests="4" assertions="19" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates a box around a view" classname="box &amp;gt; Core View System" time="0.000199" file="__tests__/unit/core/view.test.ts" line="363" assertions="5" />
        <testcase name="handles multi-line content" classname="box &amp;gt; Core View System" time="0.000061" file="__tests__/unit/core/view.test.ts" line="378" assertions="7" />
        <testcase name="handles empty content" classname="box &amp;gt; Core View System" time="0.000039" file="__tests__/unit/core/view.test.ts" line="395" assertions="5" />
        <testcase name="handles varying line widths" classname="box &amp;gt; Core View System" time="0.000041" file="__tests__/unit/core/view.test.ts" line="409" assertions="2" />
      </testsuite>
      <testsuite name="center" file="__tests__/unit/core/view.test.ts" line="421" tests="6" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="centers a view within given width" classname="center &amp;gt; Core View System" time="0.000118" file="__tests__/unit/core/view.test.ts" line="422" assertions="3" />
        <testcase name="handles odd padding" classname="center &amp;gt; Core View System" time="0.000042" file="__tests__/unit/core/view.test.ts" line="433" assertions="1" />
        <testcase name="handles multi-line content" classname="center &amp;gt; Core View System" time="0.000022" file="__tests__/unit/core/view.test.ts" line="441" assertions="1" />
        <testcase name="handles content wider than total width" classname="center &amp;gt; Core View System" time="0.000028" file="__tests__/unit/core/view.test.ts" line="449" assertions="1" />
        <testcase name="handles zero width" classname="center &amp;gt; Core View System" time="0.00003" file="__tests__/unit/core/view.test.ts" line="457" assertions="1" />
        <testcase name="handles empty content" classname="center &amp;gt; Core View System" time="0.000022" file="__tests__/unit/core/view.test.ts" line="465" assertions="1" />
      </testsuite>
      <testsuite name="styled" file="__tests__/unit/core/view.test.ts" line="473" tests="2" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="applies ANSI styling to a view" classname="styled &amp;gt; Core View System" time="0.000119" file="__tests__/unit/core/view.test.ts" line="474" assertions="3" />
        <testcase name="preserves view dimensions" classname="styled &amp;gt; Core View System" time="0.000038" file="__tests__/unit/core/view.test.ts" line="485" assertions="3" />
      </testsuite>
      <testsuite name="style shortcuts" file="__tests__/unit/core/view.test.ts" line="497" tests="4" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="applies bold styling" classname="style shortcuts &amp;gt; Core View System" time="0.000039" file="__tests__/unit/core/view.test.ts" line="500" assertions="1" />
        <testcase name="applies dim styling" classname="style shortcuts &amp;gt; Core View System" time="0.000043" file="__tests__/unit/core/view.test.ts" line="506" assertions="1" />
        <testcase name="applies italic styling" classname="style shortcuts &amp;gt; Core View System" time="0.00003" file="__tests__/unit/core/view.test.ts" line="512" assertions="1" />
        <testcase name="applies underline styling" classname="style shortcuts &amp;gt; Core View System" time="0.000032" file="__tests__/unit/core/view.test.ts" line="518" assertions="1" />
      </testsuite>
      <testsuite name="color shortcuts" file="__tests__/unit/core/view.test.ts" line="525" tests="7" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="applies red color" classname="color shortcuts &amp;gt; Core View System" time="0.000033" file="__tests__/unit/core/view.test.ts" line="528" assertions="1" />
        <testcase name="applies green color" classname="color shortcuts &amp;gt; Core View System" time="0.000031" file="__tests__/unit/core/view.test.ts" line="534" assertions="1" />
        <testcase name="applies yellow color" classname="color shortcuts &amp;gt; Core View System" time="0.000035" file="__tests__/unit/core/view.test.ts" line="540" assertions="1" />
        <testcase name="applies blue color" classname="color shortcuts &amp;gt; Core View System" time="0.000032" file="__tests__/unit/core/view.test.ts" line="546" assertions="1" />
        <testcase name="applies magenta color" classname="color shortcuts &amp;gt; Core View System" time="0.000017" file="__tests__/unit/core/view.test.ts" line="552" assertions="1" />
        <testcase name="applies cyan color" classname="color shortcuts &amp;gt; Core View System" time="0.000037" file="__tests__/unit/core/view.test.ts" line="558" assertions="1" />
        <testcase name="applies white color" classname="color shortcuts &amp;gt; Core View System" time="0.000055" file="__tests__/unit/core/view.test.ts" line="564" assertions="1" />
      </testsuite>
      <testsuite name="complex compositions" file="__tests__/unit/core/view.test.ts" line="571" tests="3" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="combines multiple operations" classname="complex compositions &amp;gt; Core View System" time="0.000093" file="__tests__/unit/core/view.test.ts" line="572" assertions="4" />
        <testcase name="nests horizontal and vertical stacks" classname="complex compositions &amp;gt; Core View System" time="0.000065" file="__tests__/unit/core/view.test.ts" line="586" assertions="1" />
        <testcase name="centers a boxed view" classname="complex compositions &amp;gt; Core View System" time="0.000063" file="__tests__/unit/core/view.test.ts" line="595" assertions="3" />
      </testsuite>
      <testsuite name="edge cases" file="__tests__/unit/core/view.test.ts" line="610" tests="4" assertions="10" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles views with undefined dimensions" classname="edge cases &amp;gt; Core View System" time="0.000033" file="__tests__/unit/core/view.test.ts" line="611" assertions="2" />
        <testcase name="handles string width calculation edge cases" classname="edge cases &amp;gt; Core View System" time="0.000032" file="__tests__/unit/core/view.test.ts" line="621" assertions="2" />
        <testcase name="handles very large content" classname="edge cases &amp;gt; Core View System" time="0.000029" file="__tests__/unit/core/view.test.ts" line="630" assertions="3" />
        <testcase name="handles deeply nested stacks" classname="edge cases &amp;gt; Core View System" time="0.000111" file="__tests__/unit/core/view.test.ts" line="641" assertions="3" />
      </testsuite>
      <testsuite name="performance" file="__tests__/unit/core/view.test.ts" line="655" tests="2" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles large stacks efficiently" classname="performance &amp;gt; Core View System" time="0.000331" file="__tests__/unit/core/view.test.ts" line="656" assertions="3" />
        <testcase name="handles large horizontal stacks efficiently" classname="performance &amp;gt; Core View System" time="0.000312" file="__tests__/unit/core/view.test.ts" line="669" assertions="2" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/core/types-check.test.ts" file="__tests__/unit/core/types-check.test.ts" tests="8" assertions="27" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Core Types - Type Checking" file="__tests__/unit/core/types-check.test.ts" line="19" tests="8" assertions="27" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testcase name="Component type structure is valid" classname="Core Types - Type Checking" time="0.000094" file="__tests__/unit/core/types-check.test.ts" line="20" assertions="4" />
      <testcase name="Cmd types are valid" classname="Core Types - Type Checking" time="0.000036" file="__tests__/unit/core/types-check.test.ts" line="39" assertions="4" />
      <testcase name="Sub types are valid" classname="Core Types - Type Checking" time="0.000029" file="__tests__/unit/core/types-check.test.ts" line="61" assertions="4" />
      <testcase name="View type structure is valid" classname="Core Types - Type Checking" time="0.000017" file="__tests__/unit/core/types-check.test.ts" line="86" assertions="4" />
      <testcase name="KeyEvent type structure is valid" classname="Core Types - Type Checking" time="0.000061" file="__tests__/unit/core/types-check.test.ts" line="103" assertions="3" />
      <testcase name="MouseEvent type structure is valid" classname="Core Types - Type Checking" time="0.000031" file="__tests__/unit/core/types-check.test.ts" line="126" assertions="5" />
      <testcase name="Message type can be extended" classname="Core Types - Type Checking" time="0.000022" file="__tests__/unit/core/types-check.test.ts" line="154" assertions="2" />
      <testcase name="Component can handle optional properties" classname="Core Types - Type Checking" time="0.000025" file="__tests__/unit/core/types-check.test.ts" line="172" assertions="1" />
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/core/runtime.test.ts" file="__tests__/unit/core/runtime.test.ts" tests="21" assertions="18" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Runtime" file="__tests__/unit/core/runtime.test.ts" line="124" tests="21" assertions="18" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="constructor" file="__tests__/unit/core/runtime.test.ts" line="125" tests="2" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates runtime with default config" classname="constructor &amp;gt; Runtime" time="0.000115" file="__tests__/unit/core/runtime.test.ts" line="126" assertions="1" />
        <testcase name="creates runtime with custom config" classname="constructor &amp;gt; Runtime" time="0.000021" file="__tests__/unit/core/runtime.test.ts" line="133" assertions="1" />
      </testsuite>
      <testsuite name="initialization" file="__tests__/unit/core/runtime.test.ts" line="149" tests="4" assertions="4" failures="0" skipped="0" time="0.048" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="sets up terminal correctly" classname="initialization &amp;gt; Runtime" time="0.014111" file="__tests__/unit/core/runtime.test.ts" line="150" assertions="1" />
        <testcase name="skips alternate screen when configured" classname="initialization &amp;gt; Runtime" time="0.013434" file="__tests__/unit/core/runtime.test.ts" line="169" assertions="1" />
        <testcase name="enables mouse when configured" classname="initialization &amp;gt; Runtime" time="0.010792" file="__tests__/unit/core/runtime.test.ts" line="187" assertions="1" />
        <testcase name="initializes component model" classname="initialization &amp;gt; Runtime" time="0.011982" file="__tests__/unit/core/runtime.test.ts" line="205" assertions="1" />
      </testsuite>
      <testsuite name="message processing" file="__tests__/unit/core/runtime.test.ts" line="229" tests="2" assertions="1" failures="0" skipped="0" time="0.062" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="processes user messages" classname="message processing &amp;gt; Runtime" time="0.051534" file="__tests__/unit/core/runtime.test.ts" line="230" assertions="0" />
        <testcase name="handles quit message" classname="message processing &amp;gt; Runtime" time="0.011502" file="__tests__/unit/core/runtime.test.ts" line="258" assertions="1" />
      </testsuite>
      <testsuite name="rendering" file="__tests__/unit/core/runtime.test.ts" line="280" tests="2" assertions="3" failures="0" skipped="0" time="0.091" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="renders initial view" classname="rendering &amp;gt; Runtime" time="0.051714" file="__tests__/unit/core/runtime.test.ts" line="281" assertions="1" />
        <testcase name="respects FPS configuration" classname="rendering &amp;gt; Runtime" time="0.040833" file="__tests__/unit/core/runtime.test.ts" line="305" assertions="2" />
      </testsuite>
      <testsuite name="subscriptions" file="__tests__/unit/core/runtime.test.ts" line="329" tests="1" assertions="1" failures="0" skipped="0" time="0.051" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles component subscriptions" classname="subscriptions &amp;gt; Runtime" time="0.051437" file="__tests__/unit/core/runtime.test.ts" line="330" assertions="1" />
      </testsuite>
      <testsuite name="error handling" file="__tests__/unit/core/runtime.test.ts" line="358" tests="2" assertions="2" failures="0" skipped="0" time="0.104" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles update errors gracefully" classname="error handling &amp;gt; Runtime" time="0.052509" file="__tests__/unit/core/runtime.test.ts" line="359" assertions="1" />
        <testcase name="handles view errors gracefully" classname="error handling &amp;gt; Runtime" time="0.052942" file="__tests__/unit/core/runtime.test.ts" line="384" assertions="1" />
      </testsuite>
      <testsuite name="cleanup" file="__tests__/unit/core/runtime.test.ts" line="410" tests="2" assertions="3" failures="0" skipped="0" time="0.021" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="restores terminal on exit" classname="cleanup &amp;gt; Runtime" time="0.010814" file="__tests__/unit/core/runtime.test.ts" line="411" assertions="2" />
        <testcase name="disables mouse on exit" classname="cleanup &amp;gt; Runtime" time="0.011836" file="__tests__/unit/core/runtime.test.ts" line="431" assertions="1" />
      </testsuite>
      <testsuite name="runApp helper" file="__tests__/unit/core/runtime.test.ts" line="450" tests="2" assertions="1" failures="0" skipped="0" time="0.022" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates and runs runtime" classname="runApp helper &amp;gt; Runtime" time="0.010834" file="__tests__/unit/core/runtime.test.ts" line="451" assertions="1" />
        <testcase name="accepts runtime config" classname="runApp helper &amp;gt; Runtime" time="0.012633" file="__tests__/unit/core/runtime.test.ts" line="470" assertions="0" />
      </testsuite>
      <testsuite name="automatic quit handling" file="__tests__/unit/core/runtime.test.ts" line="492" tests="2" assertions="0" failures="0" skipped="0" time="0.103" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="quits on Ctrl+C when enabled" classname="automatic quit handling &amp;gt; Runtime" time="0.051575" file="__tests__/unit/core/runtime.test.ts" line="493" assertions="0" />
        <testcase name="quits on Escape when enabled" classname="automatic quit handling &amp;gt; Runtime" time="0.052096" file="__tests__/unit/core/runtime.test.ts" line="512" assertions="0" />
      </testsuite>
      <testsuite name="system messages" file="__tests__/unit/core/runtime.test.ts" line="532" tests="1" assertions="0" failures="0" skipped="0" time="0.052" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles window resize messages" classname="system messages &amp;gt; Runtime" time="0.05243" file="__tests__/unit/core/runtime.test.ts" line="533" assertions="0" />
      </testsuite>
      <testsuite name="performance" file="__tests__/unit/core/runtime.test.ts" line="557" tests="1" assertions="1" failures="0" skipped="0" time="0.052" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="maintains target frame rate" classname="performance &amp;gt; Runtime" time="0.052248" file="__tests__/unit/core/runtime.test.ts" line="558" assertions="1" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/layout/join.test.ts" file="__tests__/unit/layout/join.test.ts" tests="33" assertions="53" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Join Layout Functions" file="__tests__/unit/layout/join.test.ts" line="35" tests="33" assertions="53" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="Position constants" file="__tests__/unit/layout/join.test.ts" line="36" tests="1" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="exports correct position values" classname="Position constants &amp;gt; Join Layout Functions" time="0.000039" file="__tests__/unit/layout/join.test.ts" line="37" assertions="5" />
      </testsuite>
      <testsuite name="joinHorizontal" file="__tests__/unit/layout/join.test.ts" line="46" tests="8" assertions="13" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="joins views horizontally with default center alignment" classname="joinHorizontal &amp;gt; Join Layout Functions" time="0.000485" file="__tests__/unit/layout/join.test.ts" line="47" assertions="3" />
        <testcase name="joins views with top alignment" classname="joinHorizontal &amp;gt; Join Layout Functions" time="0.000087" file="__tests__/unit/layout/join.test.ts" line="59" assertions="1" />
        <testcase name="joins views with bottom alignment" classname="joinHorizontal &amp;gt; Join Layout Functions" time="0.000051" file="__tests__/unit/layout/join.test.ts" line="69" assertions="1" />
        <testcase name="joins views with spacing" classname="joinHorizontal &amp;gt; Join Layout Functions" time="0.00005" file="__tests__/unit/layout/join.test.ts" line="79" assertions="2" />
        <testcase name="handles empty views array" classname="joinHorizontal &amp;gt; Join Layout Functions" time="0.000042" file="__tests__/unit/layout/join.test.ts" line="90" assertions="3" />
        <testcase name="handles numeric position alignment" classname="joinHorizontal &amp;gt; Join Layout Functions" time="0.000049" file="__tests__/unit/layout/join.test.ts" line="99" assertions="1" />
        <testcase name="pads views to their declared width" classname="joinHorizontal &amp;gt; Join Layout Functions" time="0.000064" file="__tests__/unit/layout/join.test.ts" line="110" assertions="1" />
        <testcase name="handles views with different heights" classname="joinHorizontal &amp;gt; Join Layout Functions" time="0.000075" file="__tests__/unit/layout/join.test.ts" line="120" assertions="1" />
      </testsuite>
      <testsuite name="joinVertical" file="__tests__/unit/layout/join.test.ts" line="132" tests="8" assertions="13" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="joins views vertically with default center alignment" classname="joinVertical &amp;gt; Join Layout Functions" time="0.000248" file="__tests__/unit/layout/join.test.ts" line="133" assertions="3" />
        <testcase name="joins views with left alignment" classname="joinVertical &amp;gt; Join Layout Functions" time="0.000054" file="__tests__/unit/layout/join.test.ts" line="145" assertions="1" />
        <testcase name="joins views with right alignment" classname="joinVertical &amp;gt; Join Layout Functions" time="0.000042" file="__tests__/unit/layout/join.test.ts" line="155" assertions="1" />
        <testcase name="joins views with spacing" classname="joinVertical &amp;gt; Join Layout Functions" time="0.00006" file="__tests__/unit/layout/join.test.ts" line="165" assertions="2" />
        <testcase name="handles empty views array" classname="joinVertical &amp;gt; Join Layout Functions" time="0.000037" file="__tests__/unit/layout/join.test.ts" line="176" assertions="3" />
        <testcase name="handles numeric position alignment" classname="joinVertical &amp;gt; Join Layout Functions" time="0.000042" file="__tests__/unit/layout/join.test.ts" line="185" assertions="1" />
        <testcase name="handles multi-line views" classname="joinVertical &amp;gt; Join Layout Functions" time="0.000052" file="__tests__/unit/layout/join.test.ts" line="196" assertions="1" />
        <testcase name="preserves line content when aligning" classname="joinVertical &amp;gt; Join Layout Functions" time="0.000041" file="__tests__/unit/layout/join.test.ts" line="206" assertions="1" />
      </testsuite>
      <testsuite name="place" file="__tests__/unit/layout/join.test.ts" line="217" tests="8" assertions="10" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="places view in center of box" classname="place &amp;gt; Join Layout Functions" time="0.000238" file="__tests__/unit/layout/join.test.ts" line="218" assertions="3" />
        <testcase name="places view at top-left" classname="place &amp;gt; Join Layout Functions" time="0.000045" file="__tests__/unit/layout/join.test.ts" line="228" assertions="1" />
        <testcase name="places view at bottom-right" classname="place &amp;gt; Join Layout Functions" time="0.000037" file="__tests__/unit/layout/join.test.ts" line="236" assertions="1" />
        <testcase name="truncates content that exceeds box width" classname="place &amp;gt; Join Layout Functions" time="0.000038" file="__tests__/unit/layout/join.test.ts" line="244" assertions="1" />
        <testcase name="truncates content that exceeds box height" classname="place &amp;gt; Join Layout Functions" time="0.000045" file="__tests__/unit/layout/join.test.ts" line="252" assertions="1" />
        <testcase name="handles multi-line content" classname="place &amp;gt; Join Layout Functions" time="0.000047" file="__tests__/unit/layout/join.test.ts" line="260" assertions="1" />
        <testcase name="handles custom positions" classname="place &amp;gt; Join Layout Functions" time="0.000044" file="__tests__/unit/layout/join.test.ts" line="268" assertions="1" />
        <testcase name="fills remaining space with spaces" classname="place &amp;gt; Join Layout Functions" time="0.000041" file="__tests__/unit/layout/join.test.ts" line="278" assertions="1" />
      </testsuite>
      <testsuite name="joinGrid" file="__tests__/unit/layout/join.test.ts" line="287" tests="5" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="joins views in a grid layout" classname="joinGrid &amp;gt; Join Layout Functions" time="0.000212" file="__tests__/unit/layout/join.test.ts" line="288" assertions="1" />
        <testcase name="handles empty grid" classname="joinGrid &amp;gt; Join Layout Functions" time="0.000032" file="__tests__/unit/layout/join.test.ts" line="300" assertions="1" />
        <testcase name="handles grid with spacing" classname="joinGrid &amp;gt; Join Layout Functions" time="0.000094" file="__tests__/unit/layout/join.test.ts" line="307" assertions="1" />
        <testcase name="aligns cells in grid" classname="joinGrid &amp;gt; Join Layout Functions" time="0.00006" file="__tests__/unit/layout/join.test.ts" line="319" assertions="2" />
        <testcase name="handles irregular grid" classname="joinGrid &amp;gt; Join Layout Functions" time="0.000064" file="__tests__/unit/layout/join.test.ts" line="334" assertions="3" />
      </testsuite>
      <testsuite name="Edge cases" file="__tests__/unit/layout/join.test.ts" line="350" tests="3" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles views with zero dimensions" classname="Edge cases &amp;gt; Join Layout Functions" time="0.000051" file="__tests__/unit/layout/join.test.ts" line="351" assertions="1" />
        <testcase name="handles views with undefined dimensions" classname="Edge cases &amp;gt; Join Layout Functions" time="0.000031" file="__tests__/unit/layout/join.test.ts" line="361" assertions="2" />
        <testcase name="handles alignment with invalid string values" classname="Edge cases &amp;gt; Join Layout Functions" time="0.000062" file="__tests__/unit/layout/join.test.ts" line="372" assertions="1" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/layout/spacer.test.ts" file="__tests__/unit/layout/spacer.test.ts" tests="39" assertions="96" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Layout Spacer" file="__tests__/unit/layout/spacer.test.ts" line="31" tests="10" assertions="26" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="spacer" file="__tests__/unit/layout/spacer.test.ts" line="32" tests="4" assertions="12" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates spacer with default size" classname="spacer &amp;gt; Layout Spacer" time="0.000125" file="__tests__/unit/layout/spacer.test.ts" line="33" assertions="4" />
        <testcase name="creates spacer with custom size" classname="spacer &amp;gt; Layout Spacer" time="0.000035" file="__tests__/unit/layout/spacer.test.ts" line="43" assertions="3" />
        <testcase name="creates spacer with flex property" classname="spacer &amp;gt; Layout Spacer" time="0.00003" file="__tests__/unit/layout/spacer.test.ts" line="52" assertions="2" />
        <testcase name="creates spacer with both size and flex" classname="spacer &amp;gt; Layout Spacer" time="0.000031" file="__tests__/unit/layout/spacer.test.ts" line="60" assertions="3" />
      </testsuite>
      <testsuite name="hspace" file="__tests__/unit/layout/spacer.test.ts" line="70" tests="2" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates horizontal spacer" classname="hspace &amp;gt; Layout Spacer" time="0.000046" file="__tests__/unit/layout/spacer.test.ts" line="71" assertions="3" />
        <testcase name="creates zero-width horizontal spacer" classname="hspace &amp;gt; Layout Spacer" time="0.000028" file="__tests__/unit/layout/spacer.test.ts" line="80" assertions="2" />
      </testsuite>
      <testsuite name="vspace" file="__tests__/unit/layout/spacer.test.ts" line="89" tests="2" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates vertical spacer" classname="vspace &amp;gt; Layout Spacer" time="0.000058" file="__tests__/unit/layout/spacer.test.ts" line="90" assertions="3" />
        <testcase name="creates single line vertical spacer" classname="vspace &amp;gt; Layout Spacer" time="0.000033" file="__tests__/unit/layout/spacer.test.ts" line="99" assertions="2" />
      </testsuite>
      <testsuite name="flexSpacer" file="__tests__/unit/layout/spacer.test.ts" line="108" tests="2" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates flexible spacer with default flex" classname="flexSpacer &amp;gt; Layout Spacer" time="0.000037" file="__tests__/unit/layout/spacer.test.ts" line="109" assertions="2" />
        <testcase name="creates flexible spacer with custom flex" classname="flexSpacer &amp;gt; Layout Spacer" time="0.000023" file="__tests__/unit/layout/spacer.test.ts" line="117" assertions="2" />
      </testsuite>
    </testsuite>
    <testsuite name="Layout Divider" file="__tests__/unit/layout/spacer.test.ts" line="127" tests="15" assertions="26" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="divider" file="__tests__/unit/layout/spacer.test.ts" line="128" tests="5" assertions="11" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates horizontal divider with defaults" classname="divider &amp;gt; Layout Divider" time="0.000145" file="__tests__/unit/layout/spacer.test.ts" line="129" assertions="3" />
        <testcase name="creates horizontal divider with custom char" classname="divider &amp;gt; Layout Divider" time="0.000042" file="__tests__/unit/layout/spacer.test.ts" line="138" assertions="2" />
        <testcase name="creates vertical divider" classname="divider &amp;gt; Layout Divider" time="0.000154" file="__tests__/unit/layout/spacer.test.ts" line="146" assertions="4" />
        <testcase name="creates vertical divider with custom char" classname="divider &amp;gt; Layout Divider" time="0.000088" file="__tests__/unit/layout/spacer.test.ts" line="156" assertions="1" />
        <testcase name="creates divider with custom style" classname="divider &amp;gt; Layout Divider" time="0.000056" file="__tests__/unit/layout/spacer.test.ts" line="166" assertions="1" />
      </testsuite>
      <testsuite name="hdivider" file="__tests__/unit/layout/spacer.test.ts" line="176" tests="3" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates horizontal divider" classname="hdivider &amp;gt; Layout Divider" time="0.000049" file="__tests__/unit/layout/spacer.test.ts" line="177" assertions="2" />
        <testcase name="creates horizontal divider with custom char" classname="hdivider &amp;gt; Layout Divider" time="0.000054" file="__tests__/unit/layout/spacer.test.ts" line="185" assertions="1" />
        <testcase name="creates horizontal divider with style" classname="hdivider &amp;gt; Layout Divider" time="0.000046" file="__tests__/unit/layout/spacer.test.ts" line="192" assertions="1" />
      </testsuite>
      <testsuite name="vdivider" file="__tests__/unit/layout/spacer.test.ts" line="201" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates vertical divider" classname="vdivider &amp;gt; Layout Divider" time="0.000087" file="__tests__/unit/layout/spacer.test.ts" line="202" assertions="2" />
        <testcase name="creates vertical divider with custom char" classname="vdivider &amp;gt; Layout Divider" time="0.000094" file="__tests__/unit/layout/spacer.test.ts" line="210" assertions="1" />
      </testsuite>
      <testsuite name="styled dividers" file="__tests__/unit/layout/spacer.test.ts" line="218" tests="5" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates dotted divider" classname="styled dividers &amp;gt; Layout Divider" time="0.000055" file="__tests__/unit/layout/spacer.test.ts" line="219" assertions="1" />
        <testcase name="creates dashed divider" classname="styled dividers &amp;gt; Layout Divider" time="0.00004" file="__tests__/unit/layout/spacer.test.ts" line="226" assertions="1" />
        <testcase name="creates double divider" classname="styled dividers &amp;gt; Layout Divider" time="0.000046" file="__tests__/unit/layout/spacer.test.ts" line="233" assertions="1" />
        <testcase name="creates thick divider" classname="styled dividers &amp;gt; Layout Divider" time="0.000035" file="__tests__/unit/layout/spacer.test.ts" line="240" assertions="1" />
        <testcase name="creates styled dividers with custom style" classname="styled dividers &amp;gt; Layout Divider" time="0.000223" file="__tests__/unit/layout/spacer.test.ts" line="247" assertions="4" />
      </testsuite>
    </testsuite>
    <testsuite name="Layout Helpers" file="__tests__/unit/layout/spacer.test.ts" line="270" tests="10" assertions="30" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="spaced" file="__tests__/unit/layout/spacer.test.ts" line="271" tests="5" assertions="16" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="returns empty array for empty input" classname="spaced &amp;gt; Layout Helpers" time="0.000096" file="__tests__/unit/layout/spacer.test.ts" line="290" assertions="1" />
        <testcase name="returns single view unchanged" classname="spaced &amp;gt; Layout Helpers" time="0.000034" file="__tests__/unit/layout/spacer.test.ts" line="295" assertions="1" />
        <testcase name="adds vertical spacing between views" classname="spaced &amp;gt; Layout Helpers" time="0.000128" file="__tests__/unit/layout/spacer.test.ts" line="300" assertions="5" />
        <testcase name="adds horizontal spacing between views" classname="spaced &amp;gt; Layout Helpers" time="0.000053" file="__tests__/unit/layout/spacer.test.ts" line="313" assertions="5" />
        <testcase name="adds spacing between multiple views" classname="spaced &amp;gt; Layout Helpers" time="0.000021" file="__tests__/unit/layout/spacer.test.ts" line="326" assertions="4" />
      </testsuite>
      <testsuite name="separated" file="__tests__/unit/layout/spacer.test.ts" line="336" tests="5" assertions="14" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="returns empty array for empty input" classname="separated &amp;gt; Layout Helpers" time="0.000036" file="__tests__/unit/layout/spacer.test.ts" line="355" assertions="1" />
        <testcase name="returns single view unchanged" classname="separated &amp;gt; Layout Helpers" time="0.000009" file="__tests__/unit/layout/spacer.test.ts" line="360" assertions="1" />
        <testcase name="adds default divider between views" classname="separated &amp;gt; Layout Helpers" time="0.00009" file="__tests__/unit/layout/spacer.test.ts" line="365" assertions="4" />
        <testcase name="adds custom divider between views" classname="separated &amp;gt; Layout Helpers" time="0.000037" file="__tests__/unit/layout/spacer.test.ts" line="377" assertions="4" />
        <testcase name="adds dividers between multiple views" classname="separated &amp;gt; Layout Helpers" time="0.000016" file="__tests__/unit/layout/spacer.test.ts" line="387" assertions="4" />
      </testsuite>
    </testsuite>
    <testsuite name="Integration scenarios" file="__tests__/unit/layout/spacer.test.ts" line="398" tests="4" assertions="14" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testcase name="creates complex spaced layout" classname="Integration scenarios" time="0.000113" file="__tests__/unit/layout/spacer.test.ts" line="399" assertions="2" />
      <testcase name="creates complex separated layout" classname="Integration scenarios" time="0.000133" file="__tests__/unit/layout/spacer.test.ts" line="413" assertions="6" />
      <testcase name="combines spacers and dividers" classname="Integration scenarios" time="0.000051" file="__tests__/unit/layout/spacer.test.ts" line="431" assertions="2" />
      <testcase name="handles edge cases" classname="Integration scenarios" time="0.000028" file="__tests__/unit/layout/spacer.test.ts" line="441" assertions="4" />
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/layout/box.test.ts" file="__tests__/unit/layout/box.test.ts" tests="22" assertions="34" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Box Layout System" file="__tests__/unit/layout/box.test.ts" line="13" tests="22" assertions="34" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="styledBox basic functionality" file="__tests__/unit/layout/box.test.ts" line="14" tests="4" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates box with default options" classname="styledBox basic functionality &amp;gt; Box Layout System" time="0.000037" file="__tests__/unit/layout/box.test.ts" line="15" assertions="2" />
        <testcase name="adds padding to content" classname="styledBox basic functionality &amp;gt; Box Layout System" time="0.000031" file="__tests__/unit/layout/box.test.ts" line="23" assertions="2" />
        <testcase name="handles minimum width" classname="styledBox basic functionality &amp;gt; Box Layout System" time="0.00002" file="__tests__/unit/layout/box.test.ts" line="32" assertions="1" />
        <testcase name="handles minimum height" classname="styledBox basic functionality &amp;gt; Box Layout System" time="0.000018" file="__tests__/unit/layout/box.test.ts" line="40" assertions="1" />
      </testsuite>
      <testsuite name="borders" file="__tests__/unit/layout/box.test.ts" line="49" tests="2" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="adds simple border" classname="borders &amp;gt; Box Layout System" time="0.000019" file="__tests__/unit/layout/box.test.ts" line="50" assertions="2" />
        <testcase name="combines border with padding" classname="borders &amp;gt; Box Layout System" time="0.000023" file="__tests__/unit/layout/box.test.ts" line="59" assertions="2" />
      </testsuite>
      <testsuite name="object padding" file="__tests__/unit/layout/box.test.ts" line="72" tests="1" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles complex padding object" classname="object padding &amp;gt; Box Layout System" time="0.000013" file="__tests__/unit/layout/box.test.ts" line="73" assertions="2" />
      </testsuite>
      <testsuite name="styling" file="__tests__/unit/layout/box.test.ts" line="85" tests="3" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="applies background color" classname="styling &amp;gt; Box Layout System" time="0.000052" file="__tests__/unit/layout/box.test.ts" line="86" assertions="1" />
        <testcase name="applies foreground color" classname="styling &amp;gt; Box Layout System" time="0.000021" file="__tests__/unit/layout/box.test.ts" line="95" assertions="1" />
        <testcase name="combines styling with borders" classname="styling &amp;gt; Box Layout System" time="0.000023" file="__tests__/unit/layout/box.test.ts" line="104" assertions="1" />
      </testsuite>
      <testsuite name="size constraints" file="__tests__/unit/layout/box.test.ts" line="117" tests="3" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="respects minimum width" classname="size constraints &amp;gt; Box Layout System" time="0.000014" file="__tests__/unit/layout/box.test.ts" line="118" assertions="1" />
        <testcase name="respects minimum height" classname="size constraints &amp;gt; Box Layout System" time="0.000011" file="__tests__/unit/layout/box.test.ts" line="126" assertions="1" />
        <testcase name="handles both width and height constraints" classname="size constraints &amp;gt; Box Layout System" time="0.000015" file="__tests__/unit/layout/box.test.ts" line="134" assertions="2" />
      </testsuite>
      <testsuite name="complex content" file="__tests__/unit/layout/box.test.ts" line="144" tests="3" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles multiline content" classname="complex content &amp;gt; Box Layout System" time="0.000013" file="__tests__/unit/layout/box.test.ts" line="145" assertions="1" />
        <testcase name="handles wide content" classname="complex content &amp;gt; Box Layout System" time="0.000022" file="__tests__/unit/layout/box.test.ts" line="153" assertions="1" />
        <testcase name="handles empty content" classname="complex content &amp;gt; Box Layout System" time="0.000011" file="__tests__/unit/layout/box.test.ts" line="162" assertions="2" />
      </testsuite>
      <testsuite name="rendering" file="__tests__/unit/layout/box.test.ts" line="172" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="renders simple box correctly" classname="rendering &amp;gt; Box Layout System" time="0.000093" file="__tests__/unit/layout/box.test.ts" line="173" assertions="1" />
        <testcase name="renders border correctly" classname="rendering &amp;gt; Box Layout System" time="0.000062" file="__tests__/unit/layout/box.test.ts" line="182" assertions="2" />
      </testsuite>
      <testsuite name="edge cases" file="__tests__/unit/layout/box.test.ts" line="194" tests="3" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles zero padding" classname="edge cases &amp;gt; Box Layout System" time="0.000014" file="__tests__/unit/layout/box.test.ts" line="195" assertions="2" />
        <testcase name="handles very large padding" classname="edge cases &amp;gt; Box Layout System" time="0.000012" file="__tests__/unit/layout/box.test.ts" line="204" assertions="2" />
        <testcase name="handles negative dimensions gracefully" classname="edge cases &amp;gt; Box Layout System" time="0.00001" file="__tests__/unit/layout/box.test.ts" line="213" assertions="2" />
      </testsuite>
      <testsuite name="performance" file="__tests__/unit/layout/box.test.ts" line="227" tests="1" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles large content efficiently" classname="performance &amp;gt; Box Layout System" time="0.000055" file="__tests__/unit/layout/box.test.ts" line="228" assertions="2" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/layout/grid.test.ts" file="__tests__/unit/layout/grid.test.ts" tests="35" assertions="92" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Grid Layout" file="__tests__/unit/layout/grid.test.ts" line="33" tests="35" assertions="92" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="grid" file="__tests__/unit/layout/grid.test.ts" line="34" tests="9" assertions="22" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates grid with single item" classname="grid &amp;gt; Grid Layout" time="0.000733" file="__tests__/unit/layout/grid.test.ts" line="35" assertions="3" />
        <testcase name="creates grid with multiple items" classname="grid &amp;gt; Grid Layout" time="0.000093" file="__tests__/unit/layout/grid.test.ts" line="45" assertions="3" />
        <testcase name="creates grid with custom template" classname="grid &amp;gt; Grid Layout" time="0.000069" file="__tests__/unit/layout/grid.test.ts" line="58" assertions="2" />
        <testcase name="creates grid with gaps" classname="grid &amp;gt; Grid Layout" time="0.000062" file="__tests__/unit/layout/grid.test.ts" line="77" assertions="2" />
        <testcase name="creates grid with different column and row gaps" classname="grid &amp;gt; Grid Layout" time="0.000053" file="__tests__/unit/layout/grid.test.ts" line="97" assertions="1" />
        <testcase name="creates grid with padding" classname="grid &amp;gt; Grid Layout" time="0.000059" file="__tests__/unit/layout/grid.test.ts" line="117" assertions="3" />
        <testcase name="handles grid items vs plain views" classname="grid &amp;gt; Grid Layout" time="0.000063" file="__tests__/unit/layout/grid.test.ts" line="136" assertions="2" />
        <testcase name="renders empty grid" classname="grid &amp;gt; Grid Layout" time="0.000045" file="__tests__/unit/layout/grid.test.ts" line="150" assertions="3" />
        <testcase name="handles multiline content" classname="grid &amp;gt; Grid Layout" time="0.000055" file="__tests__/unit/layout/grid.test.ts" line="160" assertions="3" />
      </testsuite>
      <testsuite name="grid with explicit placement" file="__tests__/unit/layout/grid.test.ts" line="171" tests="4" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="places item at specific column" classname="grid with explicit placement &amp;gt; Grid Layout" time="0.000096" file="__tests__/unit/layout/grid.test.ts" line="172" assertions="2" />
        <testcase name="places item at specific row" classname="grid with explicit placement &amp;gt; Grid Layout" time="0.000062" file="__tests__/unit/layout/grid.test.ts" line="188" assertions="2" />
        <testcase name="handles column and row spans" classname="grid with explicit placement &amp;gt; Grid Layout" time="0.000058" file="__tests__/unit/layout/grid.test.ts" line="202" assertions="1" />
        <testcase name="handles explicit start/end placement" classname="grid with explicit placement &amp;gt; Grid Layout" time="0.000067" file="__tests__/unit/layout/grid.test.ts" line="214" assertions="1" />
      </testsuite>
      <testsuite name="columns helper" file="__tests__/unit/layout/grid.test.ts" line="227" tests="3" assertions="13" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates equal columns template" classname="columns helper &amp;gt; Grid Layout" time="0.000044" file="__tests__/unit/layout/grid.test.ts" line="228" assertions="5" />
        <testcase name="creates single column template" classname="columns helper &amp;gt; Grid Layout" time="0.000026" file="__tests__/unit/layout/grid.test.ts" line="238" assertions="2" />
        <testcase name="creates many columns template" classname="columns helper &amp;gt; Grid Layout" time="0.000042" file="__tests__/unit/layout/grid.test.ts" line="245" assertions="6" />
      </testsuite>
      <testsuite name="template helper" file="__tests__/unit/layout/grid.test.ts" line="254" tests="8" assertions="27" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="parses fraction columns" classname="template helper &amp;gt; Grid Layout" time="0.000261" file="__tests__/unit/layout/grid.test.ts" line="255" assertions="5" />
        <testcase name="parses fixed size columns" classname="template helper &amp;gt; Grid Layout" time="0.000024" file="__tests__/unit/layout/grid.test.ts" line="265" assertions="4" />
        <testcase name="parses auto columns" classname="template helper &amp;gt; Grid Layout" time="0.000018" file="__tests__/unit/layout/grid.test.ts" line="274" assertions="3" />
        <testcase name="parses mixed column types" classname="template helper &amp;gt; Grid Layout" time="0.000027" file="__tests__/unit/layout/grid.test.ts" line="282" assertions="5" />
        <testcase name="parses rows when provided" classname="template helper &amp;gt; Grid Layout" time="0.000011" file="__tests__/unit/layout/grid.test.ts" line="292" assertions="4" />
        <testcase name="uses auto rows when not provided" classname="template helper &amp;gt; Grid Layout" time="0.000014" file="__tests__/unit/layout/grid.test.ts" line="301" assertions="1" />
        <testcase name="handles single column spec" classname="template helper &amp;gt; Grid Layout" time="0" file="__tests__/unit/layout/grid.test.ts" line="307" assertions="2" />
        <testcase name="handles fractional values" classname="template helper &amp;gt; Grid Layout" time="0.00003" file="__tests__/unit/layout/grid.test.ts" line="314" assertions="3" />
      </testsuite>
      <testsuite name="gridItem helper" file="__tests__/unit/layout/grid.test.ts" line="323" tests="2" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates grid item with placement" classname="gridItem helper &amp;gt; Grid Layout" time="0.000013" file="__tests__/unit/layout/grid.test.ts" line="324" assertions="2" />
        <testcase name="creates grid item with complex placement" classname="gridItem helper &amp;gt; Grid Layout" time="0.000016" file="__tests__/unit/layout/grid.test.ts" line="334" assertions="2" />
      </testsuite>
      <testsuite name="span helper" file="__tests__/unit/layout/grid.test.ts" line="350" tests="3" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates spanning grid item" classname="span helper &amp;gt; Grid Layout" time="0.000025" file="__tests__/unit/layout/grid.test.ts" line="351" assertions="2" />
        <testcase name="creates column-only span" classname="span helper &amp;gt; Grid Layout" time="0.000012" file="__tests__/unit/layout/grid.test.ts" line="363" assertions="2" />
        <testcase name="handles single cell span" classname="span helper &amp;gt; Grid Layout" time="0.000011" file="__tests__/unit/layout/grid.test.ts" line="375" assertions="1" />
      </testsuite>
      <testsuite name="Grid integration scenarios" file="__tests__/unit/layout/grid.test.ts" line="387" tests="6" assertions="15" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates complex grid layout" classname="Grid integration scenarios &amp;gt; Grid Layout" time="0.000126" file="__tests__/unit/layout/grid.test.ts" line="388" assertions="2" />
        <testcase name="handles auto-placement with mixed items" classname="Grid integration scenarios &amp;gt; Grid Layout" time="0.000069" file="__tests__/unit/layout/grid.test.ts" line="410" assertions="4" />
        <testcase name="handles different track types" classname="Grid integration scenarios &amp;gt; Grid Layout" time="0.00007" file="__tests__/unit/layout/grid.test.ts" line="429" assertions="3" />
        <testcase name="handles edge cases" classname="Grid integration scenarios &amp;gt; Grid Layout" time="0.000155" file="__tests__/unit/layout/grid.test.ts" line="455" assertions="3" />
        <testcase name="handles content that exceeds cell bounds" classname="Grid integration scenarios &amp;gt; Grid Layout" time="0.000082" file="__tests__/unit/layout/grid.test.ts" line="475" assertions="1" />
        <testcase name="calculates grid dimensions correctly" classname="Grid integration scenarios &amp;gt; Grid Layout" time="0.000031" file="__tests__/unit/layout/grid.test.ts" line="489" assertions="2" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/utils/string-width-comprehensive.test.ts" file="__tests__/unit/utils/string-width-comprehensive.test.ts" tests="38" assertions="86" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="String Width Utilities" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="39" tests="38" assertions="86" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="stringWidth" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="40" tests="6" assertions="18" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="calculates width of ASCII strings" classname="stringWidth &amp;gt; String Width Utilities" time="0.000732" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="41" assertions="4" />
        <testcase name="calculates width of unicode characters" classname="stringWidth &amp;gt; String Width Utilities" time="0.000024" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="48" assertions="2" />
        <testcase name="handles emoji overrides" classname="stringWidth &amp;gt; String Width Utilities" time="0.000008" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="53" assertions="2" />
        <testcase name="handles empty and whitespace strings" classname="stringWidth &amp;gt; String Width Utilities" time="0.000027" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="58" assertions="5" />
        <testcase name="handles mixed content" classname="stringWidth &amp;gt; String Width Utilities" time="0.000008" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="66" assertions="2" />
        <testcase name="handles special characters" classname="stringWidth &amp;gt; String Width Utilities" time="0.000012" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="71" assertions="3" />
      </testsuite>
      <testsuite name="truncateString" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="78" tests="10" assertions="19" failures="0" skipped="0" time="0.001" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="returns string unchanged when within width" classname="truncateString &amp;gt; String Width Utilities" time="0.000069" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="79" assertions="3" />
        <testcase name="truncates long strings with default suffix" classname="truncateString &amp;gt; String Width Utilities" time="0.001233" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="85" assertions="2" />
        <testcase name="truncates with custom suffix" classname="truncateString &amp;gt; String Width Utilities" time="0.000059" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="90" assertions="2" />
        <testcase name="handles suffix longer than max width" classname="truncateString &amp;gt; String Width Utilities" time="0.000024" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="95" assertions="2" />
        <testcase name="handles zero and negative widths" classname="truncateString &amp;gt; String Width Utilities" time="0.000009" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="100" assertions="2" />
        <testcase name="handles empty strings" classname="truncateString &amp;gt; String Width Utilities" time="0.000069" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="105" assertions="2" />
        <testcase name="handles unicode characters correctly" classname="truncateString &amp;gt; String Width Utilities" time="0.000112" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="110" assertions="2" />
        <testcase name="handles emoji override cases" classname="truncateString &amp;gt; String Width Utilities" time="0.000042" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="115" assertions="1" />
        <testcase name="uses grapheme segmentation correctly" classname="truncateString &amp;gt; String Width Utilities" time="0.000028" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="119" assertions="1" />
        <testcase name="handles edge case where only suffix fits" classname="truncateString &amp;gt; String Width Utilities" time="0.000018" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="124" assertions="2" />
      </testsuite>
      <testsuite name="padString" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="130" tests="17" assertions="36" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testsuite name="left alignment (default)" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="131" tests="4" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="pads strings to target width" classname="left alignment (default) &amp;gt; padString &amp;gt; String Width Utilities" time="0.000061" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="132" assertions="2" />
          <testcase name="returns string unchanged when already wide enough" classname="left alignment (default) &amp;gt; padString &amp;gt; String Width Utilities" time="0.000024" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="137" assertions="2" />
          <testcase name="handles empty strings" classname="left alignment (default) &amp;gt; padString &amp;gt; String Width Utilities" time="0.000016" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="142" assertions="2" />
          <testcase name="handles zero width" classname="left alignment (default) &amp;gt; padString &amp;gt; String Width Utilities" time="0.000008" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="147" assertions="1" />
        </testsuite>
        <testsuite name="center alignment" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="152" tests="4" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="centers strings with even padding" classname="center alignment &amp;gt; padString &amp;gt; String Width Utilities" time="0.000012" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="153" assertions="2" />
          <testcase name="centers strings with odd padding" classname="center alignment &amp;gt; padString &amp;gt; String Width Utilities" time="0.000023" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="158" assertions="2" />
          <testcase name="handles single character padding" classname="center alignment &amp;gt; padString &amp;gt; String Width Utilities" time="0.000005" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="163" assertions="1" />
          <testcase name="returns string when no padding needed" classname="center alignment &amp;gt; padString &amp;gt; String Width Utilities" time="0.000006" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="167" assertions="2" />
        </testsuite>
        <testsuite name="right alignment" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="173" tests="3" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="right-aligns strings" classname="right alignment &amp;gt; padString &amp;gt; String Width Utilities" time="0.000017" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="174" assertions="2" />
          <testcase name="handles minimum width" classname="right alignment &amp;gt; padString &amp;gt; String Width Utilities" time="0.000006" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="179" assertions="1" />
          <testcase name="returns string when no padding needed" classname="right alignment &amp;gt; padString &amp;gt; String Width Utilities" time="0.000008" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="183" assertions="2" />
        </testsuite>
        <testsuite name="unicode handling" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="189" tests="3" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="correctly pads unicode strings" classname="unicode handling &amp;gt; padString &amp;gt; String Width Utilities" time="0.000019" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="190" assertions="3" />
          <testcase name="handles emoji correctly" classname="unicode handling &amp;gt; padString &amp;gt; String Width Utilities" time="0.000016" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="196" assertions="3" />
          <testcase name="handles emoji overrides" classname="unicode handling &amp;gt; padString &amp;gt; String Width Utilities" time="0.000021" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="202" assertions="2" />
        </testsuite>
        <testsuite name="edge cases" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="208" tests="3" assertions="9" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="handles zero width gracefully" classname="edge cases &amp;gt; padString &amp;gt; String Width Utilities" time="0.000009" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="209" assertions="3" />
          <testcase name="handles negative width gracefully" classname="edge cases &amp;gt; padString &amp;gt; String Width Utilities" time="0.000018" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="215" assertions="3" />
          <testcase name="handles empty strings with width" classname="edge cases &amp;gt; padString &amp;gt; String Width Utilities" time="0.000021" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="221" assertions="3" />
        </testsuite>
      </testsuite>
      <testsuite name="Integration scenarios" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="229" tests="5" assertions="13" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="truncate and pad work together" classname="Integration scenarios &amp;gt; String Width Utilities" time="0.000052" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="230" assertions="2" />
        <testcase name="handles complex unicode content" classname="Integration scenarios &amp;gt; String Width Utilities" time="0.000048" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="239" assertions="1" />
        <testcase name="preserves emoji overrides through operations" classname="Integration scenarios &amp;gt; String Width Utilities" time="0.000045" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="248" assertions="3" />
        <testcase name="handles real-world table scenarios" classname="Integration scenarios &amp;gt; String Width Utilities" time="0.000052" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="259" assertions="3" />
        <testcase name="handles terminal column layout" classname="Integration scenarios &amp;gt; String Width Utilities" time="0.000084" file="__tests__/unit/utils/string-width-comprehensive.test.ts" line="272" assertions="4" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/cli/parser-comprehensive.test.ts" file="__tests__/unit/cli/parser-comprehensive.test.ts" tests="17" assertions="38" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="CLI Parser" file="__tests__/unit/cli/parser-comprehensive.test.ts" line="10" tests="17" assertions="38" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="Basic parsing" file="__tests__/unit/cli/parser-comprehensive.test.ts" line="18" tests="3" assertions="11" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="parses simple command" classname="Basic parsing &amp;gt; CLI Parser" time="0.000179" file="__tests__/unit/cli/parser-comprehensive.test.ts" line="19" assertions="3" />
        <testcase name="parses command with options" classname="Basic parsing &amp;gt; CLI Parser" time="0.000235" file="__tests__/unit/cli/parser-comprehensive.test.ts" line="40" assertions="5" />
        <testcase name="parses global options" classname="Basic parsing &amp;gt; CLI Parser" time="0.000156" file="__tests__/unit/cli/parser-comprehensive.test.ts" line="62" assertions="3" />
      </testsuite>
      <testsuite name="Argument parsing" file="__tests__/unit/cli/parser-comprehensive.test.ts" line="85" tests="3" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="parses multiple arguments" classname="Argument parsing &amp;gt; CLI Parser" time="0.00009" file="__tests__/unit/cli/parser-comprehensive.test.ts" line="86" assertions="2" />
        <testcase name="parses variadic arguments" classname="Argument parsing &amp;gt; CLI Parser" time="0.000258" file="__tests__/unit/cli/parser-comprehensive.test.ts" line="105" assertions="1" />
        <testcase name="handles optional arguments" classname="Argument parsing &amp;gt; CLI Parser" time="0.000062" file="__tests__/unit/cli/parser-comprehensive.test.ts" line="122" assertions="2" />
      </testsuite>
      <testsuite name="Option parsing" file="__tests__/unit/cli/parser-comprehensive.test.ts" line="142" tests="4" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="parses boolean flags" classname="Option parsing &amp;gt; CLI Parser" time="0.000102" file="__tests__/unit/cli/parser-comprehensive.test.ts" line="143" assertions="3" />
        <testcase name="parses string options" classname="Option parsing &amp;gt; CLI Parser" time="0.000225" file="__tests__/unit/cli/parser-comprehensive.test.ts" line="167" assertions="2" />
        <testcase name="parses array options" classname="Option parsing &amp;gt; CLI Parser" time="0.000068" file="__tests__/unit/cli/parser-comprehensive.test.ts" line="186" assertions="1" />
        <testcase name="handles option aliases" classname="Option parsing &amp;gt; CLI Parser" time="0.000098" file="__tests__/unit/cli/parser-comprehensive.test.ts" line="208" assertions="2" />
      </testsuite>
      <testsuite name="Error handling" file="__tests__/unit/cli/parser-comprehensive.test.ts" line="232" tests="3" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="parses unknown command as positional arg" classname="Error handling &amp;gt; CLI Parser" time="0.000039" file="__tests__/unit/cli/parser-comprehensive.test.ts" line="233" assertions="2" />
        <testcase name="throws on missing required args" classname="Error handling &amp;gt; CLI Parser" time="0.000447" file="__tests__/unit/cli/parser-comprehensive.test.ts" line="248" assertions="1" />
        <testcase name="throws on invalid option values" classname="Error handling &amp;gt; CLI Parser" time="0.00016" file="__tests__/unit/cli/parser-comprehensive.test.ts" line="263" assertions="1" />
      </testsuite>
      <testsuite name="Special cases" file="__tests__/unit/cli/parser-comprehensive.test.ts" line="279" tests="3" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles empty args" classname="Special cases &amp;gt; CLI Parser" time="0.000042" file="__tests__/unit/cli/parser-comprehensive.test.ts" line="280" assertions="2" />
        <testcase name="stops parsing at --" classname="Special cases &amp;gt; CLI Parser" time="0.000075" file="__tests__/unit/cli/parser-comprehensive.test.ts" line="289" assertions="3" />
        <testcase name="handles = in options" classname="Special cases &amp;gt; CLI Parser" time="0.000055" file="__tests__/unit/cli/parser-comprehensive.test.ts" line="310" assertions="2" />
      </testsuite>
      <testsuite name="Help generation" file="__tests__/unit/cli/parser-comprehensive.test.ts" line="330" tests="1" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="detects help flag" classname="Help generation &amp;gt; CLI Parser" time="0.000022" file="__tests__/unit/cli/parser-comprehensive.test.ts" line="331" assertions="3" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/cli/help-comprehensive.test.ts" file="__tests__/unit/cli/help-comprehensive.test.ts" tests="40" assertions="82" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="CLI Help Module" file="__tests__/unit/cli/help-comprehensive.test.ts" line="22" tests="40" assertions="82" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="wrapText function" file="__tests__/unit/cli/help-comprehensive.test.ts" line="23" tests="6" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="wraps long text to specified width" classname="wrapText function &amp;gt; CLI Help Module" time="0.000165" file="__tests__/unit/cli/help-comprehensive.test.ts" line="24" assertions="2" />
        <testcase name="preserves short text" classname="wrapText function &amp;gt; CLI Help Module" time="0.000017" file="__tests__/unit/cli/help-comprehensive.test.ts" line="32" assertions="1" />
        <testcase name="handles empty text" classname="wrapText function &amp;gt; CLI Help Module" time="0.000016" file="__tests__/unit/cli/help-comprehensive.test.ts" line="38" assertions="1" />
        <testcase name="handles single character width" classname="wrapText function &amp;gt; CLI Help Module" time="0.000017" file="__tests__/unit/cli/help-comprehensive.test.ts" line="43" assertions="1" />
        <testcase name="preserves existing line breaks" classname="wrapText function &amp;gt; CLI Help Module" time="0.000012" file="__tests__/unit/cli/help-comprehensive.test.ts" line="48" assertions="1" />
        <testcase name="wraps at word boundaries" classname="wrapText function &amp;gt; CLI Help Module" time="0.000016" file="__tests__/unit/cli/help-comprehensive.test.ts" line="54" assertions="2" />
      </testsuite>
      <testsuite name="alignColumns function" file="__tests__/unit/cli/help-comprehensive.test.ts" line="63" tests="4" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="aligns two-column data" classname="alignColumns function &amp;gt; CLI Help Module" time="0.000124" file="__tests__/unit/cli/help-comprehensive.test.ts" line="64" assertions="3" />
        <testcase name="handles empty data" classname="alignColumns function &amp;gt; CLI Help Module" time="0.000009" file="__tests__/unit/cli/help-comprehensive.test.ts" line="77" assertions="1" />
        <testcase name="handles single column" classname="alignColumns function &amp;gt; CLI Help Module" time="0.000017" file="__tests__/unit/cli/help-comprehensive.test.ts" line="82" assertions="2" />
        <testcase name="handles varying column widths" classname="alignColumns function &amp;gt; CLI Help Module" time="0.000015" file="__tests__/unit/cli/help-comprehensive.test.ts" line="89" assertions="2" />
      </testsuite>
      <testsuite name="formatDescription function" file="__tests__/unit/cli/help-comprehensive.test.ts" line="101" tests="4" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="formats basic description" classname="formatDescription function &amp;gt; CLI Help Module" time="0.000016" file="__tests__/unit/cli/help-comprehensive.test.ts" line="102" assertions="1" />
        <testcase name="wraps long descriptions" classname="formatDescription function &amp;gt; CLI Help Module" time="0.000015" file="__tests__/unit/cli/help-comprehensive.test.ts" line="107" assertions="1" />
        <testcase name="preserves markdown-style formatting" classname="formatDescription function &amp;gt; CLI Help Module" time="0.000016" file="__tests__/unit/cli/help-comprehensive.test.ts" line="114" assertions="2" />
        <testcase name="handles bullet points" classname="formatDescription function &amp;gt; CLI Help Module" time="0.000014" file="__tests__/unit/cli/help-comprehensive.test.ts" line="121" assertions="2" />
      </testsuite>
      <testsuite name="formatOption function" file="__tests__/unit/cli/help-comprehensive.test.ts" line="129" tests="4" assertions="10" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="formats option with short and long forms" classname="formatOption function &amp;gt; CLI Help Module" time="0.000037" file="__tests__/unit/cli/help-comprehensive.test.ts" line="130" assertions="3" />
        <testcase name="formats option with only long form" classname="formatOption function &amp;gt; CLI Help Module" time="0.000024" file="__tests__/unit/cli/help-comprehensive.test.ts" line="143" assertions="2" />
        <testcase name="formats option with default value" classname="formatOption function &amp;gt; CLI Help Module" time="0.000015" file="__tests__/unit/cli/help-comprehensive.test.ts" line="154" assertions="3" />
        <testcase name="formats option with required flag" classname="formatOption function &amp;gt; CLI Help Module" time="0.000012" file="__tests__/unit/cli/help-comprehensive.test.ts" line="167" assertions="2" />
      </testsuite>
      <testsuite name="formatFlag function" file="__tests__/unit/cli/help-comprehensive.test.ts" line="180" tests="2" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="formats simple flag" classname="formatFlag function &amp;gt; CLI Help Module" time="0.000032" file="__tests__/unit/cli/help-comprehensive.test.ts" line="181" assertions="2" />
        <testcase name="formats flag with short form" classname="formatFlag function &amp;gt; CLI Help Module" time="0.000011" file="__tests__/unit/cli/help-comprehensive.test.ts" line="191" assertions="2" />
      </testsuite>
      <testsuite name="formatCommand function" file="__tests__/unit/cli/help-comprehensive.test.ts" line="203" tests="3" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="formats basic command" classname="formatCommand function &amp;gt; CLI Help Module" time="0.000026" file="__tests__/unit/cli/help-comprehensive.test.ts" line="204" assertions="2" />
        <testcase name="formats command with examples" classname="formatCommand function &amp;gt; CLI Help Module" time="0.000041" file="__tests__/unit/cli/help-comprehensive.test.ts" line="215" assertions="2" />
        <testcase name="formats command with options" classname="formatCommand function &amp;gt; CLI Help Module" time="0.000024" file="__tests__/unit/cli/help-comprehensive.test.ts" line="229" assertions="2" />
      </testsuite>
      <testsuite name="formatExample function" file="__tests__/unit/cli/help-comprehensive.test.ts" line="247" tests="3" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="formats simple example" classname="formatExample function &amp;gt; CLI Help Module" time="0.000065" file="__tests__/unit/cli/help-comprehensive.test.ts" line="248" assertions="1" />
        <testcase name="formats example with description" classname="formatExample function &amp;gt; CLI Help Module" time="0.000025" file="__tests__/unit/cli/help-comprehensive.test.ts" line="254" assertions="2" />
        <testcase name="handles multi-line examples" classname="formatExample function &amp;gt; CLI Help Module" time="0.000013" file="__tests__/unit/cli/help-comprehensive.test.ts" line="264" assertions="1" />
      </testsuite>
      <testsuite name="generateUsageString function" file="__tests__/unit/cli/help-comprehensive.test.ts" line="271" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="generates basic usage" classname="generateUsageString function &amp;gt; CLI Help Module" time="0.000038" file="__tests__/unit/cli/help-comprehensive.test.ts" line="272" assertions="2" />
        <testcase name="generates usage with global options" classname="generateUsageString function &amp;gt; CLI Help Module" time="0.000024" file="__tests__/unit/cli/help-comprehensive.test.ts" line="282" assertions="1" />
      </testsuite>
      <testsuite name="generateCommandList function" file="__tests__/unit/cli/help-comprehensive.test.ts" line="295" tests="2" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="generates list of commands" classname="generateCommandList function &amp;gt; CLI Help Module" time="0.000022" file="__tests__/unit/cli/help-comprehensive.test.ts" line="296" assertions="4" />
        <testcase name="handles empty command list" classname="generateCommandList function &amp;gt; CLI Help Module" time="0.000003" file="__tests__/unit/cli/help-comprehensive.test.ts" line="309" assertions="1" />
      </testsuite>
      <testsuite name="generateOptionList function" file="__tests__/unit/cli/help-comprehensive.test.ts" line="315" tests="2" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="generates list of options" classname="generateOptionList function &amp;gt; CLI Help Module" time="0.000016" file="__tests__/unit/cli/help-comprehensive.test.ts" line="316" assertions="3" />
        <testcase name="handles empty option list" classname="generateOptionList function &amp;gt; CLI Help Module" time="0.000011" file="__tests__/unit/cli/help-comprehensive.test.ts" line="327" assertions="1" />
      </testsuite>
      <testsuite name="createHelpSections function" file="__tests__/unit/cli/help-comprehensive.test.ts" line="333" tests="2" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates standard help sections" classname="createHelpSections function &amp;gt; CLI Help Module" time="0.000069" file="__tests__/unit/cli/help-comprehensive.test.ts" line="334" assertions="4" />
        <testcase name="includes examples section when provided" classname="createHelpSections function &amp;gt; CLI Help Module" time="0.000028" file="__tests__/unit/cli/help-comprehensive.test.ts" line="353" assertions="2" />
      </testsuite>
      <testsuite name="colorizeHelp function" file="__tests__/unit/cli/help-comprehensive.test.ts" line="367" tests="3" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="adds colors to help text" classname="colorizeHelp function &amp;gt; CLI Help Module" time="0.000095" file="__tests__/unit/cli/help-comprehensive.test.ts" line="368" assertions="1" />
        <testcase name="preserves original text structure" classname="colorizeHelp function &amp;gt; CLI Help Module" time="0" file="__tests__/unit/cli/help-comprehensive.test.ts" line="374" assertions="1" />
        <testcase name="handles empty text" classname="colorizeHelp function &amp;gt; CLI Help Module" time="0.00004" file="__tests__/unit/cli/help-comprehensive.test.ts" line="382" assertions="1" />
      </testsuite>
      <testsuite name="generateHelp function" file="__tests__/unit/cli/help-comprehensive.test.ts" line="388" tests="3" assertions="15" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="generates complete help text" classname="generateHelp function &amp;gt; CLI Help Module" time="0.000124" file="__tests__/unit/cli/help-comprehensive.test.ts" line="389" assertions="12" />
        <testcase name="generates minimal help" classname="generateHelp function &amp;gt; CLI Help Module" time="0.000018" file="__tests__/unit/cli/help-comprehensive.test.ts" line="423" assertions="2" />
        <testcase name="handles missing optional fields" classname="generateHelp function &amp;gt; CLI Help Module" time="0.000011" file="__tests__/unit/cli/help-comprehensive.test.ts" line="433" assertions="1" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/cli/plugin.test.ts" file="__tests__/unit/cli/plugin.test.ts" tests="25" assertions="41" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="CLI Plugin System" file="__tests__/unit/cli/plugin.test.ts" line="25" tests="25" assertions="41" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="createPlugin" file="__tests__/unit/cli/plugin.test.ts" line="48" tests="6" assertions="9" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates a basic plugin" classname="createPlugin &amp;gt; CLI Plugin System" time="0.000089" file="__tests__/unit/cli/plugin.test.ts" line="49" assertions="2" />
        <testcase name="creates plugin with commands" classname="createPlugin &amp;gt; CLI Plugin System" time="0.000038" file="__tests__/unit/cli/plugin.test.ts" line="61" assertions="2" />
        <testcase name="creates plugin with hooks" classname="createPlugin &amp;gt; CLI Plugin System" time="0.000019" file="__tests__/unit/cli/plugin.test.ts" line="86" assertions="2" />
        <testcase name="creates plugin with middleware" classname="createPlugin &amp;gt; CLI Plugin System" time="0.000016" file="__tests__/unit/cli/plugin.test.ts" line="104" assertions="1" />
        <testcase name="creates plugin with init function" classname="createPlugin &amp;gt; CLI Plugin System" time="0.000018" file="__tests__/unit/cli/plugin.test.ts" line="125" assertions="1" />
        <testcase name="creates plugin with services" classname="createPlugin &amp;gt; CLI Plugin System" time="0.00002" file="__tests__/unit/cli/plugin.test.ts" line="139" assertions="1" />
      </testsuite>
      <testsuite name="validatePlugin" file="__tests__/unit/cli/plugin.test.ts" line="159" tests="4" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="validates a valid plugin" classname="validatePlugin &amp;gt; CLI Plugin System" time="0.000111" file="__tests__/unit/cli/plugin.test.ts" line="160" assertions="2" />
        <testcase name="detects missing metadata" classname="validatePlugin &amp;gt; CLI Plugin System" time="0.000014" file="__tests__/unit/cli/plugin.test.ts" line="174" assertions="2" />
        <testcase name="detects invalid metadata" classname="validatePlugin &amp;gt; CLI Plugin System" time="0.000017" file="__tests__/unit/cli/plugin.test.ts" line="182" assertions="2" />
        <testcase name="validates command schemas" classname="validatePlugin &amp;gt; CLI Plugin System" time="0.000031" file="__tests__/unit/cli/plugin.test.ts" line="195" assertions="1" />
      </testsuite>
      <testsuite name="composePlugins" file="__tests__/unit/cli/plugin.test.ts" line="215" tests="3" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="composes multiple plugins" classname="composePlugins &amp;gt; CLI Plugin System" time="0.000138" file="__tests__/unit/cli/plugin.test.ts" line="216" assertions="3" />
        <testcase name="merges hooks from multiple plugins" classname="composePlugins &amp;gt; CLI Plugin System" time="0.000137" file="__tests__/unit/cli/plugin.test.ts" line="244" assertions="2" />
        <testcase name="composes plugins without middleware support" classname="composePlugins &amp;gt; CLI Plugin System" time="0.00009" file="__tests__/unit/cli/plugin.test.ts" line="267" assertions="2" />
      </testsuite>
      <testsuite name="PluginManager" file="__tests__/unit/cli/plugin.test.ts" line="286" tests="3" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="manages plugin lifecycle" classname="PluginManager &amp;gt; CLI Plugin System" time="0.000243" file="__tests__/unit/cli/plugin.test.ts" line="287" assertions="3" />
        <testcase name="handles plugin dependencies" classname="PluginManager &amp;gt; CLI Plugin System" time="0.000185" file="__tests__/unit/cli/plugin.test.ts" line="312" assertions="1" />
        <testcase name="detects circular dependencies" classname="PluginManager &amp;gt; CLI Plugin System" time="0.000211" file="__tests__/unit/cli/plugin.test.ts" line="341" assertions="1" />
      </testsuite>
      <testsuite name="applyPluginTransforms" file="__tests__/unit/cli/plugin.test.ts" line="371" tests="1" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="applies command extensions" classname="applyPluginTransforms &amp;gt; CLI Plugin System" time="0.000151" file="__tests__/unit/cli/plugin.test.ts" line="372" assertions="2" />
      </testsuite>
      <testsuite name="createMiddlewareChain" file="__tests__/unit/cli/plugin.test.ts" line="399" tests="2" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates middleware chain" classname="createMiddlewareChain &amp;gt; CLI Plugin System" time="0.000172" file="__tests__/unit/cli/plugin.test.ts" line="400" assertions="1" />
        <testcase name="handles middleware errors" classname="createMiddlewareChain &amp;gt; CLI Plugin System" time="0.00006" file="__tests__/unit/cli/plugin.test.ts" line="419" assertions="1" />
      </testsuite>
      <testsuite name="mergePluginConfigs" file="__tests__/unit/cli/plugin.test.ts" line="432" tests="2" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="merges plugin configurations" classname="mergePluginConfigs &amp;gt; CLI Plugin System" time="0.000107" file="__tests__/unit/cli/plugin.test.ts" line="433" assertions="1" />
        <testcase name="deep merges nested configs" classname="mergePluginConfigs &amp;gt; CLI Plugin System" time="0.000029" file="__tests__/unit/cli/plugin.test.ts" line="453" assertions="1" />
      </testsuite>
      <testsuite name="resolvePluginDependencies" file="__tests__/unit/cli/plugin.test.ts" line="480" tests="2" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="resolves plugin load order" classname="resolvePluginDependencies &amp;gt; CLI Plugin System" time="0.000041" file="__tests__/unit/cli/plugin.test.ts" line="481" assertions="1" />
        <testcase name="handles plugins without dependencies" classname="resolvePluginDependencies &amp;gt; CLI Plugin System" time="0.000023" file="__tests__/unit/cli/plugin.test.ts" line="508" assertions="1" />
      </testsuite>
      <testsuite name="Plugin Events" file="__tests__/unit/cli/plugin.test.ts" line="522" tests="1" assertions="1" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="emits and handles events" classname="Plugin Events &amp;gt; CLI Plugin System" time="0.000055" file="__tests__/unit/cli/plugin.test.ts" line="523" assertions="1" />
      </testsuite>
      <testsuite name="Plugin Builder Pattern" file="__tests__/unit/cli/plugin.test.ts" line="540" tests="1" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="uses builder pattern for complex plugins" classname="Plugin Builder Pattern &amp;gt; CLI Plugin System" time="0.000093" file="__tests__/unit/cli/plugin.test.ts" line="541" assertions="4" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/cli/registry.test.ts" file="__tests__/unit/cli/registry.test.ts" tests="36" assertions="50" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Plugin Registry" file="__tests__/unit/cli/registry.test.ts" line="9" tests="36" assertions="50" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="constructor" file="__tests__/unit/cli/registry.test.ts" line="29" tests="2" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates registry with default options" classname="constructor &amp;gt; Plugin Registry" time="0.000016" file="__tests__/unit/cli/registry.test.ts" line="30" assertions="1" />
        <testcase name="creates registry with custom options" classname="constructor &amp;gt; Plugin Registry" time="0.000018" file="__tests__/unit/cli/registry.test.ts" line="34" assertions="1" />
      </testsuite>
      <testsuite name="register" file="__tests__/unit/cli/registry.test.ts" line="45" tests="9" assertions="10" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="registers a valid plugin" classname="register &amp;gt; Plugin Registry" time="0.000224" file="__tests__/unit/cli/registry.test.ts" line="46" assertions="2" />
        <testcase name="auto-enables plugin by default" classname="register &amp;gt; Plugin Registry" time="0.000027" file="__tests__/unit/cli/registry.test.ts" line="52" assertions="1" />
        <testcase name="respects autoEnable option" classname="register &amp;gt; Plugin Registry" time="0.00003" file="__tests__/unit/cli/registry.test.ts" line="58" assertions="1" />
        <testcase name="prevents duplicate registration by default" classname="register &amp;gt; Plugin Registry" time="0.000028" file="__tests__/unit/cli/registry.test.ts" line="65" assertions="1" />
        <testcase name="allows duplicates when configured" classname="register &amp;gt; Plugin Registry" time="0.000024" file="__tests__/unit/cli/registry.test.ts" line="71" assertions="1" />
        <testcase name="validates plugin dependencies" classname="register &amp;gt; Plugin Registry" time="0.00004" file="__tests__/unit/cli/registry.test.ts" line="78" assertions="1" />
        <testcase name="registers plugin with satisfied dependencies" classname="register &amp;gt; Plugin Registry" time="0.000025" file="__tests__/unit/cli/registry.test.ts" line="92" assertions="1" />
        <testcase name="stores plugin config" classname="register &amp;gt; Plugin Registry" time="0.000016" file="__tests__/unit/cli/registry.test.ts" line="108" assertions="1" />
        <testcase name="updates dependency graph" classname="register &amp;gt; Plugin Registry" time="0.000026" file="__tests__/unit/cli/registry.test.ts" line="115" assertions="1" />
      </testsuite>
      <testsuite name="unregister" file="__tests__/unit/cli/registry.test.ts" line="141" tests="4" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="removes registered plugin" classname="unregister &amp;gt; Plugin Registry" time="0.00007" file="__tests__/unit/cli/registry.test.ts" line="142" assertions="2" />
        <testcase name="returns false for non-existent plugin" classname="unregister &amp;gt; Plugin Registry" time="0.000012" file="__tests__/unit/cli/registry.test.ts" line="149" assertions="1" />
        <testcase name="prevents unregistering with dependents" classname="unregister &amp;gt; Plugin Registry" time="0.000031" file="__tests__/unit/cli/registry.test.ts" line="154" assertions="2" />
        <testcase name="allows force unregister" classname="unregister &amp;gt; Plugin Registry" time="0.000036" file="__tests__/unit/cli/registry.test.ts" line="180" assertions="2" />
      </testsuite>
      <testsuite name="enable/disable" file="__tests__/unit/cli/registry.test.ts" line="207" tests="4" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="enables a disabled plugin" classname="enable/disable &amp;gt; Plugin Registry" time="0.00007" file="__tests__/unit/cli/registry.test.ts" line="212" assertions="2" />
        <testcase name="disables an enabled plugin" classname="enable/disable &amp;gt; Plugin Registry" time="0.000012" file="__tests__/unit/cli/registry.test.ts" line="219" assertions="2" />
        <testcase name="returns false for non-existent plugin" classname="enable/disable &amp;gt; Plugin Registry" time="0.000016" file="__tests__/unit/cli/registry.test.ts" line="225" assertions="2" />
        <testcase name="triggers lifecycle hooks" classname="enable/disable &amp;gt; Plugin Registry" time="0.000149" file="__tests__/unit/cli/registry.test.ts" line="230" assertions="2" />
      </testsuite>
      <testsuite name="get/getAll" file="__tests__/unit/cli/registry.test.ts" line="253" tests="4" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="retrieves registered plugin" classname="get/getAll &amp;gt; Plugin Registry" time="0.000022" file="__tests__/unit/cli/registry.test.ts" line="254" assertions="1" />
        <testcase name="returns undefined for non-existent plugin" classname="get/getAll &amp;gt; Plugin Registry" time="0.000015" file="__tests__/unit/cli/registry.test.ts" line="260" assertions="1" />
        <testcase name="retrieves all plugins" classname="get/getAll &amp;gt; Plugin Registry" time="0.000085" file="__tests__/unit/cli/registry.test.ts" line="265" assertions="3" />
        <testcase name="filters by enabled status" classname="get/getAll &amp;gt; Plugin Registry" time="0.000031" file="__tests__/unit/cli/registry.test.ts" line="283" assertions="2" />
      </testsuite>
      <testsuite name="getCommands" file="__tests__/unit/cli/registry.test.ts" line="302" tests="3" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="returns commands from all enabled plugins" classname="getCommands &amp;gt; Plugin Registry" time="0.000071" file="__tests__/unit/cli/registry.test.ts" line="303" assertions="2" />
        <testcase name="excludes commands from disabled plugins" classname="getCommands &amp;gt; Plugin Registry" time="0.000022" file="__tests__/unit/cli/registry.test.ts" line="325" assertions="1" />
        <testcase name="handles command conflicts" classname="getCommands &amp;gt; Plugin Registry" time="0.000034" file="__tests__/unit/cli/registry.test.ts" line="333" assertions="1" />
      </testsuite>
      <testsuite name="getDependencyOrder" file="__tests__/unit/cli/registry.test.ts" line="356" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="returns plugins in dependency order" classname="getDependencyOrder &amp;gt; Plugin Registry" time="0.000111" file="__tests__/unit/cli/registry.test.ts" line="357" assertions="2" />
        <testcase name="handles circular dependencies" classname="getDependencyOrder &amp;gt; Plugin Registry" time="0.000063" file="__tests__/unit/cli/registry.test.ts" line="395" assertions="1" />
      </testsuite>
      <testsuite name="applyMiddleware" file="__tests__/unit/cli/registry.test.ts" line="421" tests="3" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="applies middleware to config" classname="applyMiddleware &amp;gt; Plugin Registry" time="0.000138" file="__tests__/unit/cli/registry.test.ts" line="422" assertions="1" />
        <testcase name="applies multiple middleware in order" classname="applyMiddleware &amp;gt; Plugin Registry" time="0.000086" file="__tests__/unit/cli/registry.test.ts" line="445" assertions="2" />
        <testcase name="skips disabled plugin middleware" classname="applyMiddleware &amp;gt; Plugin Registry" time="0.000036" file="__tests__/unit/cli/registry.test.ts" line="484" assertions="1" />
      </testsuite>
      <testsuite name="validatePlugin" file="__tests__/unit/cli/registry.test.ts" line="509" tests="3" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="validates plugin structure" classname="validatePlugin &amp;gt; Plugin Registry" time="0.000071" file="__tests__/unit/cli/registry.test.ts" line="510" assertions="1" />
        <testcase name="rejects invalid plugin" classname="validatePlugin &amp;gt; Plugin Registry" time="0.000014" file="__tests__/unit/cli/registry.test.ts" line="515" assertions="1" />
        <testcase name="validates version format" classname="validatePlugin &amp;gt; Plugin Registry" time="0.00001" file="__tests__/unit/cli/registry.test.ts" line="525" assertions="1" />
      </testsuite>
      <testsuite name="clear" file="__tests__/unit/cli/registry.test.ts" line="539" tests="2" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="removes all plugins" classname="clear &amp;gt; Plugin Registry" time="0.000064" file="__tests__/unit/cli/registry.test.ts" line="540" assertions="1" />
        <testcase name="triggers onDisable for all plugins" classname="clear &amp;gt; Plugin Registry" time="0.000057" file="__tests__/unit/cli/registry.test.ts" line="546" assertions="1" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/cli/plugin-implementation.test.ts" file="__tests__/unit/cli/plugin-implementation.test.ts" tests="18" assertions="39" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="CLI Plugin Implementation" file="__tests__/unit/cli/plugin-implementation.test.ts" line="15" tests="18" assertions="39" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="PluginBuilder" file="__tests__/unit/cli/plugin-implementation.test.ts" line="16" tests="9" assertions="23" failures="0" skipped="0" time="0.001" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="builds a plugin with metadata" classname="PluginBuilder &amp;gt; CLI Plugin Implementation" time="0.000078" file="__tests__/unit/cli/plugin-implementation.test.ts" line="17" assertions="2" />
        <testcase name="adds commands to plugin" classname="PluginBuilder &amp;gt; CLI Plugin Implementation" time="0" file="__tests__/unit/cli/plugin-implementation.test.ts" line="30" assertions="3" />
        <testcase name="adds hooks to plugin" classname="PluginBuilder &amp;gt; CLI Plugin Implementation" time="0" file="__tests__/unit/cli/plugin-implementation.test.ts" line="49" assertions="2" />
        <testcase name="adds middleware to plugin" classname="PluginBuilder &amp;gt; CLI Plugin Implementation" time="0" file="__tests__/unit/cli/plugin-implementation.test.ts" line="63" assertions="3" />
        <testcase name="adds services to plugin" classname="PluginBuilder &amp;gt; CLI Plugin Implementation" time="0" file="__tests__/unit/cli/plugin-implementation.test.ts" line="78" assertions="2" />
        <testcase name="adds extensions to plugin" classname="PluginBuilder &amp;gt; CLI Plugin Implementation" time="0" file="__tests__/unit/cli/plugin-implementation.test.ts" line="92" assertions="2" />
        <testcase name="sets init function" classname="PluginBuilder &amp;gt; CLI Plugin Implementation" time="0" file="__tests__/unit/cli/plugin-implementation.test.ts" line="108" assertions="1" />
        <testcase name="sets config schema" classname="PluginBuilder &amp;gt; CLI Plugin Implementation" time="0.001423" file="__tests__/unit/cli/plugin-implementation.test.ts" line="121" assertions="1" />
        <testcase name="creates complete plugin" classname="PluginBuilder &amp;gt; CLI Plugin Implementation" time="0.000118" file="__tests__/unit/cli/plugin-implementation.test.ts" line="135" assertions="7" />
      </testsuite>
      <testsuite name="createPlugin function" file="__tests__/unit/cli/plugin-implementation.test.ts" line="179" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates plugin from config object" classname="createPlugin function &amp;gt; CLI Plugin Implementation" time="0" file="__tests__/unit/cli/plugin-implementation.test.ts" line="180" assertions="2" />
        <testcase name="validates metadata" classname="createPlugin function &amp;gt; CLI Plugin Implementation" time="0.000064" file="__tests__/unit/cli/plugin-implementation.test.ts" line="198" assertions="1" />
      </testsuite>
      <testsuite name="Plugin lifecycle" file="__tests__/unit/cli/plugin-implementation.test.ts" line="211" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="initializes plugin with context" classname="Plugin lifecycle &amp;gt; CLI Plugin Implementation" time="0.00001" file="__tests__/unit/cli/plugin-implementation.test.ts" line="212" assertions="2" />
        <testcase name="provides uninstall capability" classname="Plugin lifecycle &amp;gt; CLI Plugin Implementation" time="0" file="__tests__/unit/cli/plugin-implementation.test.ts" line="246" assertions="1" />
      </testsuite>
      <testsuite name="Plugin interactions" file="__tests__/unit/cli/plugin-implementation.test.ts" line="264" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="extends existing commands" classname="Plugin interactions &amp;gt; CLI Plugin Implementation" time="0.000192" file="__tests__/unit/cli/plugin-implementation.test.ts" line="265" assertions="2" />
        <testcase name="provides middleware wrapping" classname="Plugin interactions &amp;gt; CLI Plugin Implementation" time="0" file="__tests__/unit/cli/plugin-implementation.test.ts" line="287" assertions="1" />
      </testsuite>
      <testsuite name="Plugin dependencies" file="__tests__/unit/cli/plugin-implementation.test.ts" line="307" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="declares dependencies" classname="Plugin dependencies &amp;gt; CLI Plugin Implementation" time="0" file="__tests__/unit/cli/plugin-implementation.test.ts" line="308" assertions="2" />
        <testcase name="declares peer dependencies" classname="Plugin dependencies &amp;gt; CLI Plugin Implementation" time="0.000097" file="__tests__/unit/cli/plugin-implementation.test.ts" line="324" assertions="1" />
      </testsuite>
      <testsuite name="Plugin configuration" file="__tests__/unit/cli/plugin-implementation.test.ts" line="339" tests="1" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="validates config with schema" classname="Plugin configuration &amp;gt; CLI Plugin Implementation" time="0.000974" file="__tests__/unit/cli/plugin-implementation.test.ts" line="340" assertions="4" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/cli/runner.test.ts" file="__tests__/unit/cli/runner.test.ts" tests="26" assertions="40" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="CLI Runner" file="__tests__/unit/cli/runner.test.ts" line="9" tests="26" assertions="40" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="constructor" file="__tests__/unit/cli/runner.test.ts" line="51" tests="2" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="validates config on creation" classname="constructor &amp;gt; CLI Runner" time="0.000147" file="__tests__/unit/cli/runner.test.ts" line="52" assertions="1" />
        <testcase name="throws on invalid config" classname="constructor &amp;gt; CLI Runner" time="0.000069" file="__tests__/unit/cli/runner.test.ts" line="56" assertions="1" />
      </testsuite>
      <testsuite name="run" file="__tests__/unit/cli/runner.test.ts" line="62" tests="20" assertions="28" failures="0" skipped="0" time="0.001" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="shows help when no arguments provided" classname="run &amp;gt; CLI Runner" time="0.001149" file="__tests__/unit/cli/runner.test.ts" line="63" assertions="2" />
        <testcase name="shows help with --help flag" classname="run &amp;gt; CLI Runner" time="0.000049" file="__tests__/unit/cli/runner.test.ts" line="69" assertions="2" />
        <testcase name="shows version with --version flag" classname="run &amp;gt; CLI Runner" time="0.000042" file="__tests__/unit/cli/runner.test.ts" line="75" assertions="2" />
        <testcase name="executes command handler" classname="run &amp;gt; CLI Runner" time="0.000295" file="__tests__/unit/cli/runner.test.ts" line="81" assertions="1" />
        <testcase name="executes nested command handler" classname="run &amp;gt; CLI Runner" time="0.000059" file="__tests__/unit/cli/runner.test.ts" line="86" assertions="1" />
        <testcase name="shows error for unknown command" classname="run &amp;gt; CLI Runner" time="0.000257" file="__tests__/unit/cli/runner.test.ts" line="91" assertions="2" />
        <testcase name="passes arguments to command handler" classname="run &amp;gt; CLI Runner" time="0.000109" file="__tests__/unit/cli/runner.test.ts" line="97" assertions="1" />
        <testcase name="passes options to command handler" classname="run &amp;gt; CLI Runner" time="0.000087" file="__tests__/unit/cli/runner.test.ts" line="111" assertions="1" />
        <testcase name="handles command errors gracefully" classname="run &amp;gt; CLI Runner" time="0.000328" file="__tests__/unit/cli/runner.test.ts" line="127" assertions="2" />
        <testcase name="runs beforeCommand hook" classname="run &amp;gt; CLI Runner" time="0.000066" file="__tests__/unit/cli/runner.test.ts" line="137" assertions="1" />
        <testcase name="runs afterCommand hook" classname="run &amp;gt; CLI Runner" time="0.000069" file="__tests__/unit/cli/runner.test.ts" line="146" assertions="1" />
        <testcase name="applies plugins" classname="run &amp;gt; CLI Runner" time="0.000089" file="__tests__/unit/cli/runner.test.ts" line="155" assertions="1" />
        <testcase name="suggests similar commands on typo" classname="run &amp;gt; CLI Runner" time="0.000088" file="__tests__/unit/cli/runner.test.ts" line="175" assertions="2" />
        <testcase name="expands aliases" classname="run &amp;gt; CLI Runner" time="0.000057" file="__tests__/unit/cli/runner.test.ts" line="181" assertions="1" />
        <testcase name="loads lazy commands" classname="run &amp;gt; CLI Runner" time="0.000135" file="__tests__/unit/cli/runner.test.ts" line="189" assertions="1" />
        <testcase name="handles interactive mode" classname="run &amp;gt; CLI Runner" time="0.000056" file="__tests__/unit/cli/runner.test.ts" line="202" assertions="1" />
        <testcase name="respects quiet mode" classname="run &amp;gt; CLI Runner" time="0.000059" file="__tests__/unit/cli/runner.test.ts" line="211" assertions="1" />
        <testcase name="enables debug mode" classname="run &amp;gt; CLI Runner" time="0.00006" file="__tests__/unit/cli/runner.test.ts" line="216" assertions="1" />
        <testcase name="handles command with required args" classname="run &amp;gt; CLI Runner" time="0.000092" file="__tests__/unit/cli/runner.test.ts" line="221" assertions="2" />
        <testcase name="validates option types" classname="run &amp;gt; CLI Runner" time="0.000083" file="__tests__/unit/cli/runner.test.ts" line="232" assertions="2" />
      </testsuite>
      <testsuite name="showHelp" file="__tests__/unit/cli/runner.test.ts" line="244" tests="3" assertions="9" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="shows general help" classname="showHelp &amp;gt; CLI Runner" time="0.000028" file="__tests__/unit/cli/runner.test.ts" line="245" assertions="4" />
        <testcase name="shows command-specific help" classname="showHelp &amp;gt; CLI Runner" time="0.00005" file="__tests__/unit/cli/runner.test.ts" line="254" assertions="2" />
        <testcase name="shows nested command help" classname="showHelp &amp;gt; CLI Runner" time="0.000032" file="__tests__/unit/cli/runner.test.ts" line="260" assertions="3" />
      </testsuite>
      <testsuite name="showVersion" file="__tests__/unit/cli/runner.test.ts" line="269" tests="1" assertions="1" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="shows version string" classname="showVersion &amp;gt; CLI Runner" time="0.000007" file="__tests__/unit/cli/runner.test.ts" line="270" assertions="1" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/cli/router-comprehensive.test.ts" file="__tests__/unit/cli/router-comprehensive.test.ts" tests="16" assertions="21" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="CLI Router" file="__tests__/unit/cli/router-comprehensive.test.ts" line="10" tests="16" assertions="21" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="Command registration" file="__tests__/unit/cli/router-comprehensive.test.ts" line="18" tests="3" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="registers commands from config" classname="Command registration &amp;gt; CLI Router" time="0.000068" file="__tests__/unit/cli/router-comprehensive.test.ts" line="19" assertions="3" />
        <testcase name="adds commands dynamically" classname="Command registration &amp;gt; CLI Router" time="0.000035" file="__tests__/unit/cli/router-comprehensive.test.ts" line="39" assertions="1" />
        <testcase name="overwrites existing commands" classname="Command registration &amp;gt; CLI Router" time="0.00003" file="__tests__/unit/cli/router-comprehensive.test.ts" line="51" assertions="1" />
      </testsuite>
      <testsuite name="Command execution" file="__tests__/unit/cli/router-comprehensive.test.ts" line="71" tests="4" assertions="4" failures="0" skipped="0" time="0.01" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="executes simple commands" classname="Command execution &amp;gt; CLI Router" time="0.000175" file="__tests__/unit/cli/router-comprehensive.test.ts" line="72" assertions="1" />
        <testcase name="passes arguments to handler" classname="Command execution &amp;gt; CLI Router" time="0.000096" file="__tests__/unit/cli/router-comprehensive.test.ts" line="86" assertions="1" />
        <testcase name="passes options to handler" classname="Command execution &amp;gt; CLI Router" time="0.000086" file="__tests__/unit/cli/router-comprehensive.test.ts" line="103" assertions="1" />
        <testcase name="executes async handlers" classname="Command execution &amp;gt; CLI Router" time="0.010923" file="__tests__/unit/cli/router-comprehensive.test.ts" line="122" assertions="1" />
      </testsuite>
      <testsuite name="Middleware" file="__tests__/unit/cli/router-comprehensive.test.ts" line="140" tests="3" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="applies middleware in order" classname="Middleware &amp;gt; CLI Router" time="0.000315" file="__tests__/unit/cli/router-comprehensive.test.ts" line="141" assertions="1" />
        <testcase name="allows middleware to modify args" classname="Middleware &amp;gt; CLI Router" time="0.000161" file="__tests__/unit/cli/router-comprehensive.test.ts" line="179" assertions="1" />
        <testcase name="allows middleware to short-circuit" classname="Middleware &amp;gt; CLI Router" time="0.000111" file="__tests__/unit/cli/router-comprehensive.test.ts" line="197" assertions="2" />
      </testsuite>
      <testsuite name="Command retrieval" file="__tests__/unit/cli/router-comprehensive.test.ts" line="220" tests="3" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="gets command by name" classname="Command retrieval &amp;gt; CLI Router" time="0.000026" file="__tests__/unit/cli/router-comprehensive.test.ts" line="221" assertions="2" />
        <testcase name="returns null for unknown command" classname="Command retrieval &amp;gt; CLI Router" time="0.000014" file="__tests__/unit/cli/router-comprehensive.test.ts" line="236" assertions="1" />
        <testcase name="lists all commands" classname="Command retrieval &amp;gt; CLI Router" time="0.00003" file="__tests__/unit/cli/router-comprehensive.test.ts" line="243" assertions="2" />
      </testsuite>
      <testsuite name="Error handling" file="__tests__/unit/cli/router-comprehensive.test.ts" line="258" tests="2" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="throws on unknown command execution" classname="Error handling &amp;gt; CLI Router" time="0.000047" file="__tests__/unit/cli/router-comprehensive.test.ts" line="259" assertions="1" />
        <testcase name="propagates handler errors" classname="Error handling &amp;gt; CLI Router" time="0.000074" file="__tests__/unit/cli/router-comprehensive.test.ts" line="267" assertions="1" />
      </testsuite>
      <testsuite name="Global options" file="__tests__/unit/cli/router-comprehensive.test.ts" line="285" tests="1" assertions="1" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="merges global options with command options" classname="Global options &amp;gt; CLI Router" time="0.000129" file="__tests__/unit/cli/router-comprehensive.test.ts" line="286" assertions="1" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/cli/plugin-test-utils.test.ts" file="__tests__/unit/cli/plugin-test-utils.test.ts" tests="19" assertions="30" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Plugin Test Utils" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="24" tests="18" assertions="25" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="createMockPluginContext" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="58" tests="2" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates default context" classname="createMockPluginContext &amp;gt; Plugin Test Utils" time="0.000073" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="59" assertions="4" />
        <testcase name="accepts overrides" classname="createMockPluginContext &amp;gt; Plugin Test Utils" time="0.00002" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="68" assertions="1" />
      </testsuite>
      <testsuite name="testPluginInstall" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="76" tests="2" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="calls install method" classname="testPluginInstall &amp;gt; Plugin Test Utils" time="0.000099" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="77" assertions="1" />
        <testcase name="uses provided context" classname="testPluginInstall &amp;gt; Plugin Test Utils" time="0.000036" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="83" assertions="1" />
      </testsuite>
      <testsuite name="testPluginUninstall" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="92" tests="1" assertions="1" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="calls uninstall method" classname="testPluginUninstall &amp;gt; Plugin Test Utils" time="0.000056" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="93" assertions="1" />
      </testsuite>
      <testsuite name="testPluginCommand" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="100" tests="3" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="executes command handler" classname="testPluginCommand &amp;gt; Plugin Test Utils" time="0.00015" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="101" assertions="1" />
        <testcase name="executes nested command" classname="testPluginCommand &amp;gt; Plugin Test Utils" time="0.000038" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="107" assertions="1" />
        <testcase name="throws for unknown command" classname="testPluginCommand &amp;gt; Plugin Test Utils" time="0.000074" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="113" assertions="1" />
      </testsuite>
      <testsuite name="testPluginHook" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="120" tests="3" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="executes hook" classname="testPluginHook &amp;gt; Plugin Test Utils" time="0.000082" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="121" assertions="1" />
        <testcase name="returns not called for missing hook" classname="testPluginHook &amp;gt; Plugin Test Utils" time="0.00004" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="128" assertions="1" />
        <testcase name="captures hook errors" classname="testPluginHook &amp;gt; Plugin Test Utils" time="0.000032" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="139" assertions="1" />
      </testsuite>
      <testsuite name="testPluginMiddleware" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="152" tests="1" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="executes middleware" classname="testPluginMiddleware &amp;gt; Plugin Test Utils" time="0.00009" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="153" assertions="3" />
      </testsuite>
      <testsuite name="createTestCLI" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="162" tests="2" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="merges plugin commands" classname="createTestCLI &amp;gt; Plugin Test Utils" time="0.000109" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="163" assertions="3" />
        <testcase name="chains hooks" classname="createTestCLI &amp;gt; Plugin Test Utils" time="0.00003" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="182" assertions="1" />
      </testsuite>
      <testsuite name="executeWithPlugins" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="197" tests="3" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="executes command with plugins" classname="executeWithPlugins &amp;gt; Plugin Test Utils" time="0.000303" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="198" assertions="1" />
        <testcase name="runs hooks" classname="executeWithPlugins &amp;gt; Plugin Test Utils" time="0.000055" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="213" assertions="1" />
        <testcase name="handles command errors" classname="executeWithPlugins &amp;gt; Plugin Test Utils" time="0.000119" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="228" assertions="1" />
      </testsuite>
      <testsuite name="testServiceRegistration" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="255" tests="1" assertions="1" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="captures service registrations" classname="testServiceRegistration &amp;gt; Plugin Test Utils" time="0.000012" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="256" assertions="1" />
      </testsuite>
    </testsuite>
    <testsuite name="Plugin Creation with createPlugin API" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="267" tests="1" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testcase name="creates plugin with builder API" classname="Plugin Creation with createPlugin API" time="0.000106" file="__tests__/unit/cli/plugin-test-utils.test.ts" line="268" assertions="5" />
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/cli/config.test.ts" file="__tests__/unit/cli/config.test.ts" tests="25" assertions="76" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="CLI Configuration - Comprehensive" file="__tests__/unit/cli/config.test.ts" line="26" tests="25" assertions="76" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="defineConfig" file="__tests__/unit/cli/config.test.ts" line="27" tests="2" assertions="10" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates basic config" classname="defineConfig &amp;gt; CLI Configuration - Comprehensive" time="0.000826" file="__tests__/unit/cli/config.test.ts" line="28" assertions="3" />
        <testcase name="creates config with all options" classname="defineConfig &amp;gt; CLI Configuration - Comprehensive" time="0.00016" file="__tests__/unit/cli/config.test.ts" line="39" assertions="7" />
      </testsuite>
      <testsuite name="validateConfig" file="__tests__/unit/cli/config.test.ts" line="78" tests="3" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="validates a minimal config" classname="validateConfig &amp;gt; CLI Configuration - Comprehensive" time="0.000041" file="__tests__/unit/cli/config.test.ts" line="79" assertions="1" />
        <testcase name="validates a complete config" classname="validateConfig &amp;gt; CLI Configuration - Comprehensive" time="0.00014" file="__tests__/unit/cli/config.test.ts" line="89" assertions="1" />
        <testcase name="throws on invalid config" classname="validateConfig &amp;gt; CLI Configuration - Comprehensive" time="0.000058" file="__tests__/unit/cli/config.test.ts" line="118" assertions="4" />
      </testsuite>
      <testsuite name="defineCommand" file="__tests__/unit/cli/config.test.ts" line="132" tests="4" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates simple command" classname="defineCommand &amp;gt; CLI Configuration - Comprehensive" time="0.00002" file="__tests__/unit/cli/config.test.ts" line="133" assertions="2" />
        <testcase name="creates command with options and args" classname="defineCommand &amp;gt; CLI Configuration - Comprehensive" time="0.000021" file="__tests__/unit/cli/config.test.ts" line="143" assertions="3" />
        <testcase name="creates command with subcommands" classname="defineCommand &amp;gt; CLI Configuration - Comprehensive" time="0.000022" file="__tests__/unit/cli/config.test.ts" line="161" assertions="2" />
        <testcase name="creates command with aliases" classname="defineCommand &amp;gt; CLI Configuration - Comprehensive" time="0.000018" file="__tests__/unit/cli/config.test.ts" line="181" assertions="1" />
      </testsuite>
      <testsuite name="lazyLoad" file="__tests__/unit/cli/config.test.ts" line="192" tests="2" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates lazy-loaded command" classname="lazyLoad &amp;gt; CLI Configuration - Comprehensive" time="0.000035" file="__tests__/unit/cli/config.test.ts" line="193" assertions="2" />
        <testcase name="creates lazy-loaded command with metadata" classname="lazyLoad &amp;gt; CLI Configuration - Comprehensive" time="0.00002" file="__tests__/unit/cli/config.test.ts" line="200" assertions="2" />
      </testsuite>
      <testsuite name="mergeConfigs" file="__tests__/unit/cli/config.test.ts" line="211" tests="2" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="merges two configs" classname="mergeConfigs &amp;gt; CLI Configuration - Comprehensive" time="0.000141" file="__tests__/unit/cli/config.test.ts" line="212" assertions="5" />
        <testcase name="merges configs with deep properties" classname="mergeConfigs &amp;gt; CLI Configuration - Comprehensive" time="0.000025" file="__tests__/unit/cli/config.test.ts" line="247" assertions="2" />
      </testsuite>
      <testsuite name="expandAliases" file="__tests__/unit/cli/config.test.ts" line="272" tests="4" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="expands simple aliases" classname="expandAliases &amp;gt; CLI Configuration - Comprehensive" time="0.000081" file="__tests__/unit/cli/config.test.ts" line="273" assertions="3" />
        <testcase name="expands nested aliases" classname="expandAliases &amp;gt; CLI Configuration - Comprehensive" time="0.000022" file="__tests__/unit/cli/config.test.ts" line="285" assertions="2" />
        <testcase name="returns original if no alias found" classname="expandAliases &amp;gt; CLI Configuration - Comprehensive" time="0.000011" file="__tests__/unit/cli/config.test.ts" line="296" assertions="1" />
        <testcase name="handles circular aliases" classname="expandAliases &amp;gt; CLI Configuration - Comprehensive" time="0.00002" file="__tests__/unit/cli/config.test.ts" line="302" assertions="1" />
      </testsuite>
      <testsuite name="parseEnvVars" file="__tests__/unit/cli/config.test.ts" line="313" tests="2" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="parses environment variables" classname="parseEnvVars &amp;gt; CLI Configuration - Comprehensive" time="0.000074" file="__tests__/unit/cli/config.test.ts" line="314" assertions="4" />
        <testcase name="handles nested env vars" classname="parseEnvVars &amp;gt; CLI Configuration - Comprehensive" time="0.00003" file="__tests__/unit/cli/config.test.ts" line="330" assertions="3" />
      </testsuite>
      <testsuite name="createDefaultConfig" file="__tests__/unit/cli/config.test.ts" line="345" tests="2" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates default config with minimal input" classname="createDefaultConfig &amp;gt; CLI Configuration - Comprehensive" time="0.000039" file="__tests__/unit/cli/config.test.ts" line="346" assertions="5" />
        <testcase name="preserves user settings" classname="createDefaultConfig &amp;gt; CLI Configuration - Comprehensive" time="0.000013" file="__tests__/unit/cli/config.test.ts" line="359" assertions="2" />
      </testsuite>
      <testsuite name="normalizeCommand" file="__tests__/unit/cli/config.test.ts" line="374" tests="1" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="normalizes command names" classname="normalizeCommand &amp;gt; CLI Configuration - Comprehensive" time="0.000078" file="__tests__/unit/cli/config.test.ts" line="375" assertions="4" />
      </testsuite>
      <testsuite name="resolveConfigPath" file="__tests__/unit/cli/config.test.ts" line="383" tests="1" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="resolves config paths" classname="resolveConfigPath &amp;gt; CLI Configuration - Comprehensive" time="0.000029" file="__tests__/unit/cli/config.test.ts" line="384" assertions="8" />
      </testsuite>
      <testsuite name="commonOptions" file="__tests__/unit/cli/config.test.ts" line="400" tests="1" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="provides standard options" classname="commonOptions &amp;gt; CLI Configuration - Comprehensive" time="0.000012" file="__tests__/unit/cli/config.test.ts" line="401" assertions="5" />
      </testsuite>
      <testsuite name="commonArgs" file="__tests__/unit/cli/config.test.ts" line="410" tests="1" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="provides standard arguments" classname="commonArgs &amp;gt; CLI Configuration - Comprehensive" time="0.000015" file="__tests__/unit/cli/config.test.ts" line="411" assertions="3" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/cli/loader.test.ts" file="__tests__/unit/cli/loader.test.ts" tests="20" assertions="28" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Plugin Loader" file="__tests__/unit/cli/loader.test.ts" line="21" tests="20" assertions="28" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="constructor" file="__tests__/unit/cli/loader.test.ts" line="34" tests="2" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="uses default options when none provided" classname="constructor &amp;gt; Plugin Loader" time="0.000025" file="__tests__/unit/cli/loader.test.ts" line="35" assertions="1" />
        <testcase name="accepts custom options" classname="constructor &amp;gt; Plugin Loader" time="0.000008" file="__tests__/unit/cli/loader.test.ts" line="40" assertions="1" />
      </testsuite>
      <testsuite name="loadAll" file="__tests__/unit/cli/loader.test.ts" line="45" tests="4" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="loads plugins from specified directories" classname="loadAll &amp;gt; Plugin Loader" time="0.00077" file="__tests__/unit/cli/loader.test.ts" line="46" assertions="1" />
        <testcase name="handles empty plugin directories" classname="loadAll &amp;gt; Plugin Loader" time="0.000052" file="__tests__/unit/cli/loader.test.ts" line="74" assertions="1" />
        <testcase name="filters incompatible plugins in strict mode" classname="loadAll &amp;gt; Plugin Loader" time="0.000148" file="__tests__/unit/cli/loader.test.ts" line="81" assertions="1" />
        <testcase name="includes incompatible plugins in non-strict mode" classname="loadAll &amp;gt; Plugin Loader" time="0.000147" file="__tests__/unit/cli/loader.test.ts" line="112" assertions="1" />
      </testsuite>
      <testsuite name="load" file="__tests__/unit/cli/loader.test.ts" line="144" tests="3" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="loads a single plugin by package" classname="load &amp;gt; Plugin Loader" time="0.000322" file="__tests__/unit/cli/loader.test.ts" line="145" assertions="3" />
        <testcase name="handles plugin load errors" classname="load &amp;gt; Plugin Loader" time="0.000387" file="__tests__/unit/cli/loader.test.ts" line="160" assertions="1" />
        <testcase name="validates plugin structure" classname="load &amp;gt; Plugin Loader" time="0.000265" file="__tests__/unit/cli/loader.test.ts" line="171" assertions="1" />
      </testsuite>
      <testsuite name="loadFromPackage" file="__tests__/unit/cli/loader.test.ts" line="185" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="loads plugin from npm package" classname="loadFromPackage &amp;gt; Plugin Loader" time="0.000138" file="__tests__/unit/cli/loader.test.ts" line="186" assertions="2" />
        <testcase name="handles missing packages" classname="loadFromPackage &amp;gt; Plugin Loader" time="0.000107" file="__tests__/unit/cli/loader.test.ts" line="206" assertions="1" />
      </testsuite>
      <testsuite name="discoverPackages" file="__tests__/unit/cli/loader.test.ts" line="221" tests="2" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="discovers plugins with matching prefixes" classname="discoverPackages &amp;gt; Plugin Loader" time="0.000143" file="__tests__/unit/cli/loader.test.ts" line="222" assertions="3" />
        <testcase name="handles missing node_modules" classname="discoverPackages &amp;gt; Plugin Loader" time="0.000059" file="__tests__/unit/cli/loader.test.ts" line="237" assertions="1" />
      </testsuite>
      <testsuite name="getLoaded" file="__tests__/unit/cli/loader.test.ts" line="245" tests="2" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="returns empty map initially" classname="getLoaded &amp;gt; Plugin Loader" time="0.000016" file="__tests__/unit/cli/loader.test.ts" line="246" assertions="1" />
        <testcase name="returns loaded plugins after loadAll" classname="getLoaded &amp;gt; Plugin Loader" time="0.000175" file="__tests__/unit/cli/loader.test.ts" line="251" assertions="1" />
      </testsuite>
      <testsuite name="unload" file="__tests__/unit/cli/loader.test.ts" line="278" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="unloads a specific plugin" classname="unload &amp;gt; Plugin Loader" time="0.000191" file="__tests__/unit/cli/loader.test.ts" line="279" assertions="2" />
        <testcase name="handles unloading non-existent plugin" classname="unload &amp;gt; Plugin Loader" time="0.000012" file="__tests__/unit/cli/loader.test.ts" line="296" assertions="1" />
      </testsuite>
      <testsuite name="reload" file="__tests__/unit/cli/loader.test.ts" line="301" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="reloads a plugin" classname="reload &amp;gt; Plugin Loader" time="0.000259" file="__tests__/unit/cli/loader.test.ts" line="302" assertions="2" />
        <testcase name="throws when reloading non-existent plugin" classname="reload &amp;gt; Plugin Loader" time="0.000054" file="__tests__/unit/cli/loader.test.ts" line="320" assertions="1" />
      </testsuite>
      <testsuite name="watchForChanges" file="__tests__/unit/cli/loader.test.ts" line="330" tests="1" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="sets up file watchers for plugin directories" classname="watchForChanges &amp;gt; Plugin Loader" time="0.000167" file="__tests__/unit/cli/loader.test.ts" line="331" assertions="2" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/testing/test-utils-comprehensive.test.ts" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" tests="24" assertions="92" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Testing Utilities" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="28" tests="24" assertions="92" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="createTestEnvironment" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="29" tests="2" assertions="12" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates default test environment" classname="createTestEnvironment &amp;gt; Testing Utilities" time="0.000047" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="30" assertions="7" />
        <testcase name="creates test environment with overrides" classname="createTestEnvironment &amp;gt; Testing Utilities" time="0.000036" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="48" assertions="5" />
      </testsuite>
      <testsuite name="Mock Terminal Service" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="65" tests="3" assertions="8" failures="0" skipped="0" time="0.001" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="provides terminal operations" classname="Mock Terminal Service &amp;gt; Testing Utilities" time="0.001588" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="66" assertions="7" />
        <testcase name="tracks output correctly" classname="Mock Terminal Service &amp;gt; Testing Utilities" time="0.000382" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="110" assertions="0" />
        <testcase name="handles all terminal operations" classname="Mock Terminal Service &amp;gt; Testing Utilities" time="0.000539" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="128" assertions="1" />
      </testsuite>
      <testsuite name="Mock Input Service" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="159" tests="2" assertions="12" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="provides input operations" classname="Mock Input Service &amp;gt; Testing Utilities" time="0.000548" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="160" assertions="3" />
        <testcase name="provides stream operations" classname="Mock Input Service &amp;gt; Testing Utilities" time="0.000349" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="197" assertions="9" />
      </testsuite>
      <testsuite name="Mock Renderer Service" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="226" tests="1" assertions="6" failures="0" skipped="0" time="0.001" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="provides render operations" classname="Mock Renderer Service &amp;gt; Testing Utilities" time="0.001792" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="227" assertions="6" />
      </testsuite>
      <testsuite name="Mock Storage Service" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="300" tests="3" assertions="15" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="provides state operations" classname="Mock Storage Service &amp;gt; Testing Utilities" time="0.000665" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="301" assertions="4" />
        <testcase name="provides cache operations" classname="Mock Storage Service &amp;gt; Testing Utilities" time="0.00087" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="326" assertions="3" />
        <testcase name="provides file operations" classname="Mock Storage Service &amp;gt; Testing Utilities" time="0.000836" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="355" assertions="8" />
      </testsuite>
      <testsuite name="createTestLayer" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="409" tests="2" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="provides all services" classname="createTestLayer &amp;gt; Testing Utilities" time="0.000926" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="410" assertions="4" />
        <testcase name="accepts environment overrides" classname="createTestLayer &amp;gt; Testing Utilities" time="0.000735" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="430" assertions="1" />
      </testsuite>
      <testsuite name="testComponent" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="444" tests="5" assertions="10" failures="0" skipped="0" time="0.104" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="tests component initialization" classname="testComponent &amp;gt; Testing Utilities" time="0.000794" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="463" assertions="2" />
        <testcase name="tests component update" classname="testComponent &amp;gt; Testing Utilities" time="0.001308" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="471" assertions="4" />
        <testcase name="tests component view" classname="testComponent &amp;gt; Testing Utilities" time="0.001488" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="483" assertions="2" />
        <testcase name="tests component subscriptions" classname="testComponent &amp;gt; Testing Utilities" time="0.000721" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="493" assertions="1" />
        <testcase name="respects timeout option" classname="testComponent &amp;gt; Testing Utilities" time="0.102089" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="500" assertions="1" />
      </testsuite>
      <testsuite name="TUIAssert" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="516" tests="3" assertions="17" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="provides output assertions" classname="TUIAssert &amp;gt; Testing Utilities" time="0.000154" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="517" assertions="6" />
        <testcase name="provides state assertions" classname="TUIAssert &amp;gt; Testing Utilities" time="0.000094" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="526" assertions="5" />
        <testcase name="provides view size assertions" classname="TUIAssert &amp;gt; Testing Utilities" time="0.000045" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="536" assertions="6" />
      </testsuite>
      <testsuite name="createMockAppServices" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="548" tests="2" assertions="6" failures="0" skipped="0" time="0.001" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates all services" classname="createMockAppServices &amp;gt; Testing Utilities" time="0.000165" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="549" assertions="5" />
        <testcase name="provides working combined layer" classname="createMockAppServices &amp;gt; Testing Utilities" time="0.001024" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="559" assertions="1" />
      </testsuite>
      <testsuite name="withMockServices" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="583" tests="1" assertions="1" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="provides all services to an effect" classname="withMockServices &amp;gt; Testing Utilities" time="0.000847" file="__tests__/unit/testing/test-utils-comprehensive.test.ts" line="584" assertions="1" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/components/Table.test.ts" file="__tests__/unit/components/Table.test.ts" tests="12" assertions="35" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Table Component" file="__tests__/unit/components/Table.test.ts" line="19" tests="12" assertions="35" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="Basic Table Creation" file="__tests__/unit/components/Table.test.ts" line="22" tests="3" assertions="13" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates an empty table" classname="Basic Table Creation &amp;gt; Table Component" time="0.000953" file="__tests__/unit/components/Table.test.ts" line="23" assertions="4" />
        <testcase name="creates a table with columns and rows" classname="Basic Table Creation &amp;gt; Table Component" time="0.000648" file="__tests__/unit/components/Table.test.ts" line="39" assertions="4" />
        <testcase name="creates a table with custom options" classname="Basic Table Creation &amp;gt; Table Component" time="0.000672" file="__tests__/unit/components/Table.test.ts" line="66" assertions="5" />
      </testsuite>
      <testsuite name="Simple Table Creation" file="__tests__/unit/components/Table.test.ts" line="92" tests="2" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates a simple table from data array" classname="Simple Table Creation &amp;gt; Table Component" time="0.000905" file="__tests__/unit/components/Table.test.ts" line="93" assertions="3" />
        <testcase name="creates a simple table with specific columns" classname="Simple Table Creation &amp;gt; Table Component" time="0.000678" file="__tests__/unit/components/Table.test.ts" line="111" assertions="2" />
      </testsuite>
      <testsuite name="Table Navigation" file="__tests__/unit/components/Table.test.ts" line="129" tests="2" assertions="4" failures="0" skipped="0" time="0.003" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="navigates rows with keyboard" classname="Table Navigation &amp;gt; Table Component" time="0.001821" file="__tests__/unit/components/Table.test.ts" line="130" assertions="2" />
        <testcase name="handles page navigation" classname="Table Navigation &amp;gt; Table Component" time="0.002039" file="__tests__/unit/components/Table.test.ts" line="163" assertions="2" />
      </testsuite>
      <testsuite name="Table Selection" file="__tests__/unit/components/Table.test.ts" line="194" tests="2" assertions="5" failures="0" skipped="0" time="0.002" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="selects single row" classname="Table Selection &amp;gt; Table Component" time="0.001146" file="__tests__/unit/components/Table.test.ts" line="195" assertions="2" />
        <testcase name="selects multiple rows" classname="Table Selection &amp;gt; Table Component" time="0.001473" file="__tests__/unit/components/Table.test.ts" line="224" assertions="3" />
      </testsuite>
      <testsuite name="Table Sorting" file="__tests__/unit/components/Table.test.ts" line="263" tests="1" assertions="4" failures="0" skipped="0" time="0.001" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="sorts by column" classname="Table Sorting &amp;gt; Table Component" time="0.001012" file="__tests__/unit/components/Table.test.ts" line="264" assertions="4" />
      </testsuite>
      <testsuite name="Table Filtering" file="__tests__/unit/components/Table.test.ts" line="296" tests="1" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="filters rows" classname="Table Filtering &amp;gt; Table Component" time="0.000973" file="__tests__/unit/components/Table.test.ts" line="297" assertions="2" />
      </testsuite>
      <testsuite name="Keyboard Handling" file="__tests__/unit/components/Table.test.ts" line="328" tests="1" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles keyboard navigation" classname="Keyboard Handling &amp;gt; Table Component" time="0.000105" file="__tests__/unit/components/Table.test.ts" line="329" assertions="2" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/components/base.test.ts" file="__tests__/unit/components/base.test.ts" tests="19" assertions="36" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Base Component Utilities" file="__tests__/unit/components/base.test.ts" line="20" tests="19" assertions="36" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="keyBinding" file="__tests__/unit/components/base.test.ts" line="21" tests="2" assertions="4" failures="0" skipped="0" time="0.001" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates a key binding" classname="keyBinding &amp;gt; Base Component Utilities" time="0.001159" file="__tests__/unit/components/base.test.ts" line="22" assertions="3" />
        <testcase name="handles single key" classname="keyBinding &amp;gt; Base Component Utilities" time="0.000042" file="__tests__/unit/components/base.test.ts" line="34" assertions="1" />
      </testsuite>
      <testsuite name="matchKeyBinding" file="__tests__/unit/components/base.test.ts" line="45" tests="5" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="matches simple key" classname="matchKeyBinding &amp;gt; Base Component Utilities" time="0.000079" file="__tests__/unit/components/base.test.ts" line="52" assertions="1" />
        <testcase name="matches key combination" classname="matchKeyBinding &amp;gt; Base Component Utilities" time="0.000042" file="__tests__/unit/components/base.test.ts" line="66" assertions="1" />
        <testcase name="matches alternative keys" classname="matchKeyBinding &amp;gt; Base Component Utilities" time="0.000018" file="__tests__/unit/components/base.test.ts" line="81" assertions="1" />
        <testcase name="returns null for unmatched key" classname="matchKeyBinding &amp;gt; Base Component Utilities" time="0.000013" file="__tests__/unit/components/base.test.ts" line="95" assertions="1" />
        <testcase name="handles complex key combinations" classname="matchKeyBinding &amp;gt; Base Component Utilities" time="0.000023" file="__tests__/unit/components/base.test.ts" line="110" assertions="1" />
      </testsuite>
      <testsuite name="createKeyMap" file="__tests__/unit/components/base.test.ts" line="130" tests="1" assertions="1" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates an empty key map" classname="createKeyMap &amp;gt; Base Component Utilities" time="0.000059" file="__tests__/unit/components/base.test.ts" line="131" assertions="1" />
      </testsuite>
      <testsuite name="generateComponentId" file="__tests__/unit/components/base.test.ts" line="137" tests="2" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="generates unique component IDs" classname="generateComponentId &amp;gt; Base Component Utilities" time="0.000027" file="__tests__/unit/components/base.test.ts" line="138" assertions="3" />
        <testcase name="includes prefix in ID" classname="generateComponentId &amp;gt; Base Component Utilities" time="0.000039" file="__tests__/unit/components/base.test.ts" line="147" assertions="1" />
      </testsuite>
      <testsuite name="mergeStyles" file="__tests__/unit/components/base.test.ts" line="153" tests="3" assertions="11" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="merges two style objects" classname="mergeStyles &amp;gt; Base Component Utilities" time="0.000122" file="__tests__/unit/components/base.test.ts" line="154" assertions="4" />
        <testcase name="handles undefined overrides" classname="mergeStyles &amp;gt; Base Component Utilities" time="0.000028" file="__tests__/unit/components/base.test.ts" line="175" assertions="3" />
        <testcase name="deep merges nested properties" classname="mergeStyles &amp;gt; Base Component Utilities" time="0.000022" file="__tests__/unit/components/base.test.ts" line="188" assertions="4" />
      </testsuite>
      <testsuite name="createDefaultStyles" file="__tests__/unit/components/base.test.ts" line="199" tests="4" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates default component styles" classname="createDefaultStyles &amp;gt; Base Component Utilities" time="0.000022" file="__tests__/unit/components/base.test.ts" line="200" assertions="3" />
        <testcase name="has empty base style" classname="createDefaultStyles &amp;gt; Base Component Utilities" time="0.000019" file="__tests__/unit/components/base.test.ts" line="208" assertions="1" />
        <testcase name="provides focused style" classname="createDefaultStyles &amp;gt; Base Component Utilities" time="0.000024" file="__tests__/unit/components/base.test.ts" line="213" assertions="2" />
        <testcase name="provides disabled style" classname="createDefaultStyles &amp;gt; Base Component Utilities" time="0.000017" file="__tests__/unit/components/base.test.ts" line="220" assertions="2" />
      </testsuite>
      <testsuite name="Key Binding Edge Cases" file="__tests__/unit/components/base.test.ts" line="228" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles empty key map" classname="Key Binding Edge Cases &amp;gt; Base Component Utilities" time="0.000017" file="__tests__/unit/components/base.test.ts" line="229" assertions="1" />
        <testcase name="normalizes key strings" classname="Key Binding Edge Cases &amp;gt; Base Component Utilities" time="0.000026" file="__tests__/unit/components/base.test.ts" line="243" assertions="2" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/components/lifecycle-simple.test.ts" file="__tests__/unit/components/lifecycle-simple.test.ts" tests="11" assertions="27" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Component Lifecycle - Simple" file="__tests__/unit/components/lifecycle-simple.test.ts" line="11" tests="11" assertions="27" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="createLifecycleContext" file="__tests__/unit/components/lifecycle-simple.test.ts" line="12" tests="2" assertions="9" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates an empty lifecycle context" classname="createLifecycleContext &amp;gt; Component Lifecycle - Simple" time="0.000051" file="__tests__/unit/components/lifecycle-simple.test.ts" line="13" assertions="7" />
        <testcase name="creates independent contexts" classname="createLifecycleContext &amp;gt; Component Lifecycle - Simple" time="0.000023" file="__tests__/unit/components/lifecycle-simple.test.ts" line="25" assertions="2" />
      </testsuite>
      <testsuite name="LifecycleContext structure" file="__tests__/unit/components/lifecycle-simple.test.ts" line="39" tests="5" assertions="11" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="can store mount callbacks" classname="LifecycleContext structure &amp;gt; Component Lifecycle - Simple" time="0.000021" file="__tests__/unit/components/lifecycle-simple.test.ts" line="40" assertions="3" />
        <testcase name="can store update callbacks" classname="LifecycleContext structure &amp;gt; Component Lifecycle - Simple" time="0.000018" file="__tests__/unit/components/lifecycle-simple.test.ts" line="53" assertions="2" />
        <testcase name="can store destroy callbacks" classname="LifecycleContext structure &amp;gt; Component Lifecycle - Simple" time="0.000014" file="__tests__/unit/components/lifecycle-simple.test.ts" line="65" assertions="1" />
        <testcase name="can store error handlers" classname="LifecycleContext structure &amp;gt; Component Lifecycle - Simple" time="0.000015" file="__tests__/unit/components/lifecycle-simple.test.ts" line="76" assertions="2" />
        <testcase name="can toggle active state" classname="LifecycleContext structure &amp;gt; Component Lifecycle - Simple" time="0.000013" file="__tests__/unit/components/lifecycle-simple.test.ts" line="88" assertions="3" />
      </testsuite>
      <testsuite name="Lifecycle patterns" file="__tests__/unit/components/lifecycle-simple.test.ts" line="101" tests="4" assertions="7" failures="0" skipped="0" time="0.001" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="supports typical component lifecycle" classname="Lifecycle patterns &amp;gt; Component Lifecycle - Simple" time="0.000077" file="__tests__/unit/components/lifecycle-simple.test.ts" line="102" assertions="1" />
        <testcase name="supports multiple callbacks per phase" classname="Lifecycle patterns &amp;gt; Component Lifecycle - Simple" time="0.000028" file="__tests__/unit/components/lifecycle-simple.test.ts" line="139" assertions="1" />
        <testcase name="supports async callbacks" classname="Lifecycle patterns &amp;gt; Component Lifecycle - Simple" time="0.001113" file="__tests__/unit/components/lifecycle-simple.test.ts" line="153" assertions="1" />
        <testcase name="maintains separate arrays for each lifecycle phase" classname="Lifecycle patterns &amp;gt; Component Lifecycle - Simple" time="0.000024" file="__tests__/unit/components/lifecycle-simple.test.ts" line="170" assertions="4" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/components/component-coverage.test.ts" file="__tests__/unit/components/component-coverage.test.ts" tests="34" assertions="42" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Components Module Coverage" file="__tests__/unit/components/component-coverage.test.ts" line="23" tests="34" assertions="42" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="createComponent function" file="__tests__/unit/components/component-coverage.test.ts" line="24" tests="5" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates a basic component" classname="createComponent function &amp;gt; Components Module Coverage" time="0.00013" file="__tests__/unit/components/component-coverage.test.ts" line="25" assertions="2" />
        <testcase name="creates component with default name" classname="createComponent function &amp;gt; Components Module Coverage" time="0.000031" file="__tests__/unit/components/component-coverage.test.ts" line="37" assertions="1" />
        <testcase name="handles component with state" classname="createComponent function &amp;gt; Components Module Coverage" time="0.000037" file="__tests__/unit/components/component-coverage.test.ts" line="48" assertions="1" />
        <testcase name="handles component with subscriptions" classname="createComponent function &amp;gt; Components Module Coverage" time="0.000016" file="__tests__/unit/components/component-coverage.test.ts" line="71" assertions="1" />
        <testcase name="handles component with commands" classname="createComponent function &amp;gt; Components Module Coverage" time="0.000023" file="__tests__/unit/components/component-coverage.test.ts" line="84" assertions="1" />
      </testsuite>
      <testsuite name="wrapComponent function" file="__tests__/unit/components/component-coverage.test.ts" line="100" tests="2" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="wraps existing component" classname="wrapComponent function &amp;gt; Components Module Coverage" time="0.000026" file="__tests__/unit/components/component-coverage.test.ts" line="101" assertions="1" />
        <testcase name="wraps with middleware" classname="wrapComponent function &amp;gt; Components Module Coverage" time="0.00002" file="__tests__/unit/components/component-coverage.test.ts" line="121" assertions="1" />
      </testsuite>
      <testsuite name="functional component" file="__tests__/unit/components/component-coverage.test.ts" line="141" tests="3" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates functional component" classname="functional component &amp;gt; Components Module Coverage" time="0.00002" file="__tests__/unit/components/component-coverage.test.ts" line="142" assertions="2" />
        <testcase name="handles functional component with no props" classname="functional component &amp;gt; Components Module Coverage" time="0.000011" file="__tests__/unit/components/component-coverage.test.ts" line="151" assertions="1" />
        <testcase name="handles functional component with complex props" classname="functional component &amp;gt; Components Module Coverage" time="0.000009" file="__tests__/unit/components/component-coverage.test.ts" line="159" assertions="1" />
      </testsuite>
      <testsuite name="reactive component" file="__tests__/unit/components/component-coverage.test.ts" line="178" tests="3" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates reactive component" classname="reactive component &amp;gt; Components Module Coverage" time="0.000018" file="__tests__/unit/components/component-coverage.test.ts" line="179" assertions="1" />
        <testcase name="handles reactive component with complex state" classname="reactive component &amp;gt; Components Module Coverage" time="0.000008" file="__tests__/unit/components/component-coverage.test.ts" line="194" assertions="1" />
        <testcase name="handles reactive component with computed properties" classname="reactive component &amp;gt; Components Module Coverage" time="0.000012" file="__tests__/unit/components/component-coverage.test.ts" line="212" assertions="1" />
      </testsuite>
      <testsuite name="lifecycle hooks" file="__tests__/unit/components/component-coverage.test.ts" line="232" tests="5" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles onMount hook" classname="lifecycle hooks &amp;gt; Components Module Coverage" time="0.000067" file="__tests__/unit/components/component-coverage.test.ts" line="233" assertions="1" />
        <testcase name="handles onDestroy hook" classname="lifecycle hooks &amp;gt; Components Module Coverage" time="0.000032" file="__tests__/unit/components/component-coverage.test.ts" line="245" assertions="1" />
        <testcase name="handles beforeUpdate hook" classname="lifecycle hooks &amp;gt; Components Module Coverage" time="0.000013" file="__tests__/unit/components/component-coverage.test.ts" line="253" assertions="1" />
        <testcase name="handles afterUpdate hook" classname="lifecycle hooks &amp;gt; Components Module Coverage" time="0.000016" file="__tests__/unit/components/component-coverage.test.ts" line="261" assertions="1" />
        <testcase name="handles multiple hooks" classname="lifecycle hooks &amp;gt; Components Module Coverage" time="0.00002" file="__tests__/unit/components/component-coverage.test.ts" line="269" assertions="3" />
      </testsuite>
      <testsuite name="async utilities" file="__tests__/unit/components/component-coverage.test.ts" line="280" tests="3" assertions="3" failures="0" skipped="0" time="0.022" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles useAsyncEffect" classname="async utilities &amp;gt; Components Module Coverage" time="0.022207" file="__tests__/unit/components/component-coverage.test.ts" line="281" assertions="1" />
        <testcase name="handles useAsyncEffect with dependencies" classname="async utilities &amp;gt; Components Module Coverage" time="0.000121" file="__tests__/unit/components/component-coverage.test.ts" line="295" assertions="1" />
        <testcase name="handles useAsyncEffect with cleanup" classname="async utilities &amp;gt; Components Module Coverage" time="0.000067" file="__tests__/unit/components/component-coverage.test.ts" line="307" assertions="1" />
      </testsuite>
      <testsuite name="timer utilities" file="__tests__/unit/components/component-coverage.test.ts" line="321" tests="3" assertions="3" failures="0" skipped="0" time="0.082" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles useInterval" classname="timer utilities &amp;gt; Components Module Coverage" time="0.051342" file="__tests__/unit/components/component-coverage.test.ts" line="322" assertions="1" />
        <testcase name="handles useTimeout" classname="timer utilities &amp;gt; Components Module Coverage" time="0.031485" file="__tests__/unit/components/component-coverage.test.ts" line="338" assertions="1" />
        <testcase name="handles timer cleanup" classname="timer utilities &amp;gt; Components Module Coverage" time="0.000058" file="__tests__/unit/components/component-coverage.test.ts" line="354" assertions="1" />
      </testsuite>
      <testsuite name="utility functions" file="__tests__/unit/components/component-coverage.test.ts" line="366" tests="4" assertions="8" failures="0" skipped="0" time="0.001" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles tick function" classname="utility functions &amp;gt; Components Module Coverage" time="0.001249" file="__tests__/unit/components/component-coverage.test.ts" line="367" assertions="1" />
        <testcase name="handles usePrevious" classname="utility functions &amp;gt; Components Module Coverage" time="0.000051" file="__tests__/unit/components/component-coverage.test.ts" line="376" assertions="3" />
        <testcase name="handles usePrevious with objects" classname="utility functions &amp;gt; Components Module Coverage" time="0.000037" file="__tests__/unit/components/component-coverage.test.ts" line="384" assertions="2" />
        <testcase name="handles usePrevious with undefined" classname="utility functions &amp;gt; Components Module Coverage" time="0.000014" file="__tests__/unit/components/component-coverage.test.ts" line="394" assertions="2" />
      </testsuite>
      <testsuite name="error handling" file="__tests__/unit/components/component-coverage.test.ts" line="402" tests="4" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles component initialization errors" classname="error handling &amp;gt; Components Module Coverage" time="0.000073" file="__tests__/unit/components/component-coverage.test.ts" line="403" assertions="1" />
        <testcase name="handles component update errors" classname="error handling &amp;gt; Components Module Coverage" time="0.000027" file="__tests__/unit/components/component-coverage.test.ts" line="414" assertions="1" />
        <testcase name="handles component view errors" classname="error handling &amp;gt; Components Module Coverage" time="0.000027" file="__tests__/unit/components/component-coverage.test.ts" line="425" assertions="1" />
        <testcase name="handles hook errors gracefully" classname="error handling &amp;gt; Components Module Coverage" time="0.000017" file="__tests__/unit/components/component-coverage.test.ts" line="436" assertions="1" />
      </testsuite>
      <testsuite name="performance considerations" file="__tests__/unit/components/component-coverage.test.ts" line="445" tests="2" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles large component trees" classname="performance considerations &amp;gt; Components Module Coverage" time="0.000093" file="__tests__/unit/components/component-coverage.test.ts" line="446" assertions="1" />
        <testcase name="handles many hooks efficiently" classname="performance considerations &amp;gt; Components Module Coverage" time="0.000266" file="__tests__/unit/components/component-coverage.test.ts" line="469" assertions="1" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/components/reactivity.test.ts" file="__tests__/unit/components/reactivity.test.ts" tests="29" assertions="77" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Reactivity System" file="__tests__/unit/components/reactivity.test.ts" line="19" tests="29" assertions="77" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="$state" file="__tests__/unit/components/reactivity.test.ts" line="20" tests="7" assertions="15" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates a reactive signal with initial value" classname="$state &amp;gt; Reactivity System" time="0.000076" file="__tests__/unit/components/reactivity.test.ts" line="21" assertions="1" />
        <testcase name="updates value with set" classname="$state &amp;gt; Reactivity System" time="0.000046" file="__tests__/unit/components/reactivity.test.ts" line="26" assertions="1" />
        <testcase name="updates value with update function" classname="$state &amp;gt; Reactivity System" time="0.000034" file="__tests__/unit/components/reactivity.test.ts" line="32" assertions="1" />
        <testcase name="notifies subscribers on change" classname="$state &amp;gt; Reactivity System" time="0.000067" file="__tests__/unit/components/reactivity.test.ts" line="38" assertions="3" />
        <testcase name="supports multiple subscribers" classname="$state &amp;gt; Reactivity System" time="0.00003" file="__tests__/unit/components/reactivity.test.ts" line="55" assertions="2" />
        <testcase name="works with complex objects" classname="$state &amp;gt; Reactivity System" time="0.000039" file="__tests__/unit/components/reactivity.test.ts" line="69" assertions="5" />
        <testcase name="handles arrays" classname="$state &amp;gt; Reactivity System" time="0.000036" file="__tests__/unit/components/reactivity.test.ts" line="83" assertions="2" />
      </testsuite>
      <testsuite name="$derived" file="__tests__/unit/components/reactivity.test.ts" line="94" tests="5" assertions="14" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates computed value from signal" classname="$derived &amp;gt; Reactivity System" time="0.000192" file="__tests__/unit/components/reactivity.test.ts" line="95" assertions="2" />
        <testcase name="tracks multiple dependencies" classname="$derived &amp;gt; Reactivity System" time="0.000059" file="__tests__/unit/components/reactivity.test.ts" line="105" assertions="3" />
        <testcase name="chains derived values" classname="$derived &amp;gt; Reactivity System" time="0.000046" file="__tests__/unit/components/reactivity.test.ts" line="119" assertions="3" />
        <testcase name="notifies subscribers when dependencies change" classname="$derived &amp;gt; Reactivity System" time="0.000034" file="__tests__/unit/components/reactivity.test.ts" line="131" assertions="1" />
        <testcase name="handles conditional dependencies" classname="$derived &amp;gt; Reactivity System" time="0.000075" file="__tests__/unit/components/reactivity.test.ts" line="142" assertions="5" />
      </testsuite>
      <testsuite name="$effect" file="__tests__/unit/components/reactivity.test.ts" line="165" tests="4" assertions="11" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="runs effect when dependencies change" classname="$effect &amp;gt; Reactivity System" time="0.000328" file="__tests__/unit/components/reactivity.test.ts" line="166" assertions="4" />
        <testcase name="supports cleanup function" classname="$effect &amp;gt; Reactivity System" time="0.000112" file="__tests__/unit/components/reactivity.test.ts" line="196" assertions="3" />
        <testcase name="tracks multiple dependencies" classname="$effect &amp;gt; Reactivity System" time="0.000117" file="__tests__/unit/components/reactivity.test.ts" line="220" assertions="3" />
        <testcase name="handles errors in effects" classname="$effect &amp;gt; Reactivity System" time="0.000096" file="__tests__/unit/components/reactivity.test.ts" line="244" assertions="1" />
      </testsuite>
      <testsuite name="$memo" file="__tests__/unit/components/reactivity.test.ts" line="267" tests="2" assertions="13" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="memoizes expensive computations" classname="$memo &amp;gt; Reactivity System" time="0.000097" file="__tests__/unit/components/reactivity.test.ts" line="268" assertions="7" />
        <testcase name="works with multiple dependencies" classname="$memo &amp;gt; Reactivity System" time="0.000032" file="__tests__/unit/components/reactivity.test.ts" line="291" assertions="6" />
      </testsuite>
      <testsuite name="$throttled" file="__tests__/unit/components/reactivity.test.ts" line="314" tests="2" assertions="6" failures="0" skipped="0" time="0.174" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="throttles rapid updates" classname="$throttled &amp;gt; Reactivity System" time="0.06204" file="__tests__/unit/components/reactivity.test.ts" line="315" assertions="3" />
        <testcase name="respects throttle delay" classname="$throttled &amp;gt; Reactivity System" time="0.112191" file="__tests__/unit/components/reactivity.test.ts" line="338" assertions="3" />
      </testsuite>
      <testsuite name="$debounced" file="__tests__/unit/components/reactivity.test.ts" line="356" tests="2" assertions="6" failures="0" skipped="0" time="0.155" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="debounces rapid updates" classname="$debounced &amp;gt; Reactivity System" time="0.062144" file="__tests__/unit/components/reactivity.test.ts" line="357" assertions="4" />
        <testcase name="resets timer on each update" classname="$debounced &amp;gt; Reactivity System" time="0.093386" file="__tests__/unit/components/reactivity.test.ts" line="381" assertions="2" />
      </testsuite>
      <testsuite name="batch" file="__tests__/unit/components/reactivity.test.ts" line="400" tests="3" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="batches multiple updates" classname="batch &amp;gt; Reactivity System" time="0.000311" file="__tests__/unit/components/reactivity.test.ts" line="401" assertions="2" />
        <testcase name="batches updates across multiple signals" classname="batch &amp;gt; Reactivity System" time="0.000067" file="__tests__/unit/components/reactivity.test.ts" line="419" assertions="2" />
        <testcase name="returns value from batch function" classname="batch &amp;gt; Reactivity System" time="0.000027" file="__tests__/unit/components/reactivity.test.ts" line="436" assertions="1" />
      </testsuite>
      <testsuite name="edge cases" file="__tests__/unit/components/reactivity.test.ts" line="448" tests="4" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles circular dependencies gracefully" classname="edge cases &amp;gt; Reactivity System" time="0.000078" file="__tests__/unit/components/reactivity.test.ts" line="449" assertions="1" />
        <testcase name="handles rapid updates" classname="edge cases &amp;gt; Reactivity System" time="0.000085" file="__tests__/unit/components/reactivity.test.ts" line="464" assertions="2" />
        <testcase name="handles null and undefined values" classname="edge cases &amp;gt; Reactivity System" time="0.000117" file="__tests__/unit/components/reactivity.test.ts" line="479" assertions="2" />
        <testcase name="preserves referential equality when appropriate" classname="edge cases &amp;gt; Reactivity System" time="0.00008" file="__tests__/unit/components/reactivity.test.ts" line="490" assertions="2" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/components/Box.test.ts" file="__tests__/unit/components/Box.test.ts" tests="16" assertions="42" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Box Component" file="__tests__/unit/components/Box.test.ts" line="10" tests="16" assertions="42" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="Model and Messages" file="__tests__/unit/components/Box.test.ts" line="11" tests="3" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates box with content" classname="Model and Messages &amp;gt; Box Component" time="0.000031" file="__tests__/unit/components/Box.test.ts" line="12" assertions="2" />
        <testcase name="creates box without padding" classname="Model and Messages &amp;gt; Box Component" time="0.000015" file="__tests__/unit/components/Box.test.ts" line="18" assertions="2" />
        <testcase name="handles SetContent message" classname="Model and Messages &amp;gt; Box Component" time="0.000013" file="__tests__/unit/components/Box.test.ts" line="24" assertions="2" />
      </testsuite>
      <testsuite name="Component Logic" file="__tests__/unit/components/Box.test.ts" line="31" tests="3" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="initializes with empty content" classname="Component Logic &amp;gt; Box Component" time="0.00015" file="__tests__/unit/components/Box.test.ts" line="32" assertions="2" />
        <testcase name="updates content through SetContent message" classname="Component Logic &amp;gt; Box Component" time="0.000069" file="__tests__/unit/components/Box.test.ts" line="38" assertions="2" />
        <testcase name="preserves padding during content updates" classname="Component Logic &amp;gt; Box Component" time="0.000044" file="__tests__/unit/components/Box.test.ts" line="47" assertions="2" />
      </testsuite>
      <testsuite name="View Rendering" file="__tests__/unit/components/Box.test.ts" line="57" tests="4" assertions="15" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates view with content" classname="View Rendering &amp;gt; Box Component" time="0.000032" file="__tests__/unit/components/Box.test.ts" line="58" assertions="3" />
        <testcase name="renders view output" classname="View Rendering &amp;gt; Box Component" time="0.000104" file="__tests__/unit/components/Box.test.ts" line="67" assertions="2" />
        <testcase name="handles empty content" classname="View Rendering &amp;gt; Box Component" time="0.000041" file="__tests__/unit/components/Box.test.ts" line="76" assertions="2" />
        <testcase name="handles different padding values" classname="View Rendering &amp;gt; Box Component" time="0.000052" file="__tests__/unit/components/Box.test.ts" line="85" assertions="8" />
      </testsuite>
      <testsuite name="Component Integration" file="__tests__/unit/components/Box.test.ts" line="98" tests="2" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="full workflow: init -&gt; update -&gt; view" classname="Component Integration &amp;gt; Box Component" time="0.000174" file="__tests__/unit/components/Box.test.ts" line="99" assertions="3" />
        <testcase name="multiple content updates" classname="Component Integration &amp;gt; Box Component" time="0.000124" file="__tests__/unit/components/Box.test.ts" line="115" assertions="4" />
      </testsuite>
      <testsuite name="Edge Cases" file="__tests__/unit/components/Box.test.ts" line="132" tests="4" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles very long content" classname="Edge Cases &amp;gt; Box Component" time="0.0001" file="__tests__/unit/components/Box.test.ts" line="133" assertions="2" />
        <testcase name="handles multiline content" classname="Edge Cases &amp;gt; Box Component" time="0.000157" file="__tests__/unit/components/Box.test.ts" line="143" assertions="3" />
        <testcase name="handles special characters" classname="Edge Cases &amp;gt; Box Component" time="0.000147" file="__tests__/unit/components/Box.test.ts" line="154" assertions="1" />
        <testcase name="handles zero padding" classname="Edge Cases &amp;gt; Box Component" time="0.000023" file="__tests__/unit/components/Box.test.ts" line="163" assertions="2" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/reactivity/runes.test.ts" file="__tests__/unit/reactivity/runes.test.ts" tests="10" assertions="32" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Runes Reactivity System" file="__tests__/unit/reactivity/runes.test.ts" line="9" tests="10" assertions="32" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="State Runes" file="__tests__/unit/reactivity/runes.test.ts" line="10" tests="2" assertions="10" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates and updates state" classname="State Runes &amp;gt; Runes Reactivity System" time="0.000996" file="__tests__/unit/reactivity/runes.test.ts" line="11" assertions="4" />
        <testcase name="handles different value types" classname="State Runes &amp;gt; Runes Reactivity System" time="0.000065" file="__tests__/unit/reactivity/runes.test.ts" line="24" assertions="6" />
      </testsuite>
      <testsuite name="Bindable Runes" file="__tests__/unit/reactivity/runes.test.ts" line="43" tests="3" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates bindable values" classname="Bindable Runes &amp;gt; Runes Reactivity System" time="0.000109" file="__tests__/unit/reactivity/runes.test.ts" line="44" assertions="4" />
        <testcase name="supports validation" classname="Bindable Runes &amp;gt; Runes Reactivity System" time="0.000066" file="__tests__/unit/reactivity/runes.test.ts" line="55" assertions="3" />
        <testcase name="supports transformation" classname="Bindable Runes &amp;gt; Runes Reactivity System" time="0.000016" file="__tests__/unit/reactivity/runes.test.ts" line="65" assertions="1" />
      </testsuite>
      <testsuite name="Derived Runes" file="__tests__/unit/reactivity/runes.test.ts" line="75" tests="3" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="computes simple derived values" classname="Derived Runes &amp;gt; Runes Reactivity System" time="0.000035" file="__tests__/unit/reactivity/runes.test.ts" line="76" assertions="3" />
        <testcase name="chains derived computations" classname="Derived Runes &amp;gt; Runes Reactivity System" time="0.000025" file="__tests__/unit/reactivity/runes.test.ts" line="87" assertions="2" />
        <testcase name="recalculates on each access (simple approach)" classname="Derived Runes &amp;gt; Runes Reactivity System" time="0.000021" file="__tests__/unit/reactivity/runes.test.ts" line="98" assertions="2" />
      </testsuite>
      <testsuite name="Integration Tests" file="__tests__/unit/reactivity/runes.test.ts" line="109" tests="2" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="combines state, derived, and bindable runes" classname="Integration Tests &amp;gt; Runes Reactivity System" time="0.000033" file="__tests__/unit/reactivity/runes.test.ts" line="110" assertions="3" />
        <testcase name="handles complex reactive chains" classname="Integration Tests &amp;gt; Runes Reactivity System" time="0.000105" file="__tests__/unit/reactivity/runes.test.ts" line="124" assertions="4" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/reactivity/runes-coverage.test.ts" file="__tests__/unit/reactivity/runes-coverage.test.ts" tests="16" assertions="45" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Runes Coverage Tests" file="__tests__/unit/reactivity/runes-coverage.test.ts" line="19" tests="16" assertions="45" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="$effect" file="__tests__/unit/reactivity/runes-coverage.test.ts" line="20" tests="3" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="runs effect immediately" classname="$effect &amp;gt; Runes Coverage Tests" time="0.000051" file="__tests__/unit/reactivity/runes-coverage.test.ts" line="21" assertions="2" />
        <testcase name="calls cleanup function when returned" classname="$effect &amp;gt; Runes Coverage Tests" time="0.000031" file="__tests__/unit/reactivity/runes-coverage.test.ts" line="31" assertions="1" />
        <testcase name="handles effects without cleanup" classname="$effect &amp;gt; Runes Coverage Tests" time="0.000024" file="__tests__/unit/reactivity/runes-coverage.test.ts" line="43" assertions="1" />
      </testsuite>
      <testsuite name="Type Guards" file="__tests__/unit/reactivity/runes-coverage.test.ts" line="52" tests="4" assertions="20" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="isStateRune identifies state runes" classname="Type Guards &amp;gt; Runes Coverage Tests" time="0.000059" file="__tests__/unit/reactivity/runes-coverage.test.ts" line="53" assertions="6" />
        <testcase name="isBindableRune identifies bindable runes" classname="Type Guards &amp;gt; Runes Coverage Tests" time="0.000036" file="__tests__/unit/reactivity/runes-coverage.test.ts" line="67" assertions="4" />
        <testcase name="isDerivedRune identifies derived runes" classname="Type Guards &amp;gt; Runes Coverage Tests" time="0.000025" file="__tests__/unit/reactivity/runes-coverage.test.ts" line="78" assertions="4" />
        <testcase name="isRune identifies any rune" classname="Type Guards &amp;gt; Runes Coverage Tests" time="0.000042" file="__tests__/unit/reactivity/runes-coverage.test.ts" line="89" assertions="6" />
      </testsuite>
      <testsuite name="Utility Functions" file="__tests__/unit/reactivity/runes-coverage.test.ts" line="104" tests="3" assertions="11" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="getValue extracts value from runes" classname="Utility Functions &amp;gt; Runes Coverage Tests" time="0.000033" file="__tests__/unit/reactivity/runes-coverage.test.ts" line="105" assertions="3" />
        <testcase name="toBindable converts state to bindable" classname="Utility Functions &amp;gt; Runes Coverage Tests" time="0.00008" file="__tests__/unit/reactivity/runes-coverage.test.ts" line="115" assertions="4" />
        <testcase name="toBindable with validation options" classname="Utility Functions &amp;gt; Runes Coverage Tests" time="0.000045" file="__tests__/unit/reactivity/runes-coverage.test.ts" line="127" assertions="4" />
      </testsuite>
      <testsuite name="Bindable Validation Edge Cases" file="__tests__/unit/reactivity/runes-coverage.test.ts" line="143" tests="6" assertions="10" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="rejects changes when validation returns false" classname="Bindable Validation Edge Cases &amp;gt; Runes Coverage Tests" time="0.00003" file="__tests__/unit/reactivity/runes-coverage.test.ts" line="144" assertions="1" />
        <testcase name="logs error when validation returns string" classname="Bindable Validation Edge Cases &amp;gt; Runes Coverage Tests" time="0.000038" file="__tests__/unit/reactivity/runes-coverage.test.ts" line="157" assertions="2" />
        <testcase name="applies transformation before validation" classname="Bindable Validation Edge Cases &amp;gt; Runes Coverage Tests" time="0.000039" file="__tests__/unit/reactivity/runes-coverage.test.ts" line="171" assertions="2" />
        <testcase name="handles validation without transformation" classname="Bindable Validation Edge Cases &amp;gt; Runes Coverage Tests" time="0.000021" file="__tests__/unit/reactivity/runes-coverage.test.ts" line="184" assertions="2" />
        <testcase name="handles transformation without validation" classname="Bindable Validation Edge Cases &amp;gt; Runes Coverage Tests" time="0.000021" file="__tests__/unit/reactivity/runes-coverage.test.ts" line="196" assertions="1" />
        <testcase name="$update uses $set internally" classname="Bindable Validation Edge Cases &amp;gt; Runes Coverage Tests" time="0.000037" file="__tests__/unit/reactivity/runes-coverage.test.ts" line="205" assertions="2" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/styling/index.test.ts" file="__tests__/unit/styling/index.test.ts" tests="12" assertions="23" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Styling Index Convenience Functions" file="__tests__/unit/styling/index.test.ts" line="8" tests="12" assertions="23" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="rgb" file="__tests__/unit/styling/index.test.ts" line="9" tests="3" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="formats RGB color string" classname="rgb &amp;gt; Styling Index Convenience Functions" time="0.000037" file="__tests__/unit/styling/index.test.ts" line="10" assertions="4" />
        <testcase name="handles zero values" classname="rgb &amp;gt; Styling Index Convenience Functions" time="0.000004" file="__tests__/unit/styling/index.test.ts" line="17" assertions="1" />
        <testcase name="handles max values" classname="rgb &amp;gt; Styling Index Convenience Functions" time="0.000002" file="__tests__/unit/styling/index.test.ts" line="21" assertions="1" />
      </testsuite>
      <testsuite name="hex" file="__tests__/unit/styling/index.test.ts" line="26" tests="4" assertions="10" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="adds # prefix if missing" classname="hex &amp;gt; Styling Index Convenience Functions" time="0.000032" file="__tests__/unit/styling/index.test.ts" line="27" assertions="3" />
        <testcase name="preserves # prefix if present" classname="hex &amp;gt; Styling Index Convenience Functions" time="0.00001" file="__tests__/unit/styling/index.test.ts" line="33" assertions="3" />
        <testcase name="handles short hex codes" classname="hex &amp;gt; Styling Index Convenience Functions" time="0.00001" file="__tests__/unit/styling/index.test.ts" line="39" assertions="2" />
        <testcase name="handles uppercase hex" classname="hex &amp;gt; Styling Index Convenience Functions" time="0.000006" file="__tests__/unit/styling/index.test.ts" line="44" assertions="2" />
      </testsuite>
      <testsuite name="hsl" file="__tests__/unit/styling/index.test.ts" line="50" tests="5" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="formats HSL color string" classname="hsl &amp;gt; Styling Index Convenience Functions" time="0.000019" file="__tests__/unit/styling/index.test.ts" line="51" assertions="3" />
        <testcase name="handles zero saturation" classname="hsl &amp;gt; Styling Index Convenience Functions" time="0.000011" file="__tests__/unit/styling/index.test.ts" line="57" assertions="1" />
        <testcase name="handles zero lightness" classname="hsl &amp;gt; Styling Index Convenience Functions" time="0.000007" file="__tests__/unit/styling/index.test.ts" line="61" assertions="1" />
        <testcase name="handles full lightness" classname="hsl &amp;gt; Styling Index Convenience Functions" time="0.00001" file="__tests__/unit/styling/index.test.ts" line="65" assertions="1" />
        <testcase name="handles 360 degree hue" classname="hsl &amp;gt; Styling Index Convenience Functions" time="0.000013" file="__tests__/unit/styling/index.test.ts" line="69" assertions="1" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/styling/color-comprehensive.test.ts" file="__tests__/unit/styling/color-comprehensive.test.ts" tests="48" assertions="120" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Color System" file="__tests__/unit/styling/color-comprehensive.test.ts" line="22" tests="48" assertions="120" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="Color Constructors" file="__tests__/unit/styling/color-comprehensive.test.ts" line="23" tests="6" assertions="14" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates NoColor" classname="Color Constructors &amp;gt; Color System" time="0" file="__tests__/unit/styling/color-comprehensive.test.ts" line="24" assertions="1" />
        <testcase name="creates ANSI color" classname="Color Constructors &amp;gt; Color System" time="0.000012" file="__tests__/unit/styling/color-comprehensive.test.ts" line="29" assertions="2" />
        <testcase name="creates ANSI256 color" classname="Color Constructors &amp;gt; Color System" time="0.000015" file="__tests__/unit/styling/color-comprehensive.test.ts" line="35" assertions="2" />
        <testcase name="creates Hex color" classname="Color Constructors &amp;gt; Color System" time="0.000023" file="__tests__/unit/styling/color-comprehensive.test.ts" line="41" assertions="2" />
        <testcase name="creates RGB color" classname="Color Constructors &amp;gt; Color System" time="0.000012" file="__tests__/unit/styling/color-comprehensive.test.ts" line="47" assertions="4" />
        <testcase name="creates Adaptive color" classname="Color Constructors &amp;gt; Color System" time="0.000029" file="__tests__/unit/styling/color-comprehensive.test.ts" line="55" assertions="3" />
      </testsuite>
      <testsuite name="Color Smart Constructors" file="__tests__/unit/styling/color-comprehensive.test.ts" line="65" tests="5" assertions="15" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates hex colors with validation" classname="Color Smart Constructors &amp;gt; Color System" time="0.000095" file="__tests__/unit/styling/color-comprehensive.test.ts" line="66" assertions="5" />
        <testcase name="creates RGB colors with validation" classname="Color Smart Constructors &amp;gt; Color System" time="0.000016" file="__tests__/unit/styling/color-comprehensive.test.ts" line="81" assertions="3" />
        <testcase name="creates ANSI colors with validation" classname="Color Smart Constructors &amp;gt; Color System" time="0.000051" file="__tests__/unit/styling/color-comprehensive.test.ts" line="92" assertions="2" />
        <testcase name="creates ANSI256 colors with validation" classname="Color Smart Constructors &amp;gt; Color System" time="0.000023" file="__tests__/unit/styling/color-comprehensive.test.ts" line="100" assertions="2" />
        <testcase name="creates adaptive colors" classname="Color Smart Constructors &amp;gt; Color System" time="0.000021" file="__tests__/unit/styling/color-comprehensive.test.ts" line="108" assertions="3" />
      </testsuite>
      <testsuite name="Standard Colors" file="__tests__/unit/styling/color-comprehensive.test.ts" line="116" tests="5" assertions="26" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="provides ANSI colors" classname="Standard Colors &amp;gt; Color System" time="0.000025" file="__tests__/unit/styling/color-comprehensive.test.ts" line="117" assertions="9" />
        <testcase name="provides bright ANSI colors" classname="Standard Colors &amp;gt; Color System" time="0.000018" file="__tests__/unit/styling/color-comprehensive.test.ts" line="129" assertions="8" />
        <testcase name="provides none color" classname="Standard Colors &amp;gt; Color System" time="0.000011" file="__tests__/unit/styling/color-comprehensive.test.ts" line="140" assertions="1" />
        <testcase name="provides common RGB colors" classname="Standard Colors &amp;gt; Color System" time="0.000017" file="__tests__/unit/styling/color-comprehensive.test.ts" line="145" assertions="6" />
        <testcase name="provides color aliases" classname="Standard Colors &amp;gt; Color System" time="0.000017" file="__tests__/unit/styling/color-comprehensive.test.ts" line="155" assertions="2" />
      </testsuite>
      <testsuite name="toAnsiSequence" file="__tests__/unit/styling/color-comprehensive.test.ts" line="161" tests="13" assertions="13" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="converts NoColor to empty string" classname="toAnsiSequence &amp;gt; Color System" time="0.00003" file="__tests__/unit/styling/color-comprehensive.test.ts" line="162" assertions="1" />
        <testcase name="converts ANSI color for foreground" classname="toAnsiSequence &amp;gt; Color System" time="0.000009" file="__tests__/unit/styling/color-comprehensive.test.ts" line="167" assertions="1" />
        <testcase name="converts ANSI color for background" classname="toAnsiSequence &amp;gt; Color System" time="0.000007" file="__tests__/unit/styling/color-comprehensive.test.ts" line="172" assertions="1" />
        <testcase name="converts ANSI256 color" classname="toAnsiSequence &amp;gt; Color System" time="0.000017" file="__tests__/unit/styling/color-comprehensive.test.ts" line="177" assertions="1" />
        <testcase name="converts ANSI256 color for background" classname="toAnsiSequence &amp;gt; Color System" time="0.000013" file="__tests__/unit/styling/color-comprehensive.test.ts" line="182" assertions="1" />
        <testcase name="converts RGB color in TrueColor mode" classname="toAnsiSequence &amp;gt; Color System" time="0.000017" file="__tests__/unit/styling/color-comprehensive.test.ts" line="187" assertions="1" />
        <testcase name="converts RGB color for background in TrueColor mode" classname="toAnsiSequence &amp;gt; Color System" time="0.00001" file="__tests__/unit/styling/color-comprehensive.test.ts" line="192" assertions="1" />
        <testcase name="converts Hex color" classname="toAnsiSequence &amp;gt; Color System" time="0.000055" file="__tests__/unit/styling/color-comprehensive.test.ts" line="197" assertions="1" />
        <testcase name="handles NoColor profile" classname="toAnsiSequence &amp;gt; Color System" time="0.000011" file="__tests__/unit/styling/color-comprehensive.test.ts" line="202" assertions="1" />
        <testcase name="degrades RGB to ANSI256" classname="toAnsiSequence &amp;gt; Color System" time="0.000055" file="__tests__/unit/styling/color-comprehensive.test.ts" line="207" assertions="1" />
        <testcase name="degrades RGB to ANSI" classname="toAnsiSequence &amp;gt; Color System" time="0.000063" file="__tests__/unit/styling/color-comprehensive.test.ts" line="213" assertions="1" />
        <testcase name="handles bright ANSI colors" classname="toAnsiSequence &amp;gt; Color System" time="0.000013" file="__tests__/unit/styling/color-comprehensive.test.ts" line="218" assertions="1" />
        <testcase name="degrades ANSI256 to ANSI" classname="toAnsiSequence &amp;gt; Color System" time="0.000013" file="__tests__/unit/styling/color-comprehensive.test.ts" line="223" assertions="1" />
      </testsuite>
      <testsuite name="Color utility functions" file="__tests__/unit/styling/color-comprehensive.test.ts" line="230" tests="15" assertions="44" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testsuite name="isVisible" file="__tests__/unit/styling/color-comprehensive.test.ts" line="231" tests="2" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="returns false for NoColor" classname="isVisible &amp;gt; Color utility functions &amp;gt; Color System" time="0.000014" file="__tests__/unit/styling/color-comprehensive.test.ts" line="232" assertions="1" />
          <testcase name="returns true for visible colors" classname="isVisible &amp;gt; Color utility functions &amp;gt; Color System" time="0.000025" file="__tests__/unit/styling/color-comprehensive.test.ts" line="236" assertions="5" />
        </testsuite>
        <testsuite name="blend" file="__tests__/unit/styling/color-comprehensive.test.ts" line="245" tests="5" assertions="9" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="blends two RGB colors" classname="blend &amp;gt; Color utility functions &amp;gt; Color System" time="0.000038" file="__tests__/unit/styling/color-comprehensive.test.ts" line="246" assertions="4" />
          <testcase name="handles alpha of 0" classname="blend &amp;gt; Color utility functions &amp;gt; Color System" time="0.000013" file="__tests__/unit/styling/color-comprehensive.test.ts" line="259" assertions="1" />
          <testcase name="handles alpha of 1" classname="blend &amp;gt; Color utility functions &amp;gt; Color System" time="0.000015" file="__tests__/unit/styling/color-comprehensive.test.ts" line="267" assertions="1" />
          <testcase name="returns NoColor when blending with NoColor" classname="blend &amp;gt; Color utility functions &amp;gt; Color System" time="0.000009" file="__tests__/unit/styling/color-comprehensive.test.ts" line="275" assertions="1" />
          <testcase name="blends non-RGB colors" classname="blend &amp;gt; Color utility functions &amp;gt; Color System" time="0.000013" file="__tests__/unit/styling/color-comprehensive.test.ts" line="282" assertions="2" />
        </testsuite>
        <testsuite name="lighten" file="__tests__/unit/styling/color-comprehensive.test.ts" line="293" tests="3" assertions="9" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="lightens RGB color" classname="lighten &amp;gt; Color utility functions &amp;gt; Color System" time="0.000036" file="__tests__/unit/styling/color-comprehensive.test.ts" line="294" assertions="4" />
          <testcase name="doesn&apos;t exceed 255" classname="lighten &amp;gt; Color utility functions &amp;gt; Color System" time="0.000015" file="__tests__/unit/styling/color-comprehensive.test.ts" line="306" assertions="4" />
          <testcase name="returns NoColor for NoColor" classname="lighten &amp;gt; Color utility functions &amp;gt; Color System" time="0.000006" file="__tests__/unit/styling/color-comprehensive.test.ts" line="318" assertions="1" />
        </testsuite>
        <testsuite name="darken" file="__tests__/unit/styling/color-comprehensive.test.ts" line="324" tests="2" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="darkens RGB color" classname="darken &amp;gt; Color utility functions &amp;gt; Color System" time="0.000025" file="__tests__/unit/styling/color-comprehensive.test.ts" line="325" assertions="4" />
          <testcase name="doesn&apos;t go below 0" classname="darken &amp;gt; Color utility functions &amp;gt; Color System" time="0.000017" file="__tests__/unit/styling/color-comprehensive.test.ts" line="337" assertions="4" />
        </testsuite>
        <testsuite name="gradient" file="__tests__/unit/styling/color-comprehensive.test.ts" line="350" tests="3" assertions="12" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="creates gradient between two colors" classname="gradient &amp;gt; Color utility functions &amp;gt; Color System" time="0.000059" file="__tests__/unit/styling/color-comprehensive.test.ts" line="351" assertions="6" />
          <testcase name="handles single step" classname="gradient &amp;gt; Color utility functions &amp;gt; Color System" time="0.000025" file="__tests__/unit/styling/color-comprehensive.test.ts" line="369" assertions="2" />
          <testcase name="handles NoColor" classname="gradient &amp;gt; Color utility functions &amp;gt; Color System" time="0.00002" file="__tests__/unit/styling/color-comprehensive.test.ts" line="378" assertions="4" />
        </testsuite>
      </testsuite>
      <testsuite name="Helper functions" file="__tests__/unit/styling/color-comprehensive.test.ts" line="389" tests="3" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="rgb creates formatted string" classname="Helper functions &amp;gt; Color System" time="0.000013" file="__tests__/unit/styling/color-comprehensive.test.ts" line="390" assertions="1" />
        <testcase name="hex ensures hash prefix" classname="Helper functions &amp;gt; Color System" time="0.000026" file="__tests__/unit/styling/color-comprehensive.test.ts" line="394" assertions="2" />
        <testcase name="hsl creates formatted string" classname="Helper functions &amp;gt; Color System" time="0.000016" file="__tests__/unit/styling/color-comprehensive.test.ts" line="399" assertions="1" />
      </testsuite>
      <testsuite name="ColorProfile enum" file="__tests__/unit/styling/color-comprehensive.test.ts" line="404" tests="1" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="has all profile values" classname="ColorProfile enum &amp;gt; Color System" time="0.00001" file="__tests__/unit/styling/color-comprehensive.test.ts" line="405" assertions="4" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/styling/gradients-comprehensive.test.ts" file="__tests__/unit/styling/gradients-comprehensive.test.ts" tests="35" assertions="75" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Gradients Module" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="23" tests="35" assertions="75" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="createLinearGradient function" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="24" tests="5" assertions="11" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates basic linear gradient" classname="createLinearGradient function &amp;gt; Gradients Module" time="0.00019" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="25" assertions="4" />
        <testcase name="creates gradient with multiple stops" classname="createLinearGradient function &amp;gt; Gradients Module" time="0.000046" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="39" assertions="2" />
        <testcase name="handles default angle" classname="createLinearGradient function &amp;gt; Gradients Module" time="0.000018" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="52" assertions="1" />
        <testcase name="normalizes angles" classname="createLinearGradient function &amp;gt; Gradients Module" time="0.000014" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="62" assertions="1" />
        <testcase name="sorts stops by position" classname="createLinearGradient function &amp;gt; Gradients Module" time="0.000023" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="73" assertions="3" />
      </testsuite>
      <testsuite name="createRadialGradient function" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="88" tests="3" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates basic radial gradient" classname="createRadialGradient function &amp;gt; Gradients Module" time="0.00005" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="89" assertions="4" />
        <testcase name="handles default center" classname="createRadialGradient function &amp;gt; Gradients Module" time="0.000022" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="104" assertions="1" />
        <testcase name="clamps radius to valid range" classname="createRadialGradient function &amp;gt; Gradients Module" time="0.00002" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="115" assertions="2" />
      </testsuite>
      <testsuite name="parseGradientString function" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="130" tests="6" assertions="13" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="parses linear gradient string" classname="parseGradientString function &amp;gt; Gradients Module" time="0.00021" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="131" assertions="4" />
        <testcase name="parses radial gradient string" classname="parseGradientString function &amp;gt; Gradients Module" time="0.00008" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="140" assertions="2" />
        <testcase name="handles color names" classname="parseGradientString function &amp;gt; Gradients Module" time="0.000019" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="147" assertions="2" />
        <testcase name="handles multiple stops" classname="parseGradientString function &amp;gt; Gradients Module" time="0.000043" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="154" assertions="2" />
        <testcase name="handles invalid strings gracefully" classname="parseGradientString function &amp;gt; Gradients Module" time="0.000017" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="161" assertions="1" />
        <testcase name="handles missing percentages" classname="parseGradientString function &amp;gt; Gradients Module" time="0.000023" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="167" assertions="2" />
      </testsuite>
      <testsuite name="interpolateColors function" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="175" tests="5" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="interpolates between two colors" classname="interpolateColors function &amp;gt; Gradients Module" time="0.00005" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="176" assertions="3" />
        <testcase name="returns first color at t=0" classname="interpolateColors function &amp;gt; Gradients Module" time="0.000012" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="185" assertions="1" />
        <testcase name="returns second color at t=1" classname="interpolateColors function &amp;gt; Gradients Module" time="0.00001" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="192" assertions="1" />
        <testcase name="handles alpha channel" classname="interpolateColors function &amp;gt; Gradients Module" time="0.000012" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="199" assertions="1" />
        <testcase name="clamps t value" classname="interpolateColors function &amp;gt; Gradients Module" time="0.000017" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="206" assertions="2" />
      </testsuite>
      <testsuite name="generateGradientStops function" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="218" tests="3" assertions="10" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="generates stops for given width" classname="generateGradientStops function &amp;gt; Gradients Module" time="0.000184" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="219" assertions="3" />
        <testcase name="handles single stop" classname="generateGradientStops function &amp;gt; Gradients Module" time="0.000035" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="233" assertions="6" />
        <testcase name="handles zero width" classname="generateGradientStops function &amp;gt; Gradients Module" time="0.000013" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="245" assertions="1" />
      </testsuite>
      <testsuite name="calculateGradientPosition function" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="255" tests="3" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="calculates position for linear gradient" classname="calculateGradientPosition function &amp;gt; Gradients Module" time="0.000061" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="256" assertions="3" />
        <testcase name="calculates position for vertical gradient" classname="calculateGradientPosition function &amp;gt; Gradients Module" time="0.000012" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="270" assertions="2" />
        <testcase name="calculates position for radial gradient" classname="calculateGradientPosition function &amp;gt; Gradients Module" time="0.000022" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="282" assertions="2" />
      </testsuite>
      <testsuite name="applyGradientToText function" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="296" tests="3" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="applies gradient to text" classname="applyGradientToText function &amp;gt; Gradients Module" time="0.000114" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="297" assertions="2" />
        <testcase name="handles empty text" classname="applyGradientToText function &amp;gt; Gradients Module" time="0.000006" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="310" assertions="1" />
        <testcase name="applies different colors to different characters" classname="applyGradientToText function &amp;gt; Gradients Module" time="0.000037" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="319" assertions="1" />
      </testsuite>
      <testsuite name="utility functions" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="334" tests="7" assertions="15" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="validates gradient syntax" classname="utility functions &amp;gt; Gradients Module" time="0.000044" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="335" assertions="4" />
        <testcase name="extracts gradient colors" classname="utility functions &amp;gt; Gradients Module" time="0.000029" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="342" assertions="1" />
        <testcase name="reverses gradient" classname="utility functions &amp;gt; Gradients Module" time="0.000091" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="355" assertions="4" />
        <testcase name="rotates gradient" classname="utility functions &amp;gt; Gradients Module" time="0.000026" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="370" assertions="1" />
        <testcase name="optimizes gradient by removing redundant stops" classname="utility functions &amp;gt; Gradients Module" time="0.000039" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="379" assertions="1" />
        <testcase name="blends two gradients" classname="utility functions &amp;gt; Gradients Module" time="0.000175" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="392" assertions="1" />
        <testcase name="converts gradient formats" classname="utility functions &amp;gt; Gradients Module" time="0.000061" file="__tests__/unit/styling/gradients-comprehensive.test.ts" line="405" assertions="3" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/styling/borders.test.ts" file="__tests__/unit/styling/borders.test.ts" tests="44" assertions="143" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Border System" file="__tests__/unit/styling/borders.test.ts" line="19" tests="44" assertions="143" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="BorderSide enum" file="__tests__/unit/styling/borders.test.ts" line="20" tests="2" assertions="9" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="has correct bitflag values" classname="BorderSide enum &amp;gt; Border System" time="0.000026" file="__tests__/unit/styling/borders.test.ts" line="21" assertions="6" />
        <testcase name="combines correctly" classname="BorderSide enum &amp;gt; Border System" time="0.000019" file="__tests__/unit/styling/borders.test.ts" line="30" assertions="3" />
      </testsuite>
      <testsuite name="hasSide function" file="__tests__/unit/styling/borders.test.ts" line="37" tests="2" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="checks individual sides" classname="hasSide function &amp;gt; Border System" time="0.000022" file="__tests__/unit/styling/borders.test.ts" line="38" assertions="5" />
        <testcase name="works with combined sides" classname="hasSide function &amp;gt; Border System" time="0.000018" file="__tests__/unit/styling/borders.test.ts" line="46" assertions="3" />
      </testsuite>
      <testsuite name="combineSides function" file="__tests__/unit/styling/borders.test.ts" line="54" tests="3" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="combines multiple sides" classname="combineSides function &amp;gt; Border System" time="0.000043" file="__tests__/unit/styling/borders.test.ts" line="55" assertions="3" />
        <testcase name="handles empty args" classname="combineSides function &amp;gt; Border System" time="0.000009" file="__tests__/unit/styling/borders.test.ts" line="61" assertions="1" />
        <testcase name="handles duplicates" classname="combineSides function &amp;gt; Border System" time="0.000006" file="__tests__/unit/styling/borders.test.ts" line="65" assertions="1" />
      </testsuite>
      <testsuite name="createBorder function" file="__tests__/unit/styling/borders.test.ts" line="70" tests="3" assertions="15" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates border with provided characters" classname="createBorder function &amp;gt; Border System" time="0.000037" file="__tests__/unit/styling/borders.test.ts" line="71" assertions="8" />
        <testcase name="uses space as default for missing characters" classname="createBorder function &amp;gt; Border System" time="0.00002" file="__tests__/unit/styling/borders.test.ts" line="93" assertions="4" />
        <testcase name="supports optional middle characters" classname="createBorder function &amp;gt; Border System" time="0.000017" file="__tests__/unit/styling/borders.test.ts" line="102" assertions="3" />
      </testsuite>
      <testsuite name="Predefined Borders" file="__tests__/unit/styling/borders.test.ts" line="116" tests="12" assertions="34" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="provides None border" classname="Predefined Borders &amp;gt; Border System" time="0.000015" file="__tests__/unit/styling/borders.test.ts" line="117" assertions="3" />
        <testcase name="provides Normal border" classname="Predefined Borders &amp;gt; Border System" time="0.000013" file="__tests__/unit/styling/borders.test.ts" line="123" assertions="5" />
        <testcase name="provides Rounded border" classname="Predefined Borders &amp;gt; Border System" time="0.000012" file="__tests__/unit/styling/borders.test.ts" line="131" assertions="4" />
        <testcase name="provides Thick border" classname="Predefined Borders &amp;gt; Border System" time="0.000009" file="__tests__/unit/styling/borders.test.ts" line="138" assertions="3" />
        <testcase name="provides Double border" classname="Predefined Borders &amp;gt; Border System" time="0.000011" file="__tests__/unit/styling/borders.test.ts" line="144" assertions="3" />
        <testcase name="provides ASCII border" classname="Predefined Borders &amp;gt; Border System" time="0.00001" file="__tests__/unit/styling/borders.test.ts" line="150" assertions="3" />
        <testcase name="provides Dotted border" classname="Predefined Borders &amp;gt; Border System" time="0.000009" file="__tests__/unit/styling/borders.test.ts" line="156" assertions="2" />
        <testcase name="provides Dashed border" classname="Predefined Borders &amp;gt; Border System" time="0.000012" file="__tests__/unit/styling/borders.test.ts" line="161" assertions="2" />
        <testcase name="provides Block border" classname="Predefined Borders &amp;gt; Border System" time="0.000012" file="__tests__/unit/styling/borders.test.ts" line="166" assertions="3" />
        <testcase name="provides Minimal border" classname="Predefined Borders &amp;gt; Border System" time="0.000005" file="__tests__/unit/styling/borders.test.ts" line="172" assertions="3" />
        <testcase name="provides Hidden border" classname="Predefined Borders &amp;gt; Border System" time="0.00001" file="__tests__/unit/styling/borders.test.ts" line="178" assertions="2" />
        <testcase name="provides Single alias for Normal" classname="Predefined Borders &amp;gt; Border System" time="0.000007" file="__tests__/unit/styling/borders.test.ts" line="183" assertions="1" />
      </testsuite>
      <testsuite name="getBorderChar function" file="__tests__/unit/styling/borders.test.ts" line="188" tests="7" assertions="23" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testsuite name="corner handling" file="__tests__/unit/styling/borders.test.ts" line="202" tests="4" assertions="16" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="handles topLeft corner" classname="corner handling &amp;gt; getBorderChar function &amp;gt; Border System" time="0.00004" file="__tests__/unit/styling/borders.test.ts" line="203" assertions="4" />
          <testcase name="handles topRight corner" classname="corner handling &amp;gt; getBorderChar function &amp;gt; Border System" time="0.000033" file="__tests__/unit/styling/borders.test.ts" line="210" assertions="4" />
          <testcase name="handles bottomLeft corner" classname="corner handling &amp;gt; getBorderChar function &amp;gt; Border System" time="0.000027" file="__tests__/unit/styling/borders.test.ts" line="217" assertions="4" />
          <testcase name="handles bottomRight corner" classname="corner handling &amp;gt; getBorderChar function &amp;gt; Border System" time="0.000036" file="__tests__/unit/styling/borders.test.ts" line="224" assertions="4" />
        </testsuite>
        <testcase name="returns space when no sides enabled" classname="getBorderChar function &amp;gt; Border System" time="0.000012" file="__tests__/unit/styling/borders.test.ts" line="191" assertions="2" />
        <testcase name="returns correct character for enabled sides" classname="getBorderChar function &amp;gt; Border System" time="0.000007" file="__tests__/unit/styling/borders.test.ts" line="196" assertions="3" />
        <testcase name="handles middle characters" classname="getBorderChar function &amp;gt; Border System" time="0.000084" file="__tests__/unit/styling/borders.test.ts" line="232" assertions="2" />
      </testsuite>
      <testsuite name="renderBox function" file="__tests__/unit/styling/borders.test.ts" line="238" tests="7" assertions="15" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="renders a simple box" classname="renderBox function &amp;gt; Border System" time="0.000051" file="__tests__/unit/styling/borders.test.ts" line="239" assertions="1" />
        <testcase name="handles empty content" classname="renderBox function &amp;gt; Border System" time="0.000016" file="__tests__/unit/styling/borders.test.ts" line="251" assertions="1" />
        <testcase name="handles content with different widths" classname="renderBox function &amp;gt; Border System" time="0.00002" file="__tests__/unit/styling/borders.test.ts" line="256" assertions="1" />
        <testcase name="respects specified width" classname="renderBox function &amp;gt; Border System" time="0.000018" file="__tests__/unit/styling/borders.test.ts" line="268" assertions="1" />
        <testcase name="renders partial borders" classname="renderBox function &amp;gt; Border System" time="0.000034" file="__tests__/unit/styling/borders.test.ts" line="279" assertions="3" />
        <testcase name="handles ANSI escape sequences" classname="renderBox function &amp;gt; Border System" time="0.000028" file="__tests__/unit/styling/borders.test.ts" line="304" assertions="3" />
        <testcase name="renders with different border styles" classname="renderBox function &amp;gt; Border System" time="0.000023" file="__tests__/unit/styling/borders.test.ts" line="317" assertions="5" />
      </testsuite>
      <testsuite name="mergeBorders function" file="__tests__/unit/styling/borders.test.ts" line="331" tests="3" assertions="9" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="merges two borders with overlay taking precedence" classname="mergeBorders function &amp;gt; Border System" time="0.000035" file="__tests__/unit/styling/borders.test.ts" line="332" assertions="5" />
        <testcase name="preserves all base values when overlay is empty" classname="mergeBorders function &amp;gt; Border System" time="0.000011" file="__tests__/unit/styling/borders.test.ts" line="349" assertions="1" />
        <testcase name="handles middle characters" classname="mergeBorders function &amp;gt; Border System" time="0.000015" file="__tests__/unit/styling/borders.test.ts" line="356" assertions="3" />
      </testsuite>
      <testsuite name="borderFromPattern function" file="__tests__/unit/styling/borders.test.ts" line="371" tests="3" assertions="18" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates border from 8-character pattern" classname="borderFromPattern function &amp;gt; Border System" time="0.000044" file="__tests__/unit/styling/borders.test.ts" line="372" assertions="8" />
        <testcase name="throws error for pattern too short" classname="borderFromPattern function &amp;gt; Border System" time="0.000036" file="__tests__/unit/styling/borders.test.ts" line="385" assertions="2" />
        <testcase name="ignores extra characters" classname="borderFromPattern function &amp;gt; Border System" time="0.000017" file="__tests__/unit/styling/borders.test.ts" line="390" assertions="8" />
      </testsuite>
      <testsuite name="Complex border scenarios" file="__tests__/unit/styling/borders.test.ts" line="404" tests="2" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="renders nested boxes" classname="Complex border scenarios &amp;gt; Border System" time="0.000025" file="__tests__/unit/styling/borders.test.ts" line="405" assertions="4" />
        <testcase name="handles Unicode characters in content" classname="Complex border scenarios &amp;gt; Border System" time="0.000027" file="__tests__/unit/styling/borders.test.ts" line="422" assertions="3" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/styling/advanced.test.ts" file="__tests__/unit/styling/advanced.test.ts" tests="61" assertions="194" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Advanced Styling" file="__tests__/unit/styling/advanced.test.ts" line="32" tests="61" assertions="194" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="Shadow Effects" file="__tests__/unit/styling/advanced.test.ts" line="33" tests="8" assertions="19" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testsuite name="createDropShadow" file="__tests__/unit/styling/advanced.test.ts" line="34" tests="5" assertions="12" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="creates drop shadow with positive offset" classname="createDropShadow &amp;gt; Shadow Effects &amp;gt; Advanced Styling" time="0.000868" file="__tests__/unit/styling/advanced.test.ts" line="42" assertions="4" />
          <testcase name="creates drop shadow with negative x offset" classname="createDropShadow &amp;gt; Shadow Effects &amp;gt; Advanced Styling" time="0.000033" file="__tests__/unit/styling/advanced.test.ts" line="52" assertions="2" />
          <testcase name="creates drop shadow with negative y offset" classname="createDropShadow &amp;gt; Shadow Effects &amp;gt; Advanced Styling" time="0.000026" file="__tests__/unit/styling/advanced.test.ts" line="64" assertions="3" />
          <testcase name="handles zero offset" classname="createDropShadow &amp;gt; Shadow Effects &amp;gt; Advanced Styling" time="0.000027" file="__tests__/unit/styling/advanced.test.ts" line="77" assertions="2" />
          <testcase name="handles empty content" classname="createDropShadow &amp;gt; Shadow Effects &amp;gt; Advanced Styling" time="0.000035" file="__tests__/unit/styling/advanced.test.ts" line="89" assertions="1" />
        </testsuite>
        <testsuite name="createInnerShadow" file="__tests__/unit/styling/advanced.test.ts" line="95" tests="3" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="creates inner shadow on edges" classname="createInnerShadow &amp;gt; Shadow Effects &amp;gt; Advanced Styling" time="0.00009" file="__tests__/unit/styling/advanced.test.ts" line="96" assertions="4" />
          <testcase name="handles single line" classname="createInnerShadow &amp;gt; Shadow Effects &amp;gt; Advanced Styling" time="0.000017" file="__tests__/unit/styling/advanced.test.ts" line="113" assertions="2" />
          <testcase name="handles empty content" classname="createInnerShadow &amp;gt; Shadow Effects &amp;gt; Advanced Styling" time="0.000015" file="__tests__/unit/styling/advanced.test.ts" line="127" assertions="1" />
        </testsuite>
      </testsuite>
      <testsuite name="Glow Effects" file="__tests__/unit/styling/advanced.test.ts" line="141" tests="4" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testsuite name="createGlow" file="__tests__/unit/styling/advanced.test.ts" line="142" tests="4" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="creates glow around content" classname="createGlow &amp;gt; Glow Effects &amp;gt; Advanced Styling" time="0.000107" file="__tests__/unit/styling/advanced.test.ts" line="149" assertions="2" />
          <testcase name="handles empty content" classname="createGlow &amp;gt; Glow Effects &amp;gt; Advanced Styling" time="0.00001" file="__tests__/unit/styling/advanced.test.ts" line="157" assertions="1" />
          <testcase name="adjusts glow based on radius" classname="createGlow &amp;gt; Glow Effects &amp;gt; Advanced Styling" time="0.000036" file="__tests__/unit/styling/advanced.test.ts" line="162" assertions="1" />
          <testcase name="handles different intensity levels" classname="createGlow &amp;gt; Glow Effects &amp;gt; Advanced Styling" time="0.000061" file="__tests__/unit/styling/advanced.test.ts" line="173" assertions="1" />
        </testsuite>
      </testsuite>
      <testsuite name="Pattern Effects" file="__tests__/unit/styling/advanced.test.ts" line="184" tests="11" assertions="23" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testsuite name="generatePattern" file="__tests__/unit/styling/advanced.test.ts" line="185" tests="8" assertions="16" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="generates checkerboard pattern" classname="generatePattern &amp;gt; Pattern Effects &amp;gt; Advanced Styling" time="0.00009" file="__tests__/unit/styling/advanced.test.ts" line="193" assertions="3" />
          <testcase name="generates stripe pattern" classname="generatePattern &amp;gt; Pattern Effects &amp;gt; Advanced Styling" time="0.000018" file="__tests__/unit/styling/advanced.test.ts" line="201" assertions="2" />
          <testcase name="generates dots pattern" classname="generatePattern &amp;gt; Pattern Effects &amp;gt; Advanced Styling" time="0.000016" file="__tests__/unit/styling/advanced.test.ts" line="209" assertions="2" />
          <testcase name="generates diagonal pattern" classname="generatePattern &amp;gt; Pattern Effects &amp;gt; Advanced Styling" time="0.000018" file="__tests__/unit/styling/advanced.test.ts" line="217" assertions="2" />
          <testcase name="generates cross pattern" classname="generatePattern &amp;gt; Pattern Effects &amp;gt; Advanced Styling" time="0.000011" file="__tests__/unit/styling/advanced.test.ts" line="225" assertions="2" />
          <testcase name="generates wave pattern" classname="generatePattern &amp;gt; Pattern Effects &amp;gt; Advanced Styling" time="0.000015" file="__tests__/unit/styling/advanced.test.ts" line="233" assertions="2" />
          <testcase name="handles invalid pattern type" classname="generatePattern &amp;gt; Pattern Effects &amp;gt; Advanced Styling" time="0.000013" file="__tests__/unit/styling/advanced.test.ts" line="241" assertions="2" />
          <testcase name="handles zero dimensions" classname="generatePattern &amp;gt; Pattern Effects &amp;gt; Advanced Styling" time="0.000011" file="__tests__/unit/styling/advanced.test.ts" line="249" assertions="1" />
        </testsuite>
        <testsuite name="applyPattern" file="__tests__/unit/styling/advanced.test.ts" line="255" tests="3" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="applies pattern to content spaces" classname="applyPattern &amp;gt; Pattern Effects &amp;gt; Advanced Styling" time="0.000087" file="__tests__/unit/styling/advanced.test.ts" line="263" assertions="5" />
          <testcase name="preserves non-space characters" classname="applyPattern &amp;gt; Pattern Effects &amp;gt; Advanced Styling" time="0.000025" file="__tests__/unit/styling/advanced.test.ts" line="274" assertions="1" />
          <testcase name="handles empty content" classname="applyPattern &amp;gt; Pattern Effects &amp;gt; Advanced Styling" time="0.000003" file="__tests__/unit/styling/advanced.test.ts" line="281" assertions="1" />
        </testsuite>
      </testsuite>
      <testsuite name="Border Styles" file="__tests__/unit/styling/advanced.test.ts" line="288" tests="5" assertions="20" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testsuite name="createStyledBorder" file="__tests__/unit/styling/advanced.test.ts" line="289" tests="5" assertions="20" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="creates solid border" classname="createStyledBorder &amp;gt; Border Styles &amp;gt; Advanced Styling" time="0.000079" file="__tests__/unit/styling/advanced.test.ts" line="290" assertions="8" />
          <testcase name="creates dashed border" classname="createStyledBorder &amp;gt; Border Styles &amp;gt; Advanced Styling" time="0.000024" file="__tests__/unit/styling/advanced.test.ts" line="309" assertions="3" />
          <testcase name="creates dotted border" classname="createStyledBorder &amp;gt; Border Styles &amp;gt; Advanced Styling" time="0.000014" file="__tests__/unit/styling/advanced.test.ts" line="322" assertions="3" />
          <testcase name="creates double border" classname="createStyledBorder &amp;gt; Border Styles &amp;gt; Advanced Styling" time="0.000016" file="__tests__/unit/styling/advanced.test.ts" line="335" assertions="4" />
          <testcase name="handles minimum dimensions" classname="createStyledBorder &amp;gt; Border Styles &amp;gt; Advanced Styling" time="0.000032" file="__tests__/unit/styling/advanced.test.ts" line="349" assertions="2" />
        </testsuite>
      </testsuite>
      <testsuite name="Layer Effects" file="__tests__/unit/styling/advanced.test.ts" line="363" tests="8" assertions="18" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testsuite name="applyLayerEffect" file="__tests__/unit/styling/advanced.test.ts" line="364" tests="8" assertions="18" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="applies overlay effect" classname="applyLayerEffect &amp;gt; Layer Effects &amp;gt; Advanced Styling" time="0.00015" file="__tests__/unit/styling/advanced.test.ts" line="368" assertions="4" />
          <testcase name="applies multiply effect" classname="applyLayerEffect &amp;gt; Layer Effects &amp;gt; Advanced Styling" time="0.000027" file="__tests__/unit/styling/advanced.test.ts" line="385" assertions="2" />
          <testcase name="applies screen effect" classname="applyLayerEffect &amp;gt; Layer Effects &amp;gt; Advanced Styling" time="0.000019" file="__tests__/unit/styling/advanced.test.ts" line="400" assertions="1" />
          <testcase name="applies color-dodge effect" classname="applyLayerEffect &amp;gt; Layer Effects &amp;gt; Advanced Styling" time="0.000024" file="__tests__/unit/styling/advanced.test.ts" line="413" assertions="3" />
          <testcase name="applies color-burn effect" classname="applyLayerEffect &amp;gt; Layer Effects &amp;gt; Advanced Styling" time="0.00002" file="__tests__/unit/styling/advanced.test.ts" line="429" assertions="3" />
          <testcase name="handles unknown effect type" classname="applyLayerEffect &amp;gt; Layer Effects &amp;gt; Advanced Styling" time="0.000014" file="__tests__/unit/styling/advanced.test.ts" line="445" assertions="1" />
          <testcase name="works with ANSI colors" classname="applyLayerEffect &amp;gt; Layer Effects &amp;gt; Advanced Styling" time="0.000025" file="__tests__/unit/styling/advanced.test.ts" line="456" assertions="1" />
          <testcase name="clamps RGB values to valid range" classname="applyLayerEffect &amp;gt; Layer Effects &amp;gt; Advanced Styling" time="0.000016" file="__tests__/unit/styling/advanced.test.ts" line="468" assertions="3" />
        </testsuite>
      </testsuite>
      <testsuite name="Animation Helpers" file="__tests__/unit/styling/advanced.test.ts" line="487" tests="5" assertions="9" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testsuite name="createPulse" file="__tests__/unit/styling/advanced.test.ts" line="488" tests="1" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="creates pulse effect" classname="createPulse &amp;gt; Animation Helpers &amp;gt; Advanced Styling" time="0.000051" file="__tests__/unit/styling/advanced.test.ts" line="489" assertions="2" />
        </testsuite>
        <testsuite name="createShake" file="__tests__/unit/styling/advanced.test.ts" line="499" tests="2" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="creates shake effect" classname="createShake &amp;gt; Animation Helpers &amp;gt; Advanced Styling" time="0.000025" file="__tests__/unit/styling/advanced.test.ts" line="500" assertions="2" />
          <testcase name="oscillates around base position" classname="createShake &amp;gt; Animation Helpers &amp;gt; Advanced Styling" time="0.000015" file="__tests__/unit/styling/advanced.test.ts" line="509" assertions="2" />
        </testsuite>
        <testsuite name="createBounce" file="__tests__/unit/styling/advanced.test.ts" line="519" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="creates bounce effect" classname="createBounce &amp;gt; Animation Helpers &amp;gt; Advanced Styling" time="0.000027" file="__tests__/unit/styling/advanced.test.ts" line="520" assertions="2" />
          <testcase name="repeats after duration" classname="createBounce &amp;gt; Animation Helpers &amp;gt; Advanced Styling" time="0.000013" file="__tests__/unit/styling/advanced.test.ts" line="528" assertions="1" />
        </testsuite>
      </testsuite>
      <testsuite name="Text Effects" file="__tests__/unit/styling/advanced.test.ts" line="537" tests="8" assertions="29" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testsuite name="createTypewriter" file="__tests__/unit/styling/advanced.test.ts" line="538" tests="3" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="reveals text progressively" classname="createTypewriter &amp;gt; Text Effects &amp;gt; Advanced Styling" time="0.000027" file="__tests__/unit/styling/advanced.test.ts" line="539" assertions="3" />
          <testcase name="handles text longer than visible" classname="createTypewriter &amp;gt; Text Effects &amp;gt; Advanced Styling" time="0.000013" file="__tests__/unit/styling/advanced.test.ts" line="551" assertions="1" />
          <testcase name="handles empty text" classname="createTypewriter &amp;gt; Text Effects &amp;gt; Advanced Styling" time="0.000006" file="__tests__/unit/styling/advanced.test.ts" line="558" assertions="1" />
        </testsuite>
        <testsuite name="createWaveText" file="__tests__/unit/styling/advanced.test.ts" line="564" tests="2" assertions="14" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="creates wave offsets for each character" classname="createWaveText &amp;gt; Text Effects &amp;gt; Advanced Styling" time="0.000071" file="__tests__/unit/styling/advanced.test.ts" line="565" assertions="13" />
          <testcase name="handles empty text" classname="createWaveText &amp;gt; Text Effects &amp;gt; Advanced Styling" time="0.000013" file="__tests__/unit/styling/advanced.test.ts" line="582" assertions="1" />
        </testsuite>
        <testsuite name="createRainbowText" file="__tests__/unit/styling/advanced.test.ts" line="588" tests="3" assertions="10" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="assigns colors to each character" classname="createRainbowText &amp;gt; Text Effects &amp;gt; Advanced Styling" time="0.000074" file="__tests__/unit/styling/advanced.test.ts" line="589" assertions="8" />
          <testcase name="cycles through colors" classname="createRainbowText &amp;gt; Text Effects &amp;gt; Advanced Styling" time="0.000035" file="__tests__/unit/styling/advanced.test.ts" line="599" assertions="1" />
          <testcase name="handles empty text" classname="createRainbowText &amp;gt; Text Effects &amp;gt; Advanced Styling" time="0.000014" file="__tests__/unit/styling/advanced.test.ts" line="607" assertions="1" />
        </testsuite>
      </testsuite>
      <testsuite name="Composite Effects" file="__tests__/unit/styling/advanced.test.ts" line="614" tests="7" assertions="63" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testsuite name="createNeonEffect" file="__tests__/unit/styling/advanced.test.ts" line="615" tests="2" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="creates neon sign effect" classname="createNeonEffect &amp;gt; Composite Effects &amp;gt; Advanced Styling" time="0.000044" file="__tests__/unit/styling/advanced.test.ts" line="616" assertions="5" />
          <testcase name="flicker intensity varies with time" classname="createNeonEffect &amp;gt; Composite Effects &amp;gt; Advanced Styling" time="0.000028" file="__tests__/unit/styling/advanced.test.ts" line="626" assertions="1" />
        </testsuite>
        <testsuite name="createMatrixEffect" file="__tests__/unit/styling/advanced.test.ts" line="636" tests="3" assertions="51" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="creates matrix rain drops" classname="createMatrixEffect &amp;gt; Composite Effects &amp;gt; Advanced Styling" time="0.000088" file="__tests__/unit/styling/advanced.test.ts" line="637" assertions="49" />
          <testcase name="density affects number of drops" classname="createMatrixEffect &amp;gt; Composite Effects &amp;gt; Advanced Styling" time="0" file="__tests__/unit/styling/advanced.test.ts" line="653" assertions="1" />
          <testcase name="handles zero dimensions" classname="createMatrixEffect &amp;gt; Composite Effects &amp;gt; Advanced Styling" time="0.000031" file="__tests__/unit/styling/advanced.test.ts" line="661" assertions="1" />
        </testsuite>
        <testsuite name="createHologramEffect" file="__tests__/unit/styling/advanced.test.ts" line="667" tests="2" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="creates hologram effects" classname="createHologramEffect &amp;gt; Composite Effects &amp;gt; Advanced Styling" time="0.000032" file="__tests__/unit/styling/advanced.test.ts" line="668" assertions="5" />
          <testcase name="scanline moves with time" classname="createHologramEffect &amp;gt; Composite Effects &amp;gt; Advanced Styling" time="0.000004" file="__tests__/unit/styling/advanced.test.ts" line="678" assertions="1" />
        </testsuite>
      </testsuite>
      <testsuite name="Edge Cases" file="__tests__/unit/styling/advanced.test.ts" line="687" tests="3" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles very large dimensions" classname="Edge Cases &amp;gt; Advanced Styling" time="0.000802" file="__tests__/unit/styling/advanced.test.ts" line="688" assertions="2" />
        <testcase name="handles extreme shadow offsets" classname="Edge Cases &amp;gt; Advanced Styling" time="0.000028" file="__tests__/unit/styling/advanced.test.ts" line="700" assertions="1" />
        <testcase name="handles extreme layer effect values" classname="Edge Cases &amp;gt; Advanced Styling" time="0.000035" file="__tests__/unit/styling/advanced.test.ts" line="713" assertions="1" />
      </testsuite>
      <testsuite name="Performance" file="__tests__/unit/styling/advanced.test.ts" line="726" tests="2" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles large text efficiently" classname="Performance &amp;gt; Advanced Styling" time="0.00088" file="__tests__/unit/styling/advanced.test.ts" line="727" assertions="2" />
        <testcase name="handles large matrix effect efficiently" classname="Performance &amp;gt; Advanced Styling" time="0.000045" file="__tests__/unit/styling/advanced.test.ts" line="738" assertions="2" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/styling/render-coverage.test.ts" file="__tests__/unit/styling/render-coverage.test.ts" tests="38" assertions="73" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Styling Render Module" file="__tests__/unit/styling/render-coverage.test.ts" line="9" tests="38" assertions="73" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="renderStyledSync function" file="__tests__/unit/styling/render-coverage.test.ts" line="10" tests="28" assertions="53" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="renders plain text without styling" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.0001" file="__tests__/unit/styling/render-coverage.test.ts" line="11" assertions="1" />
        <testcase name="renders text with color" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.000079" file="__tests__/unit/styling/render-coverage.test.ts" line="16" assertions="3" />
        <testcase name="renders text with background color" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.00003" file="__tests__/unit/styling/render-coverage.test.ts" line="23" assertions="2" />
        <testcase name="renders bold text" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.00005" file="__tests__/unit/styling/render-coverage.test.ts" line="29" assertions="2" />
        <testcase name="renders italic text" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.000023" file="__tests__/unit/styling/render-coverage.test.ts" line="35" assertions="2" />
        <testcase name="renders underlined text" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.000039" file="__tests__/unit/styling/render-coverage.test.ts" line="41" assertions="2" />
        <testcase name="renders dim text" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.000037" file="__tests__/unit/styling/render-coverage.test.ts" line="47" assertions="2" />
        <testcase name="renders blinking text" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.000047" file="__tests__/unit/styling/render-coverage.test.ts" line="53" assertions="2" />
        <testcase name="renders reversed text" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.000053" file="__tests__/unit/styling/render-coverage.test.ts" line="59" assertions="2" />
        <testcase name="renders hidden text" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.000037" file="__tests__/unit/styling/render-coverage.test.ts" line="65" assertions="2" />
        <testcase name="renders strikethrough text" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.000025" file="__tests__/unit/styling/render-coverage.test.ts" line="71" assertions="2" />
        <testcase name="combines multiple styles" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.000036" file="__tests__/unit/styling/render-coverage.test.ts" line="77" assertions="5" />
        <testcase name="handles empty text" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.000025" file="__tests__/unit/styling/render-coverage.test.ts" line="88" assertions="1" />
        <testcase name="handles hex colors" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.000082" file="__tests__/unit/styling/render-coverage.test.ts" line="93" assertions="2" />
        <testcase name="handles RGB colors" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.000067" file="__tests__/unit/styling/render-coverage.test.ts" line="99" assertions="2" />
        <testcase name="handles HSL colors" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.00013" file="__tests__/unit/styling/render-coverage.test.ts" line="105" assertions="2" />
        <testcase name="handles multi-line text" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.000056" file="__tests__/unit/styling/render-coverage.test.ts" line="111" assertions="4" />
        <testcase name="preserves whitespace" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.000026" file="__tests__/unit/styling/render-coverage.test.ts" line="123" assertions="1" />
        <testcase name="handles special characters" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.000026" file="__tests__/unit/styling/render-coverage.test.ts" line="129" assertions="1" />
        <testcase name="handles unicode characters" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.000031" file="__tests__/unit/styling/render-coverage.test.ts" line="135" assertions="3" />
        <testcase name="handles ANSI reset properly" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.000026" file="__tests__/unit/styling/render-coverage.test.ts" line="143" assertions="1" />
        <testcase name="handles invalid colors gracefully" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.000019" file="__tests__/unit/styling/render-coverage.test.ts" line="148" assertions="1" />
        <testcase name="handles very long text" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.00003" file="__tests__/unit/styling/render-coverage.test.ts" line="154" assertions="2" />
        <testcase name="handles nested ANSI codes" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.000024" file="__tests__/unit/styling/render-coverage.test.ts" line="161" assertions="2" />
        <testcase name="applies 256-color codes" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.000072" file="__tests__/unit/styling/render-coverage.test.ts" line="168" assertions="1" />
        <testcase name="applies background 256-color codes" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.000034" file="__tests__/unit/styling/render-coverage.test.ts" line="175" assertions="1" />
        <testcase name="handles grayscale colors" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.000025" file="__tests__/unit/styling/render-coverage.test.ts" line="182" assertions="1" />
        <testcase name="optimizes identical consecutive styles" classname="renderStyledSync function &amp;gt; Styling Render Module" time="0.000028" file="__tests__/unit/styling/render-coverage.test.ts" line="187" assertions="1" />
      </testsuite>
      <testsuite name="renderStyled function" file="__tests__/unit/styling/render-coverage.test.ts" line="195" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="returns an Effect that renders styled text" classname="renderStyled function &amp;gt; Styling Render Module" time="0.000233" file="__tests__/unit/styling/render-coverage.test.ts" line="196" assertions="2" />
        <testcase name="handles errors gracefully" classname="renderStyled function &amp;gt; Styling Render Module" time="0.000145" file="__tests__/unit/styling/render-coverage.test.ts" line="205" assertions="1" />
      </testsuite>
      <testsuite name="edge cases and error handling" file="__tests__/unit/styling/render-coverage.test.ts" line="220" tests="8" assertions="17" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles null style gracefully" classname="edge cases and error handling &amp;gt; Styling Render Module" time="0.000027" file="__tests__/unit/styling/render-coverage.test.ts" line="221" assertions="1" />
        <testcase name="handles undefined style gracefully" classname="edge cases and error handling &amp;gt; Styling Render Module" time="0.000048" file="__tests__/unit/styling/render-coverage.test.ts" line="226" assertions="1" />
        <testcase name="handles style with no properties" classname="edge cases and error handling &amp;gt; Styling Render Module" time="0.000028" file="__tests__/unit/styling/render-coverage.test.ts" line="231" assertions="1" />
        <testcase name="handles circular style references" classname="edge cases and error handling &amp;gt; Styling Render Module" time="0.000022" file="__tests__/unit/styling/render-coverage.test.ts" line="237" assertions="1" />
        <testcase name="handles very complex nested styles" classname="edge cases and error handling &amp;gt; Styling Render Module" time="0.000068" file="__tests__/unit/styling/render-coverage.test.ts" line="244" assertions="6" />
        <testcase name="handles text with embedded newlines and styles" classname="edge cases and error handling &amp;gt; Styling Render Module" time="0.000033" file="__tests__/unit/styling/render-coverage.test.ts" line="264" assertions="3" />
        <testcase name="preserves exact character count" classname="edge cases and error handling &amp;gt; Styling Render Module" time="0.00006" file="__tests__/unit/styling/render-coverage.test.ts" line="272" assertions="1" />
        <testcase name="handles zero-width characters" classname="edge cases and error handling &amp;gt; Styling Render Module" time="0.000028" file="__tests__/unit/styling/render-coverage.test.ts" line="280" assertions="3" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/styling/gradients.test.ts" file="__tests__/unit/styling/gradients.test.ts" tests="79" assertions="183" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Gradients" file="__tests__/unit/styling/gradients.test.ts" line="30" tests="79" assertions="183" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="GradientConfig and Types" file="__tests__/unit/styling/gradients.test.ts" line="31" tests="2" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates valid gradient config" classname="GradientConfig and Types &amp;gt; Gradients" time="0.000032" file="__tests__/unit/styling/gradients.test.ts" line="32" assertions="3" />
        <testcase name="validates gradient stop structure" classname="GradientConfig and Types &amp;gt; Gradients" time="0.000019" file="__tests__/unit/styling/gradients.test.ts" line="47" assertions="2" />
      </testsuite>
      <testsuite name="textGradient" file="__tests__/unit/styling/gradients.test.ts" line="58" tests="6" assertions="11" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates text gradient with simple text" classname="textGradient &amp;gt; Gradients" time="0.00039" file="__tests__/unit/styling/gradients.test.ts" line="59" assertions="3" />
        <testcase name="handles empty text" classname="textGradient &amp;gt; Gradients" time="0.000048" file="__tests__/unit/styling/gradients.test.ts" line="78" assertions="1" />
        <testcase name="handles single character" classname="textGradient &amp;gt; Gradients" time="0.000018" file="__tests__/unit/styling/gradients.test.ts" line="88" assertions="1" />
        <testcase name="preserves spaces when requested" classname="textGradient &amp;gt; Gradients" time="0.000042" file="__tests__/unit/styling/gradients.test.ts" line="98" assertions="1" />
        <testcase name="skips spaces when not preserving" classname="textGradient &amp;gt; Gradients" time="0.000027" file="__tests__/unit/styling/gradients.test.ts" line="109" assertions="1" />
        <testcase name="handles different gradient directions" classname="textGradient &amp;gt; Gradients" time="0.000091" file="__tests__/unit/styling/gradients.test.ts" line="120" assertions="4" />
      </testsuite>
      <testsuite name="backgroundGradient" file="__tests__/unit/styling/gradients.test.ts" line="135" tests="5" assertions="17" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates background gradient pattern" classname="backgroundGradient &amp;gt; Gradients" time="0.000066" file="__tests__/unit/styling/gradients.test.ts" line="136" assertions="3" />
        <testcase name="uses custom character" classname="backgroundGradient &amp;gt; Gradients" time="0.000021" file="__tests__/unit/styling/gradients.test.ts" line="149" assertions="3" />
        <testcase name="handles zero dimensions" classname="backgroundGradient &amp;gt; Gradients" time="0.000013" file="__tests__/unit/styling/gradients.test.ts" line="163" assertions="1" />
        <testcase name="handles single pixel" classname="backgroundGradient &amp;gt; Gradients" time="0.000015" file="__tests__/unit/styling/gradients.test.ts" line="174" assertions="2" />
        <testcase name="handles different gradient directions" classname="backgroundGradient &amp;gt; Gradients" time="0.000034" file="__tests__/unit/styling/gradients.test.ts" line="186" assertions="8" />
      </testsuite>
      <testsuite name="borderGradient" file="__tests__/unit/styling/gradients.test.ts" line="203" tests="3" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="applies gradient to border characters" classname="borderGradient &amp;gt; Gradients" time="0.000068" file="__tests__/unit/styling/gradients.test.ts" line="204" assertions="2" />
        <testcase name="handles empty border string" classname="borderGradient &amp;gt; Gradients" time="0.000009" file="__tests__/unit/styling/gradients.test.ts" line="213" assertions="1" />
        <testcase name="handles single character" classname="borderGradient &amp;gt; Gradients" time="0.000014" file="__tests__/unit/styling/gradients.test.ts" line="218" assertions="1" />
      </testsuite>
      <testsuite name="Preset Gradients" file="__tests__/unit/styling/gradients.test.ts" line="224" tests="9" assertions="26" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates rainbow gradient" classname="Preset Gradients &amp;gt; Gradients" time="0.000018" file="__tests__/unit/styling/gradients.test.ts" line="225" assertions="4" />
        <testcase name="creates rainbow gradient with custom direction" classname="Preset Gradients &amp;gt; Gradients" time="0.000005" file="__tests__/unit/styling/gradients.test.ts" line="233" assertions="1" />
        <testcase name="creates sunset gradient" classname="Preset Gradients &amp;gt; Gradients" time="0.000023" file="__tests__/unit/styling/gradients.test.ts" line="238" assertions="3" />
        <testcase name="creates ocean gradient" classname="Preset Gradients &amp;gt; Gradients" time="0.000019" file="__tests__/unit/styling/gradients.test.ts" line="245" assertions="3" />
        <testcase name="creates forest gradient" classname="Preset Gradients &amp;gt; Gradients" time="0.000022" file="__tests__/unit/styling/gradients.test.ts" line="252" assertions="3" />
        <testcase name="creates fire gradient" classname="Preset Gradients &amp;gt; Gradients" time="0.000024" file="__tests__/unit/styling/gradients.test.ts" line="259" assertions="3" />
        <testcase name="creates pastel gradient" classname="Preset Gradients &amp;gt; Gradients" time="0.000026" file="__tests__/unit/styling/gradients.test.ts" line="266" assertions="3" />
        <testcase name="creates monochrome gradient" classname="Preset Gradients &amp;gt; Gradients" time="0.000037" file="__tests__/unit/styling/gradients.test.ts" line="273" assertions="5" />
        <testcase name="creates monochrome gradient with custom direction" classname="Preset Gradients &amp;gt; Gradients" time="0.000016" file="__tests__/unit/styling/gradients.test.ts" line="282" assertions="1" />
      </testsuite>
      <testsuite name="createGradient" file="__tests__/unit/styling/gradients.test.ts" line="288" tests="4" assertions="13" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates gradient from color array" classname="createGradient &amp;gt; Gradients" time="0.000057" file="__tests__/unit/styling/gradients.test.ts" line="289" assertions="6" />
        <testcase name="handles empty color array" classname="createGradient &amp;gt; Gradients" time="0.000009" file="__tests__/unit/styling/gradients.test.ts" line="301" assertions="2" />
        <testcase name="handles single color" classname="createGradient &amp;gt; Gradients" time="0.00002" file="__tests__/unit/styling/gradients.test.ts" line="307" assertions="3" />
        <testcase name="accepts custom direction and interpolation" classname="createGradient &amp;gt; Gradients" time="0" file="__tests__/unit/styling/gradients.test.ts" line="314" assertions="2" />
      </testsuite>
      <testsuite name="Gradient Utilities" file="__tests__/unit/styling/gradients.test.ts" line="321" tests="4" assertions="13" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="reverses gradient" classname="Gradient Utilities &amp;gt; Gradients" time="0.000055" file="__tests__/unit/styling/gradients.test.ts" line="332" assertions="4" />
        <testcase name="shifts gradient" classname="Gradient Utilities &amp;gt; Gradients" time="0.000034" file="__tests__/unit/styling/gradients.test.ts" line="340" assertions="3" />
        <testcase name="shifts gradient with negative offset" classname="Gradient Utilities &amp;gt; Gradients" time="0.000012" file="__tests__/unit/styling/gradients.test.ts" line="347" assertions="3" />
        <testcase name="scales gradient" classname="Gradient Utilities &amp;gt; Gradients" time="0.000035" file="__tests__/unit/styling/gradients.test.ts" line="354" assertions="3" />
      </testsuite>
      <testsuite name="Animation Helpers" file="__tests__/unit/styling/gradients.test.ts" line="362" tests="4" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates animated gradient" classname="Animation Helpers &amp;gt; Gradients" time="0.000029" file="__tests__/unit/styling/gradients.test.ts" line="372" assertions="2" />
        <testcase name="creates animated gradient with custom speed" classname="Animation Helpers &amp;gt; Gradients" time="0.000014" file="__tests__/unit/styling/gradients.test.ts" line="379" assertions="1" />
        <testcase name="creates pulsing gradient" classname="Animation Helpers &amp;gt; Gradients" time="0.000063" file="__tests__/unit/styling/gradients.test.ts" line="387" assertions="3" />
        <testcase name="creates pulsing gradient with custom intensity" classname="Animation Helpers &amp;gt; Gradients" time="0.000023" file="__tests__/unit/styling/gradients.test.ts" line="395" assertions="1" />
      </testsuite>
      <testsuite name="Color Interpolation" file="__tests__/unit/styling/gradients.test.ts" line="407" tests="4" assertions="9" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="interpolates between gradient stops" classname="Color Interpolation &amp;gt; Gradients" time="0.000031" file="__tests__/unit/styling/gradients.test.ts" line="408" assertions="3" />
        <testcase name="handles different interpolation types" classname="Color Interpolation &amp;gt; Gradients" time="0.000084" file="__tests__/unit/styling/gradients.test.ts" line="425" assertions="4" />
        <testcase name="handles single stop gradient" classname="Color Interpolation &amp;gt; Gradients" time="0.000019" file="__tests__/unit/styling/gradients.test.ts" line="443" assertions="1" />
        <testcase name="handles unsorted stops" classname="Color Interpolation &amp;gt; Gradients" time="0.000042" file="__tests__/unit/styling/gradients.test.ts" line="457" assertions="1" />
      </testsuite>
      <testsuite name="Edge Cases" file="__tests__/unit/styling/gradients.test.ts" line="473" tests="4" assertions="5" failures="0" skipped="0" time="0.002" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles extreme position values" classname="Edge Cases &amp;gt; Gradients" time="0.000026" file="__tests__/unit/styling/gradients.test.ts" line="474" assertions="1" />
        <testcase name="handles duplicate positions" classname="Edge Cases &amp;gt; Gradients" time="0.000018" file="__tests__/unit/styling/gradients.test.ts" line="488" assertions="1" />
        <testcase name="handles very long text" classname="Edge Cases &amp;gt; Gradients" time="0.002114" file="__tests__/unit/styling/gradients.test.ts" line="503" assertions="1" />
        <testcase name="handles large background dimensions" classname="Edge Cases &amp;gt; Gradients" time="0.000483" file="__tests__/unit/styling/gradients.test.ts" line="511" assertions="2" />
      </testsuite>
      <testsuite name="Performance" file="__tests__/unit/styling/gradients.test.ts" line="524" tests="1" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles large gradients efficiently" classname="Performance &amp;gt; Gradients" time="0.000152" file="__tests__/unit/styling/gradients.test.ts" line="525" assertions="2" />
      </testsuite>
      <testsuite name="Color Space Conversion" file="__tests__/unit/styling/gradients.test.ts" line="549" tests="12" assertions="25" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="converts RGB colors correctly" classname="Color Space Conversion &amp;gt; Gradients" time="0.00003" file="__tests__/unit/styling/gradients.test.ts" line="550" assertions="2" />
        <testcase name="converts ANSI colors correctly" classname="Color Space Conversion &amp;gt; Gradients" time="0.000036" file="__tests__/unit/styling/gradients.test.ts" line="566" assertions="2" />
        <testcase name="converts ANSI colors with unknown code" classname="Color Space Conversion &amp;gt; Gradients" time="0.000023" file="__tests__/unit/styling/gradients.test.ts" line="582" assertions="2" />
        <testcase name="converts Hex colors correctly" classname="Color Space Conversion &amp;gt; Gradients" time="0.000033" file="__tests__/unit/styling/gradients.test.ts" line="598" assertions="2" />
        <testcase name="converts Hex colors without hash" classname="Color Space Conversion &amp;gt; Gradients" time="0.000034" file="__tests__/unit/styling/gradients.test.ts" line="614" assertions="2" />
        <testcase name="converts ANSI256 colors in standard range" classname="Color Space Conversion &amp;gt; Gradients" time="0.00003" file="__tests__/unit/styling/gradients.test.ts" line="630" assertions="2" />
        <testcase name="converts ANSI256 colors in cube range" classname="Color Space Conversion &amp;gt; Gradients" time="0.000026" file="__tests__/unit/styling/gradients.test.ts" line="646" assertions="2" />
        <testcase name="converts ANSI256 colors in grayscale range" classname="Color Space Conversion &amp;gt; Gradients" time="0.000042" file="__tests__/unit/styling/gradients.test.ts" line="662" assertions="2" />
        <testcase name="converts NoColor type" classname="Color Space Conversion &amp;gt; Gradients" time="0.000023" file="__tests__/unit/styling/gradients.test.ts" line="678" assertions="2" />
        <testcase name="interpolates with NoColor producing correct RGB values" classname="Color Space Conversion &amp;gt; Gradients" time="0.000106" file="__tests__/unit/styling/gradients.test.ts" line="694" assertions="3" />
        <testcase name="converts Adaptive colors" classname="Color Space Conversion &amp;gt; Gradients" time="0.000078" file="__tests__/unit/styling/gradients.test.ts" line="713" assertions="2" />
        <testcase name="handles invalid color type with default" classname="Color Space Conversion &amp;gt; Gradients" time="0.000018" file="__tests__/unit/styling/gradients.test.ts" line="729" assertions="2" />
      </testsuite>
      <testsuite name="Color Interpolation Algorithms" file="__tests__/unit/styling/gradients.test.ts" line="747" tests="6" assertions="13" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="interpolates RGB colors correctly" classname="Color Interpolation Algorithms &amp;gt; Gradients" time="0.000031" file="__tests__/unit/styling/gradients.test.ts" line="748" assertions="3" />
        <testcase name="applies linear interpolation correctly" classname="Color Interpolation Algorithms &amp;gt; Gradients" time="0.000032" file="__tests__/unit/styling/gradients.test.ts" line="766" assertions="2" />
        <testcase name="applies ease-in interpolation correctly" classname="Color Interpolation Algorithms &amp;gt; Gradients" time="0.000023" file="__tests__/unit/styling/gradients.test.ts" line="781" assertions="2" />
        <testcase name="applies ease-out interpolation correctly" classname="Color Interpolation Algorithms &amp;gt; Gradients" time="0.000033" file="__tests__/unit/styling/gradients.test.ts" line="796" assertions="2" />
        <testcase name="applies ease-in-out interpolation correctly" classname="Color Interpolation Algorithms &amp;gt; Gradients" time="0.000037" file="__tests__/unit/styling/gradients.test.ts" line="811" assertions="2" />
        <testcase name="handles invalid interpolation type" classname="Color Interpolation Algorithms &amp;gt; Gradients" time="0.000026" file="__tests__/unit/styling/gradients.test.ts" line="826" assertions="2" />
      </testsuite>
      <testsuite name="Gradient Color Calculation Edge Cases" file="__tests__/unit/styling/gradients.test.ts" line="842" tests="5" assertions="11" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles empty stops array" classname="Gradient Color Calculation Edge Cases &amp;gt; Gradients" time="0.000037" file="__tests__/unit/styling/gradients.test.ts" line="843" assertions="2" />
        <testcase name="handles position exactly at first stop" classname="Gradient Color Calculation Edge Cases &amp;gt; Gradients" time="0.000018" file="__tests__/unit/styling/gradients.test.ts" line="856" assertions="2" />
        <testcase name="handles position exactly at last stop" classname="Gradient Color Calculation Edge Cases &amp;gt; Gradients" time="0.00003" file="__tests__/unit/styling/gradients.test.ts" line="871" assertions="3" />
        <testcase name="handles multiple stops with same position" classname="Gradient Color Calculation Edge Cases &amp;gt; Gradients" time="0.00004" file="__tests__/unit/styling/gradients.test.ts" line="887" assertions="2" />
        <testcase name="handles stops in reverse order" classname="Gradient Color Calculation Edge Cases &amp;gt; Gradients" time="0.000035" file="__tests__/unit/styling/gradients.test.ts" line="904" assertions="2" />
      </testsuite>
      <testsuite name="Complex Color Interpolation" file="__tests__/unit/styling/gradients.test.ts" line="921" tests="3" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="interpolates between different color formats" classname="Complex Color Interpolation &amp;gt; Gradients" time="0.00004" file="__tests__/unit/styling/gradients.test.ts" line="922" assertions="2" />
        <testcase name="handles nested adaptive colors" classname="Complex Color Interpolation &amp;gt; Gradients" time="0.000044" file="__tests__/unit/styling/gradients.test.ts" line="938" assertions="2" />
        <testcase name="handles extreme RGB values" classname="Complex Color Interpolation &amp;gt; Gradients" time="0.00003" file="__tests__/unit/styling/gradients.test.ts" line="957" assertions="2" />
      </testsuite>
      <testsuite name="Advanced Animation Features" file="__tests__/unit/styling/gradients.test.ts" line="975" tests="4" assertions="9" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates smooth animated transitions" classname="Advanced Animation Features &amp;gt; Gradients" time="0.000036" file="__tests__/unit/styling/gradients.test.ts" line="976" assertions="1" />
        <testcase name="handles pulsing with extreme intensities" classname="Advanced Animation Features &amp;gt; Gradients" time="0.000026" file="__tests__/unit/styling/gradients.test.ts" line="987" assertions="2" />
        <testcase name="handles pulsing with negative sine values" classname="Advanced Animation Features &amp;gt; Gradients" time="0.000051" file="__tests__/unit/styling/gradients.test.ts" line="996" assertions="2" />
        <testcase name="handles color overflow in pulsing" classname="Advanced Animation Features &amp;gt; Gradients" time="0.000035" file="__tests__/unit/styling/gradients.test.ts" line="1004" assertions="4" />
      </testsuite>
      <testsuite name="Performance and Memory" file="__tests__/unit/styling/gradients.test.ts" line="1026" tests="3" assertions="7" failures="0" skipped="0" time="0.031" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles very large text efficiently" classname="Performance and Memory &amp;gt; Gradients" time="0.011258" file="__tests__/unit/styling/gradients.test.ts" line="1027" assertions="2" />
        <testcase name="handles extreme background dimensions" classname="Performance and Memory &amp;gt; Gradients" time="0.019562" file="__tests__/unit/styling/gradients.test.ts" line="1039" assertions="3" />
        <testcase name="handles complex gradient with many stops" classname="Performance and Memory &amp;gt; Gradients" time="0.00134" file="__tests__/unit/styling/gradients.test.ts" line="1055" assertions="2" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/styling/style-complete.test.ts" file="__tests__/unit/styling/style-complete.test.ts" tests="62" assertions="131" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Style System" file="__tests__/unit/styling/style-complete.test.ts" line="18" tests="62" assertions="131" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="Style Creation" file="__tests__/unit/styling/style-complete.test.ts" line="19" tests="2" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates empty style" classname="Style Creation &amp;gt; Style System" time="0.000802" file="__tests__/unit/styling/style-complete.test.ts" line="20" assertions="2" />
        <testcase name="creates style from properties" classname="Style Creation &amp;gt; Style System" time="0.000125" file="__tests__/unit/styling/style-complete.test.ts" line="26" assertions="4" />
      </testsuite>
      <testsuite name="Color Methods" file="__tests__/unit/styling/style-complete.test.ts" line="41" tests="2" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="sets foreground color" classname="Color Methods &amp;gt; Style System" time="0.000114" file="__tests__/unit/styling/style-complete.test.ts" line="42" assertions="2" />
        <testcase name="sets background color" classname="Color Methods &amp;gt; Style System" time="0.00004" file="__tests__/unit/styling/style-complete.test.ts" line="48" assertions="2" />
      </testsuite>
      <testsuite name="Border Methods" file="__tests__/unit/styling/style-complete.test.ts" line="55" tests="5" assertions="12" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="sets border with default sides" classname="Border Methods &amp;gt; Style System" time="0.000053" file="__tests__/unit/styling/style-complete.test.ts" line="56" assertions="2" />
        <testcase name="sets border with specific sides" classname="Border Methods &amp;gt; Style System" time="0.000032" file="__tests__/unit/styling/style-complete.test.ts" line="62" assertions="2" />
        <testcase name="sets border sides independently" classname="Border Methods &amp;gt; Style System" time="0.000041" file="__tests__/unit/styling/style-complete.test.ts" line="68" assertions="1" />
        <testcase name="enables/disables individual border sides" classname="Border Methods &amp;gt; Style System" time="0.000113" file="__tests__/unit/styling/style-complete.test.ts" line="73" assertions="5" />
        <testcase name="sets border colors" classname="Border Methods &amp;gt; Style System" time="0.000042" file="__tests__/unit/styling/style-complete.test.ts" line="95" assertions="2" />
      </testsuite>
      <testsuite name="Spacing Methods" file="__tests__/unit/styling/style-complete.test.ts" line="105" tests="12" assertions="18" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testsuite name="padding" file="__tests__/unit/styling/style-complete.test.ts" line="106" tests="6" assertions="9" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="sets all sides with single value" classname="padding &amp;gt; Spacing Methods &amp;gt; Style System" time="0.000091" file="__tests__/unit/styling/style-complete.test.ts" line="107" assertions="1" />
          <testcase name="sets vertical/horizontal with two values" classname="padding &amp;gt; Spacing Methods &amp;gt; Style System" time="0.00002" file="__tests__/unit/styling/style-complete.test.ts" line="112" assertions="1" />
          <testcase name="sets top/horizontal/bottom with three values" classname="padding &amp;gt; Spacing Methods &amp;gt; Style System" time="0.000006" file="__tests__/unit/styling/style-complete.test.ts" line="117" assertions="1" />
          <testcase name="sets all four sides individually" classname="padding &amp;gt; Spacing Methods &amp;gt; Style System" time="0.000034" file="__tests__/unit/styling/style-complete.test.ts" line="122" assertions="1" />
          <testcase name="sets individual padding sides" classname="padding &amp;gt; Spacing Methods &amp;gt; Style System" time="0.000069" file="__tests__/unit/styling/style-complete.test.ts" line="127" assertions="1" />
          <testcase name="sets padding with explicit sides" classname="padding &amp;gt; Spacing Methods &amp;gt; Style System" time="0" file="__tests__/unit/styling/style-complete.test.ts" line="137" assertions="4" />
        </testsuite>
        <testsuite name="margin" file="__tests__/unit/styling/style-complete.test.ts" line="147" tests="6" assertions="9" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
          <testcase name="sets all sides with single value" classname="margin &amp;gt; Spacing Methods &amp;gt; Style System" time="0.000074" file="__tests__/unit/styling/style-complete.test.ts" line="148" assertions="1" />
          <testcase name="sets vertical/horizontal with two values" classname="margin &amp;gt; Spacing Methods &amp;gt; Style System" time="0.000027" file="__tests__/unit/styling/style-complete.test.ts" line="153" assertions="1" />
          <testcase name="sets top/horizontal/bottom with three values" classname="margin &amp;gt; Spacing Methods &amp;gt; Style System" time="0.000007" file="__tests__/unit/styling/style-complete.test.ts" line="158" assertions="1" />
          <testcase name="sets all four sides individually" classname="margin &amp;gt; Spacing Methods &amp;gt; Style System" time="0.000033" file="__tests__/unit/styling/style-complete.test.ts" line="163" assertions="1" />
          <testcase name="sets individual margin sides" classname="margin &amp;gt; Spacing Methods &amp;gt; Style System" time="0.000178" file="__tests__/unit/styling/style-complete.test.ts" line="168" assertions="1" />
          <testcase name="sets margin with explicit sides" classname="margin &amp;gt; Spacing Methods &amp;gt; Style System" time="0.000037" file="__tests__/unit/styling/style-complete.test.ts" line="178" assertions="4" />
        </testsuite>
      </testsuite>
      <testsuite name="Text Decoration Methods" file="__tests__/unit/styling/style-complete.test.ts" line="189" tests="9" assertions="12" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="sets bold" classname="Text Decoration Methods &amp;gt; Style System" time="0.000028" file="__tests__/unit/styling/style-complete.test.ts" line="190" assertions="2" />
        <testcase name="sets italic" classname="Text Decoration Methods &amp;gt; Style System" time="0.000026" file="__tests__/unit/styling/style-complete.test.ts" line="198" assertions="1" />
        <testcase name="sets underline" classname="Text Decoration Methods &amp;gt; Style System" time="0.00001" file="__tests__/unit/styling/style-complete.test.ts" line="203" assertions="1" />
        <testcase name="sets strikethrough" classname="Text Decoration Methods &amp;gt; Style System" time="0.000025" file="__tests__/unit/styling/style-complete.test.ts" line="208" assertions="1" />
        <testcase name="sets inverse/reverse" classname="Text Decoration Methods &amp;gt; Style System" time="0.000011" file="__tests__/unit/styling/style-complete.test.ts" line="213" assertions="2" />
        <testcase name="sets blink" classname="Text Decoration Methods &amp;gt; Style System" time="0.000091" file="__tests__/unit/styling/style-complete.test.ts" line="221" assertions="1" />
        <testcase name="sets faint/dim" classname="Text Decoration Methods &amp;gt; Style System" time="0.000032" file="__tests__/unit/styling/style-complete.test.ts" line="226" assertions="2" />
        <testcase name="sets hidden" classname="Text Decoration Methods &amp;gt; Style System" time="0.000013" file="__tests__/unit/styling/style-complete.test.ts" line="234" assertions="1" />
        <testcase name="sets inline" classname="Text Decoration Methods &amp;gt; Style System" time="0.000039" file="__tests__/unit/styling/style-complete.test.ts" line="239" assertions="1" />
      </testsuite>
      <testsuite name="Dimension Methods" file="__tests__/unit/styling/style-complete.test.ts" line="245" tests="4" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="sets width" classname="Dimension Methods &amp;gt; Style System" time="0.000006" file="__tests__/unit/styling/style-complete.test.ts" line="246" assertions="1" />
        <testcase name="sets height" classname="Dimension Methods &amp;gt; Style System" time="0.000026" file="__tests__/unit/styling/style-complete.test.ts" line="251" assertions="1" />
        <testcase name="sets minimum dimensions" classname="Dimension Methods &amp;gt; Style System" time="0" file="__tests__/unit/styling/style-complete.test.ts" line="256" assertions="2" />
        <testcase name="sets maximum dimensions" classname="Dimension Methods &amp;gt; Style System" time="0.000067" file="__tests__/unit/styling/style-complete.test.ts" line="262" assertions="2" />
      </testsuite>
      <testsuite name="Alignment Methods" file="__tests__/unit/styling/style-complete.test.ts" line="269" tests="4" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="sets horizontal alignment" classname="Alignment Methods &amp;gt; Style System" time="0.000137" file="__tests__/unit/styling/style-complete.test.ts" line="270" assertions="1" />
        <testcase name="sets vertical alignment" classname="Alignment Methods &amp;gt; Style System" time="0.000198" file="__tests__/unit/styling/style-complete.test.ts" line="275" assertions="2" />
        <testcase name="centers content" classname="Alignment Methods &amp;gt; Style System" time="0.000026" file="__tests__/unit/styling/style-complete.test.ts" line="283" assertions="1" />
        <testcase name="middles content" classname="Alignment Methods &amp;gt; Style System" time="0.000012" file="__tests__/unit/styling/style-complete.test.ts" line="288" assertions="1" />
      </testsuite>
      <testsuite name="Transform Methods" file="__tests__/unit/styling/style-complete.test.ts" line="294" tests="5" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="sets text transform" classname="Transform Methods &amp;gt; Style System" time="0.000047" file="__tests__/unit/styling/style-complete.test.ts" line="295" assertions="1" />
        <testcase name="sets uppercase transform" classname="Transform Methods &amp;gt; Style System" time="0.000037" file="__tests__/unit/styling/style-complete.test.ts" line="300" assertions="1" />
        <testcase name="sets lowercase transform" classname="Transform Methods &amp;gt; Style System" time="0.00003" file="__tests__/unit/styling/style-complete.test.ts" line="305" assertions="1" />
        <testcase name="sets capitalize transform" classname="Transform Methods &amp;gt; Style System" time="0.000026" file="__tests__/unit/styling/style-complete.test.ts" line="310" assertions="1" />
        <testcase name="sets text transform with string" classname="Transform Methods &amp;gt; Style System" time="0.000018" file="__tests__/unit/styling/style-complete.test.ts" line="315" assertions="1" />
      </testsuite>
      <testsuite name="Overflow Methods" file="__tests__/unit/styling/style-complete.test.ts" line="321" tests="4" assertions="5" failures="0" skipped="0" time="0.004" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="sets overflow" classname="Overflow Methods &amp;gt; Style System" time="0.00003" file="__tests__/unit/styling/style-complete.test.ts" line="322" assertions="1" />
        <testcase name="sets word break" classname="Overflow Methods &amp;gt; Style System" time="0.004905" file="__tests__/unit/styling/style-complete.test.ts" line="327" assertions="1" />
        <testcase name="enables word wrap" classname="Overflow Methods &amp;gt; Style System" time="0.000098" file="__tests__/unit/styling/style-complete.test.ts" line="332" assertions="2" />
        <testcase name="sets position" classname="Overflow Methods &amp;gt; Style System" time="0.000053" file="__tests__/unit/styling/style-complete.test.ts" line="340" assertions="1" />
      </testsuite>
      <testsuite name="Composition Methods" file="__tests__/unit/styling/style-complete.test.ts" line="347" tests="4" assertions="14" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="inherits from parent style" classname="Composition Methods &amp;gt; Style System" time="0.000136" file="__tests__/unit/styling/style-complete.test.ts" line="348" assertions="4" />
        <testcase name="merges styles" classname="Composition Methods &amp;gt; Style System" time="0.000068" file="__tests__/unit/styling/style-complete.test.ts" line="367" assertions="5" />
        <testcase name="copies style" classname="Composition Methods &amp;gt; Style System" time="0.000033" file="__tests__/unit/styling/style-complete.test.ts" line="388" assertions="3" />
        <testcase name="resets style" classname="Composition Methods &amp;gt; Style System" time="0.000032" file="__tests__/unit/styling/style-complete.test.ts" line="400" assertions="2" />
      </testsuite>
      <testsuite name="Property Access" file="__tests__/unit/styling/style-complete.test.ts" line="411" tests="3" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="checks if property exists" classname="Property Access &amp;gt; Style System" time="0.000015" file="__tests__/unit/styling/style-complete.test.ts" line="412" assertions="2" />
        <testcase name="gets property value" classname="Property Access &amp;gt; Style System" time="0.000014" file="__tests__/unit/styling/style-complete.test.ts" line="419" assertions="3" />
        <testcase name="converts to JSON" classname="Property Access &amp;gt; Style System" time="0.000046" file="__tests__/unit/styling/style-complete.test.ts" line="427" assertions="3" />
      </testsuite>
      <testsuite name="Style Immutability" file="__tests__/unit/styling/style-complete.test.ts" line="439" tests="1" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="maintains immutability" classname="Style Immutability &amp;gt; Style System" time="0.000027" file="__tests__/unit/styling/style-complete.test.ts" line="440" assertions="8" />
      </testsuite>
      <testsuite name="Predefined Styles" file="__tests__/unit/styling/style-complete.test.ts" line="458" tests="4" assertions="9" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="provides base style" classname="Predefined Styles &amp;gt; Style System" time="0.000013" file="__tests__/unit/styling/style-complete.test.ts" line="459" assertions="1" />
        <testcase name="provides text decoration styles" classname="Predefined Styles &amp;gt; Style System" time="0.000024" file="__tests__/unit/styling/style-complete.test.ts" line="463" assertions="5" />
        <testcase name="provides centered style" classname="Predefined Styles &amp;gt; Style System" time="0.000021" file="__tests__/unit/styling/style-complete.test.ts" line="471" assertions="2" />
        <testcase name="provides hidden style" classname="Predefined Styles &amp;gt; Style System" time="0.000022" file="__tests__/unit/styling/style-complete.test.ts" line="476" assertions="1" />
      </testsuite>
      <testsuite name="Complex Scenarios" file="__tests__/unit/styling/style-complete.test.ts" line="481" tests="3" assertions="19" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles deep inheritance chain" classname="Complex Scenarios &amp;gt; Style System" time="0.000063" file="__tests__/unit/styling/style-complete.test.ts" line="482" assertions="4" />
        <testcase name="handles complex border configuration" classname="Complex Scenarios &amp;gt; Style System" time="0.000044" file="__tests__/unit/styling/style-complete.test.ts" line="493" assertions="3" />
        <testcase name="chains multiple style operations" classname="Complex Scenarios &amp;gt; Style System" time="0.000069" file="__tests__/unit/styling/style-complete.test.ts" line="505" assertions="12" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/styling/advanced-comprehensive.test.ts" file="__tests__/unit/styling/advanced-comprehensive.test.ts" tests="63" assertions="297" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Advanced Styling - Comprehensive Coverage" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="32" tests="63" assertions="297" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="Shadow Effects - Additional Edge Cases" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="33" tests="7" assertions="17" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles mixed positive/negative offsets" classname="Shadow Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000062" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="34" assertions="3" />
        <testcase name="handles content with empty lines" classname="Shadow Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000053" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="49" assertions="3" />
        <testcase name="handles single character content" classname="Shadow Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000027" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="64" assertions="2" />
        <testcase name="handles negative x offset larger than content" classname="Shadow Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000019" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="78" assertions="1" />
        <testcase name="handles negative x offset exactly matching content length" classname="Shadow Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.00002" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="91" assertions="2" />
        <testcase name="handles inner shadow with single character" classname="Shadow Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000025" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="105" assertions="2" />
        <testcase name="handles inner shadow with empty lines" classname="Shadow Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000021" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="119" assertions="4" />
      </testsuite>
      <testsuite name="Glow Effects - Additional Edge Cases" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="136" tests="6" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles zero radius glow" classname="Glow Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000047" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="137" assertions="1" />
        <testcase name="handles fractional radius" classname="Glow Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000025" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="149" assertions="1" />
        <testcase name="handles very high intensity" classname="Glow Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000028" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="161" assertions="2" />
        <testcase name="handles zero intensity" classname="Glow Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000023" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="175" assertions="2" />
        <testcase name="handles content with different line lengths" classname="Glow Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000029" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="190" assertions="1" />
        <testcase name="handles content with spaces" classname="Glow Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000022" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="202" assertions="1" />
      </testsuite>
      <testsuite name="Pattern Effects - Additional Edge Cases" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="215" tests="6" assertions="17" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles fractional scale" classname="Pattern Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000042" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="216" assertions="2" />
        <testcase name="handles very large scale" classname="Pattern Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000024" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="229" assertions="2" />
        <testcase name="handles pattern with dimension 1" classname="Pattern Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000015" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="242" assertions="2" />
        <testcase name="applies pattern to content with varying line lengths" classname="Pattern Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000022" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="255" assertions="5" />
        <testcase name="applies pattern to content with only spaces" classname="Pattern Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000021" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="272" assertions="2" />
        <testcase name="applies pattern to mixed content" classname="Pattern Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000032" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="286" assertions="4" />
      </testsuite>
      <testsuite name="Border Styles - Additional Edge Cases" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="303" tests="5" assertions="51" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles gradient border type" classname="Border Styles - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000017" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="304" assertions="3" />
        <testcase name="handles pattern border type" classname="Border Styles - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.00002" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="320" assertions="2" />
        <testcase name="handles very wide border" classname="Border Styles - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000019" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="337" assertions="2" />
        <testcase name="handles border with zero width" classname="Border Styles - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000014" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="349" assertions="2" />
        <testcase name="handles all border types explicitly" classname="Border Styles - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000039" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="361" assertions="42" />
      </testsuite>
      <testsuite name="Layer Effects - Additional Edge Cases" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="383" tests="5" assertions="16" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles color-dodge with zero denominator" classname="Layer Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000031" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="384" assertions="4" />
        <testcase name="handles color-burn with zero denominator" classname="Layer Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000087" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="401" assertions="4" />
        <testcase name="handles extreme RGB values" classname="Layer Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000028" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="418" assertions="6" />
        <testcase name="handles ANSI color with unknown code" classname="Layer Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000031" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="437" assertions="1" />
        <testcase name="handles unknown color type" classname="Layer Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000022" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="449" assertions="1" />
      </testsuite>
      <testsuite name="Animation Helpers - Additional Edge Cases" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="462" tests="6" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles createShake with zero amplitude" classname="Animation Helpers - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000014" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="463" assertions="2" />
        <testcase name="handles createShake with negative amplitude" classname="Animation Helpers - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.00002" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="471" assertions="2" />
        <testcase name="handles createBounce with zero height" classname="Animation Helpers - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000011" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="479" assertions="1" />
        <testcase name="handles createBounce with negative height" classname="Animation Helpers - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000009" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="484" assertions="1" />
        <testcase name="handles createBounce with zero duration" classname="Animation Helpers - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000007" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="489" assertions="1" />
        <testcase name="handles createBounce with very large time" classname="Animation Helpers - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000008" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="494" assertions="1" />
      </testsuite>
      <testsuite name="Text Effects - Additional Edge Cases" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="500" tests="10" assertions="142" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles createTypewriter with zero speed" classname="Text Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000016" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="501" assertions="1" />
        <testcase name="handles createTypewriter with negative speed" classname="Text Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000013" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="508" assertions="1" />
        <testcase name="handles createTypewriter with fractional speed" classname="Text Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000013" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="515" assertions="1" />
        <testcase name="handles createWaveText with zero amplitude" classname="Text Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000031" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="522" assertions="5" />
        <testcase name="handles createWaveText with negative amplitude" classname="Text Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000023" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="532" assertions="9" />
        <testcase name="handles createWaveText with zero frequency" classname="Text Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000021" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="542" assertions="5" />
        <testcase name="handles createRainbowText with zero speed" classname="Text Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000038" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="552" assertions="8" />
        <testcase name="handles createRainbowText with negative speed" classname="Text Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000054" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="562" assertions="9" />
        <testcase name="handles createRainbowText with single character" classname="Text Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000014" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="572" assertions="2" />
        <testcase name="handles createRainbowText with very long text" classname="Text Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000116" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="580" assertions="101" />
      </testsuite>
      <testsuite name="Composite Effects - Additional Edge Cases" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="591" tests="9" assertions="20" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles createNeonEffect with zero time" classname="Composite Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000025" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="592" assertions="2" />
        <testcase name="handles createNeonEffect with negative time" classname="Composite Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000018" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="599" assertions="2" />
        <testcase name="handles createNeonEffect with very large time" classname="Composite Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000018" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="606" assertions="2" />
        <testcase name="handles createMatrixEffect with zero density" classname="Composite Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.00002" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="613" assertions="2" />
        <testcase name="handles createMatrixEffect with density &gt; 1" classname="Composite Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000014" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="620" assertions="1" />
        <testcase name="handles createMatrixEffect with dimension 1" classname="Composite Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000013" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="627" assertions="2" />
        <testcase name="handles createHologramEffect with zero speed" classname="Composite Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000014" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="634" assertions="3" />
        <testcase name="handles createHologramEffect with negative speed" classname="Composite Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000013" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="642" assertions="3" />
        <testcase name="handles createHologramEffect with very large speed" classname="Composite Effects - Additional Edge Cases &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000009" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="650" assertions="3" />
      </testsuite>
      <testsuite name="Stress Tests" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="659" tests="3" assertions="7" failures="0" skipped="0" time="0.002" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles extremely large patterns" classname="Stress Tests &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000319" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="660" assertions="3" />
        <testcase name="handles very complex glow calculation" classname="Stress Tests &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.002489" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="677" assertions="2" />
        <testcase name="handles matrix effect with high density" classname="Stress Tests &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000048" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="693" assertions="2" />
      </testsuite>
      <testsuite name="Integration Tests" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="703" tests="3" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="combines multiple effects" classname="Integration Tests &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000183" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="704" assertions="1" />
        <testcase name="applies pattern then border" classname="Integration Tests &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000044" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="727" assertions="2" />
        <testcase name="chains animation effects" classname="Integration Tests &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000039" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="749" assertions="4" />
      </testsuite>
      <testsuite name="Error Handling" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="763" tests="3" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles invalid pattern type gracefully" classname="Error Handling &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000039" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="764" assertions="2" />
        <testcase name="handles undefined content gracefully" classname="Error Handling &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000031" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="777" assertions="1" />
        <testcase name="handles NaN values in calculations" classname="Error Handling &amp;gt; Advanced Styling - Comprehensive Coverage" time="0.000037" file="__tests__/unit/styling/advanced-comprehensive.test.ts" line="789" assertions="1" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/styling/render.test.ts" file="__tests__/unit/styling/render.test.ts" tests="72" assertions="142" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Style Rendering" file="__tests__/unit/styling/render.test.ts" line="13" tests="72" assertions="142" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="renderStyled" file="__tests__/unit/styling/render.test.ts" line="14" tests="8" assertions="16" failures="0" skipped="0" time="0.001" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="renders plain text without modifications" classname="renderStyled &amp;gt; Style Rendering" time="0.001301" file="__tests__/unit/styling/render.test.ts" line="15" assertions="1" />
        <testcase name="applies bold text decoration" classname="renderStyled &amp;gt; Style Rendering" time="0.000163" file="__tests__/unit/styling/render.test.ts" line="22" assertions="2" />
        <testcase name="applies italic text decoration" classname="renderStyled &amp;gt; Style Rendering" time="0.000087" file="__tests__/unit/styling/render.test.ts" line="30" assertions="2" />
        <testcase name="applies underline text decoration" classname="renderStyled &amp;gt; Style Rendering" time="0.000055" file="__tests__/unit/styling/render.test.ts" line="38" assertions="2" />
        <testcase name="applies faint text decoration" classname="renderStyled &amp;gt; Style Rendering" time="0.000053" file="__tests__/unit/styling/render.test.ts" line="46" assertions="2" />
        <testcase name="applies foreground color" classname="renderStyled &amp;gt; Style Rendering" time="0.000087" file="__tests__/unit/styling/render.test.ts" line="54" assertions="2" />
        <testcase name="applies background color" classname="renderStyled &amp;gt; Style Rendering" time="0.000063" file="__tests__/unit/styling/render.test.ts" line="62" assertions="2" />
        <testcase name="combines multiple decorations" classname="renderStyled &amp;gt; Style Rendering" time="0.000075" file="__tests__/unit/styling/render.test.ts" line="70" assertions="3" />
      </testsuite>
      <testsuite name="renderStyledSync" file="__tests__/unit/styling/render.test.ts" line="86" tests="3" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="renders synchronously" classname="renderStyledSync &amp;gt; Style Rendering" time="0.000037" file="__tests__/unit/styling/render.test.ts" line="87" assertions="2" />
        <testcase name="handles empty text" classname="renderStyledSync &amp;gt; Style Rendering" time="0.000028" file="__tests__/unit/styling/render.test.ts" line="93" assertions="1" />
        <testcase name="handles plain text" classname="renderStyledSync &amp;gt; Style Rendering" time="0.000038" file="__tests__/unit/styling/render.test.ts" line="98" assertions="1" />
      </testsuite>
      <testsuite name="text transformation" file="__tests__/unit/styling/render.test.ts" line="104" tests="6" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="applies uppercase transformation" classname="text transformation &amp;gt; Style Rendering" time="0.00006" file="__tests__/unit/styling/render.test.ts" line="105" assertions="1" />
        <testcase name="applies lowercase transformation" classname="text transformation &amp;gt; Style Rendering" time="0.000038" file="__tests__/unit/styling/render.test.ts" line="112" assertions="1" />
        <testcase name="applies capitalize transformation" classname="text transformation &amp;gt; Style Rendering" time="0.00006" file="__tests__/unit/styling/render.test.ts" line="119" assertions="1" />
        <testcase name="applies custom transformation" classname="text transformation &amp;gt; Style Rendering" time="0.000091" file="__tests__/unit/styling/render.test.ts" line="126" assertions="1" />
        <testcase name="applies no transformation" classname="text transformation &amp;gt; Style Rendering" time="0.000049" file="__tests__/unit/styling/render.test.ts" line="134" assertions="1" />
        <testcase name="applies text transformations through Style properties" classname="text transformation &amp;gt; Style Rendering" time="0.000222" file="__tests__/unit/styling/render.test.ts" line="141" assertions="1" />
      </testsuite>
      <testsuite name="horizontal alignment" file="__tests__/unit/styling/render.test.ts" line="152" tests="6" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="applies left alignment" classname="horizontal alignment &amp;gt; Style Rendering" time="0.000139" file="__tests__/unit/styling/render.test.ts" line="153" assertions="1" />
        <testcase name="applies right alignment" classname="horizontal alignment &amp;gt; Style Rendering" time="0.000044" file="__tests__/unit/styling/render.test.ts" line="160" assertions="1" />
        <testcase name="applies center alignment" classname="horizontal alignment &amp;gt; Style Rendering" time="0.000041" file="__tests__/unit/styling/render.test.ts" line="167" assertions="1" />
        <testcase name="applies justify alignment" classname="horizontal alignment &amp;gt; Style Rendering" time="0.000051" file="__tests__/unit/styling/render.test.ts" line="174" assertions="1" />
        <testcase name="handles justify with single word" classname="horizontal alignment &amp;gt; Style Rendering" time="0.000051" file="__tests__/unit/styling/render.test.ts" line="181" assertions="1" />
        <testcase name="handles text wider than alignment width" classname="horizontal alignment &amp;gt; Style Rendering" time="0.000049" file="__tests__/unit/styling/render.test.ts" line="188" assertions="1" />
      </testsuite>
      <testsuite name="vertical alignment" file="__tests__/unit/styling/render.test.ts" line="196" tests="5" assertions="17" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="applies top alignment" classname="vertical alignment &amp;gt; Style Rendering" time="0.000117" file="__tests__/unit/styling/render.test.ts" line="197" assertions="4" />
        <testcase name="applies bottom alignment" classname="vertical alignment &amp;gt; Style Rendering" time="0.000048" file="__tests__/unit/styling/render.test.ts" line="208" assertions="4" />
        <testcase name="applies middle alignment" classname="vertical alignment &amp;gt; Style Rendering" time="0.000034" file="__tests__/unit/styling/render.test.ts" line="219" assertions="4" />
        <testcase name="handles middle alignment with convenience method" classname="vertical alignment &amp;gt; Style Rendering" time="0.00005" file="__tests__/unit/styling/render.test.ts" line="230" assertions="2" />
        <testcase name="handles content taller than height" classname="vertical alignment &amp;gt; Style Rendering" time="0.000042" file="__tests__/unit/styling/render.test.ts" line="239" assertions="3" />
      </testsuite>
      <testsuite name="padding" file="__tests__/unit/styling/render.test.ts" line="250" tests="2" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="applies padding methods" classname="padding &amp;gt; Style Rendering" time="0.000082" file="__tests__/unit/styling/render.test.ts" line="251" assertions="1" />
        <testcase name="applies specific padding" classname="padding &amp;gt; Style Rendering" time="0.000043" file="__tests__/unit/styling/render.test.ts" line="260" assertions="1" />
      </testsuite>
      <testsuite name="margin" file="__tests__/unit/styling/render.test.ts" line="270" tests="1" assertions="1" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="applies margin methods" classname="margin &amp;gt; Style Rendering" time="0.000051" file="__tests__/unit/styling/render.test.ts" line="271" assertions="1" />
      </testsuite>
      <testsuite name="word wrapping" file="__tests__/unit/styling/render.test.ts" line="281" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="wraps long text to specified width" classname="word wrapping &amp;gt; Style Rendering" time="0.00006" file="__tests__/unit/styling/render.test.ts" line="282" assertions="2" />
        <testcase name="handles single words longer than width" classname="word wrapping &amp;gt; Style Rendering" time="0.000047" file="__tests__/unit/styling/render.test.ts" line="292" assertions="1" />
      </testsuite>
      <testsuite name="color profiles" file="__tests__/unit/styling/render.test.ts" line="302" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="respects color profile setting" classname="color profiles &amp;gt; Style Rendering" time="0.000037" file="__tests__/unit/styling/render.test.ts" line="303" assertions="1" />
        <testcase name="works with true color profile" classname="color profiles &amp;gt; Style Rendering" time="0.000047" file="__tests__/unit/styling/render.test.ts" line="312" assertions="2" />
      </testsuite>
      <testsuite name="additional text decorations" file="__tests__/unit/styling/render.test.ts" line="323" tests="6" assertions="18" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="applies blink decoration" classname="additional text decorations &amp;gt; Style Rendering" time="0.000054" file="__tests__/unit/styling/render.test.ts" line="324" assertions="2" />
        <testcase name="applies inverse decoration" classname="additional text decorations &amp;gt; Style Rendering" time="0.000042" file="__tests__/unit/styling/render.test.ts" line="332" assertions="2" />
        <testcase name="applies strikethrough decoration" classname="additional text decorations &amp;gt; Style Rendering" time="0.000046" file="__tests__/unit/styling/render.test.ts" line="340" assertions="2" />
        <testcase name="applies reverse decoration (alias for inverse)" classname="additional text decorations &amp;gt; Style Rendering" time="0.000032" file="__tests__/unit/styling/render.test.ts" line="348" assertions="2" />
        <testcase name="applies dim decoration (alias for faint)" classname="additional text decorations &amp;gt; Style Rendering" time="0.000035" file="__tests__/unit/styling/render.test.ts" line="356" assertions="2" />
        <testcase name="combines all decorations" classname="additional text decorations &amp;gt; Style Rendering" time="0.00008" file="__tests__/unit/styling/render.test.ts" line="364" assertions="8" />
      </testsuite>
      <testsuite name="color profiles" file="__tests__/unit/styling/render.test.ts" line="388" tests="4" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles NoColor profile" classname="color profiles &amp;gt; Style Rendering" time="0.000045" file="__tests__/unit/styling/render.test.ts" line="389" assertions="1" />
        <testcase name="handles ANSI profile" classname="color profiles &amp;gt; Style Rendering" time="0.000035" file="__tests__/unit/styling/render.test.ts" line="398" assertions="1" />
        <testcase name="handles ANSI256 profile" classname="color profiles &amp;gt; Style Rendering" time="0.000037" file="__tests__/unit/styling/render.test.ts" line="407" assertions="2" />
        <testcase name="handles TrueColor profile" classname="color profiles &amp;gt; Style Rendering" time="0.000037" file="__tests__/unit/styling/render.test.ts" line="417" assertions="2" />
      </testsuite>
      <testsuite name="padding and margin" file="__tests__/unit/styling/render.test.ts" line="428" tests="3" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="applies complex padding" classname="padding and margin &amp;gt; Style Rendering" time="0.000046" file="__tests__/unit/styling/render.test.ts" line="429" assertions="2" />
        <testcase name="applies complex margin" classname="padding and margin &amp;gt; Style Rendering" time="0.000045" file="__tests__/unit/styling/render.test.ts" line="438" assertions="2" />
        <testcase name="handles zero padding" classname="padding and margin &amp;gt; Style Rendering" time="0.000043" file="__tests__/unit/styling/render.test.ts" line="447" assertions="1" />
      </testsuite>
      <testsuite name="word wrapping edge cases" file="__tests__/unit/styling/render.test.ts" line="455" tests="3" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles empty string with wrapping" classname="word wrapping edge cases &amp;gt; Style Rendering" time="0.000026" file="__tests__/unit/styling/render.test.ts" line="456" assertions="1" />
        <testcase name="handles single character with wrapping" classname="word wrapping edge cases &amp;gt; Style Rendering" time="0.000041" file="__tests__/unit/styling/render.test.ts" line="463" assertions="1" />
        <testcase name="handles multiple spaces in text" classname="word wrapping edge cases &amp;gt; Style Rendering" time="0.000038" file="__tests__/unit/styling/render.test.ts" line="470" assertions="1" />
      </testsuite>
      <testsuite name="edge cases" file="__tests__/unit/styling/render.test.ts" line="478" tests="7" assertions="9" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles empty text" classname="edge cases &amp;gt; Style Rendering" time="0.000034" file="__tests__/unit/styling/render.test.ts" line="479" assertions="1" />
        <testcase name="handles newlines in text" classname="edge cases &amp;gt; Style Rendering" time="0.000038" file="__tests__/unit/styling/render.test.ts" line="486" assertions="1" />
        <testcase name="handles text with existing ANSI codes" classname="edge cases &amp;gt; Style Rendering" time="0.00004" file="__tests__/unit/styling/render.test.ts" line="493" assertions="2" />
        <testcase name="handles very wide text" classname="edge cases &amp;gt; Style Rendering" time="0.000043" file="__tests__/unit/styling/render.test.ts" line="502" assertions="1" />
        <testcase name="handles zero dimensions" classname="edge cases &amp;gt; Style Rendering" time="0.000038" file="__tests__/unit/styling/render.test.ts" line="510" assertions="1" />
        <testcase name="handles null/undefined style properties" classname="edge cases &amp;gt; Style Rendering" time="0.000032" file="__tests__/unit/styling/render.test.ts" line="517" assertions="1" />
        <testcase name="handles inline styles" classname="edge cases &amp;gt; Style Rendering" time="0.000049" file="__tests__/unit/styling/render.test.ts" line="524" assertions="2" />
      </testsuite>
      <testsuite name="complex styles" file="__tests__/unit/styling/render.test.ts" line="533" tests="1" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="combines all style features" classname="complex styles &amp;gt; Style Rendering" time="0.00008" file="__tests__/unit/styling/render.test.ts" line="534" assertions="3" />
      </testsuite>
      <testsuite name="border rendering" file="__tests__/unit/styling/render.test.ts" line="556" tests="7" assertions="24" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="applies normal border" classname="border rendering &amp;gt; Style Rendering" time="0.000018" file="__tests__/unit/styling/render.test.ts" line="557" assertions="5" />
        <testcase name="applies rounded border" classname="border rendering &amp;gt; Style Rendering" time="0.000113" file="__tests__/unit/styling/render.test.ts" line="568" assertions="5" />
        <testcase name="applies thick border" classname="border rendering &amp;gt; Style Rendering" time="0.00005" file="__tests__/unit/styling/render.test.ts" line="579" assertions="5" />
        <testcase name="applies double border" classname="border rendering &amp;gt; Style Rendering" time="0.000043" file="__tests__/unit/styling/render.test.ts" line="590" assertions="5" />
        <testcase name="applies partial borders" classname="border rendering &amp;gt; Style Rendering" time="0.000047" file="__tests__/unit/styling/render.test.ts" line="601" assertions="2" />
        <testcase name="handles no border" classname="border rendering &amp;gt; Style Rendering" time="0.000048" file="__tests__/unit/styling/render.test.ts" line="609" assertions="1" />
        <testcase name="handles BorderSide.None" classname="border rendering &amp;gt; Style Rendering" time="0.000038" file="__tests__/unit/styling/render.test.ts" line="616" assertions="1" />
      </testsuite>
      <testsuite name="style composition and inheritance" file="__tests__/unit/styling/render.test.ts" line="624" tests="6" assertions="16" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="combines padding and borders" classname="style composition and inheritance &amp;gt; Style Rendering" time="0.000067" file="__tests__/unit/styling/render.test.ts" line="625" assertions="3" />
        <testcase name="combines margin and borders" classname="style composition and inheritance &amp;gt; Style Rendering" time="0.000048" file="__tests__/unit/styling/render.test.ts" line="636" assertions="3" />
        <testcase name="combines styling with dimensions" classname="style composition and inheritance &amp;gt; Style Rendering" time="0.000066" file="__tests__/unit/styling/render.test.ts" line="647" assertions="3" />
        <testcase name="handles chained style methods" classname="style composition and inheritance &amp;gt; Style Rendering" time="0.000086" file="__tests__/unit/styling/render.test.ts" line="664" assertions="4" />
        <testcase name="handles maximum width constraints" classname="style composition and inheritance &amp;gt; Style Rendering" time="0.000051" file="__tests__/unit/styling/render.test.ts" line="684" assertions="2" />
        <testcase name="handles options override style settings" classname="style composition and inheritance &amp;gt; Style Rendering" time="0.000036" file="__tests__/unit/styling/render.test.ts" line="694" assertions="1" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/jsx/jsx-runtime.test.ts" file="__tests__/unit/jsx/jsx-runtime.test.ts" tests="52" assertions="116" failures="1" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="JSX Runtime" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="10" tests="52" assertions="116" failures="1" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="jsx function" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="11" tests="13" assertions="23" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates text element" classname="jsx function &amp;gt; JSX Runtime" time="0.000061" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="12" assertions="2" />
        <testcase name="creates span element" classname="jsx function &amp;gt; JSX Runtime" time="0.000022" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="18" assertions="2" />
        <testcase name="creates styled elements" classname="jsx function &amp;gt; JSX Runtime" time="0.000042" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="24" assertions="3" />
        <testcase name="creates color elements" classname="jsx function &amp;gt; JSX Runtime" time="0.00004" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="34" assertions="3" />
        <testcase name="creates semantic elements" classname="jsx function &amp;gt; JSX Runtime" time="0.000045" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="44" assertions="4" />
        <testcase name="creates layout elements" classname="jsx function &amp;gt; JSX Runtime" time="0.000109" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="56" assertions="2" />
        <testcase name="creates panel element" classname="jsx function &amp;gt; JSX Runtime" time="0.00019" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="75" assertions="1" />
        <testcase name="handles string children" classname="jsx function &amp;gt; JSX Runtime" time="0.000022" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="84" assertions="1" />
        <testcase name="handles array children" classname="jsx function &amp;gt; JSX Runtime" time="0.000035" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="89" assertions="1" />
        <testcase name="handles nested elements" classname="jsx function &amp;gt; JSX Runtime" time="0.000036" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="101" assertions="1" />
        <testcase name="handles empty children" classname="jsx function &amp;gt; JSX Runtime" time="0.000038" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="118" assertions="1" />
        <testcase name="handles null children" classname="jsx function &amp;gt; JSX Runtime" time="0.000013" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="123" assertions="1" />
        <testcase name="handles undefined children" classname="jsx function &amp;gt; JSX Runtime" time="0.000013" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="128" assertions="1" />
      </testsuite>
      <testsuite name="jsxs function" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="134" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates elements with multiple children" classname="jsxs function &amp;gt; JSX Runtime" time="0.000037" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="135" assertions="1" />
        <testcase name="behaves same as jsx for single child" classname="jsxs function &amp;gt; JSX Runtime" time="0.000023" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="147" assertions="2" />
      </testsuite>
      <testsuite name="Fragment" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="157" tests="2" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates fragment element" classname="Fragment &amp;gt; JSX Runtime" time="0.000026" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="158" assertions="1" />
        <testcase name="handles empty fragment" classname="Fragment &amp;gt; JSX Runtime" time="0.000017" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="169" assertions="1" />
      </testsuite>
      <testsuite name="element rendering" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="175" tests="7" assertions="17" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="renders text elements" classname="element rendering &amp;gt; JSX Runtime" time="0.000116" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="176" assertions="1" />
        <testcase name="renders styled text" classname="element rendering &amp;gt; JSX Runtime" time="0.000096" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="182" assertions="2" />
        <testcase name="renders color text" classname="element rendering &amp;gt; JSX Runtime" time="0.000055" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="189" assertions="2" />
        <testcase name="renders vstack" classname="element rendering &amp;gt; JSX Runtime" time="0.000104" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="196" assertions="3" />
        <testcase name="renders hstack" classname="element rendering &amp;gt; JSX Runtime" time="0.00009" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="210" assertions="3" />
        <testcase name="renders nested structures" classname="element rendering &amp;gt; JSX Runtime" time="0.000138" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="224" assertions="4" />
        <testcase name="renders panel with title" classname="element rendering &amp;gt; JSX Runtime" time="0.000139" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="246" assertions="2" />
      </testsuite>
      <testsuite name="error handling" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="258" tests="2" assertions="3" failures="1" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles unknown element types gracefully" classname="error handling &amp;gt; JSX Runtime" time="0.000206" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="259" assertions="2">
          <failure type="AssertionError" />
        </testcase>
        <testcase name="handles invalid props" classname="error handling &amp;gt; JSX Runtime" time="0.000041" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="272" assertions="1" />
      </testsuite>
      <testsuite name="props and styling" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="279" tests="5" assertions="12" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles style props on text elements" classname="props and styling &amp;gt; JSX Runtime" time="0.000089" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="280" assertions="3" />
        <testcase name="handles color prop on text elements" classname="props and styling &amp;gt; JSX Runtime" time="0.000087" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="293" assertions="2" />
        <testcase name="handles boolean style props" classname="props and styling &amp;gt; JSX Runtime" time="0.000083" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="304" assertions="5" />
        <testcase name="handles number children" classname="props and styling &amp;gt; JSX Runtime" time="0.00005" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="321" assertions="1" />
        <testcase name="handles boolean children" classname="props and styling &amp;gt; JSX Runtime" time="0.000024" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="327" assertions="1" />
      </testsuite>
      <testsuite name="additional styled elements" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="334" tests="3" assertions="22" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates faint element" classname="additional styled elements &amp;gt; JSX Runtime" time="0.00016" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="335" assertions="2" />
        <testcase name="creates all color elements" classname="additional styled elements &amp;gt; JSX Runtime" time="0.0003" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="342" assertions="8" />
        <testcase name="creates all semantic elements with correct colors" classname="additional styled elements &amp;gt; JSX Runtime" time="0.000223" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="352" assertions="12" />
      </testsuite>
      <testsuite name="layout elements edge cases" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="370" tests="5" assertions="10" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles div element (alias for vstack)" classname="layout elements edge cases &amp;gt; JSX Runtime" time="0.000105" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="371" assertions="1" />
        <testcase name="handles empty vstack" classname="layout elements edge cases &amp;gt; JSX Runtime" time="0.000043" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="383" assertions="1" />
        <testcase name="handles empty hstack" classname="layout elements edge cases &amp;gt; JSX Runtime" time="0.000035" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="389" assertions="1" />
        <testcase name="normalizes falsy children" classname="layout elements edge cases &amp;gt; JSX Runtime" time="0.000082" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="395" assertions="3" />
        <testcase name="handles nested arrays in children" classname="layout elements edge cases &amp;gt; JSX Runtime" time="0.000088" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="412" assertions="4" />
      </testsuite>
      <testsuite name="component elements" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="432" tests="2" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates button with variants" classname="component elements &amp;gt; JSX Runtime" time="0.000423" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="433" assertions="4" />
        <testcase name="creates default button" classname="component elements &amp;gt; JSX Runtime" time="0.000028" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="446" assertions="1" />
      </testsuite>
      <testsuite name="function components" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="454" tests="2" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="calls function components with props" classname="function components &amp;gt; JSX Runtime" time="0.000034" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="455" assertions="1" />
        <testcase name="handles function components with no props" classname="function components &amp;gt; JSX Runtime" time="0.000026" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="464" assertions="1" />
      </testsuite>
      <testsuite name="bind props processing" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="474" tests="2" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles bind props with mock runes" classname="bind props processing &amp;gt; JSX Runtime" time="0.000038" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="475" assertions="1" />
        <testcase name="handles regular bind props" classname="bind props processing &amp;gt; JSX Runtime" time="0.00002" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="485" assertions="1" />
      </testsuite>
      <testsuite name="createElement (classic JSX)" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="494" tests="3" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates elements with createElement" classname="createElement (classic JSX) &amp;gt; JSX Runtime" time="0.000076" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="495" assertions="1" />
        <testcase name="handles multiple children in createElement" classname="createElement (classic JSX) &amp;gt; JSX Runtime" time="0.000073" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="501" assertions="2" />
        <testcase name="handles props in createElement" classname="createElement (classic JSX) &amp;gt; JSX Runtime" time="0.000052" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="514" assertions="2" />
      </testsuite>
      <testsuite name="Fragment edge cases" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="522" tests="3" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="Fragment with null children" classname="Fragment edge cases &amp;gt; JSX Runtime" time="0.000035" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="523" assertions="1" />
        <testcase name="Fragment with undefined children" classname="Fragment edge cases &amp;gt; JSX Runtime" time="0.00003" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="529" assertions="1" />
        <testcase name="Fragment with mixed children" classname="Fragment edge cases &amp;gt; JSX Runtime" time="0.000057" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="535" assertions="4" />
      </testsuite>
      <testsuite name="TypeScript support" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="554" tests="1" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="element types are properly typed" classname="TypeScript support &amp;gt; JSX Runtime" time="0.000055" file="__tests__/unit/jsx/jsx-runtime.test.ts" line="555" assertions="4" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/jsx/tuix-integration.test.ts" file="__tests__/unit/jsx/tuix-integration.test.ts" tests="3" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="TUIX Integration" file="__tests__/unit/jsx/tuix-integration.test.ts" line="7" tests="3" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testcase name="imports work with .tuix extension" classname="TUIX Integration" time="0.000069" file="__tests__/unit/jsx/tuix-integration.test.ts" line="8" assertions="1" />
      <testcase name="JSX runtime is properly configured" classname="TUIX Integration" time="0.000569" file="__tests__/unit/jsx/tuix-integration.test.ts" line="16" assertions="1" />
      <testcase name="tuix types are available" classname="TUIX Integration" time="0.000029" file="__tests__/unit/jsx/tuix-integration.test.ts" line="22" assertions="1" />
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/services/input-impl.test.ts" file="__tests__/unit/services/input-impl.test.ts" tests="18" assertions="35" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Input Service Implementation" file="__tests__/unit/services/input-impl.test.ts" line="11" tests="18" assertions="35" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="lifecycle" file="__tests__/unit/services/input-impl.test.ts" line="52" tests="2" assertions="5" failures="0" skipped="0" time="0.002" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="starts and stops input service" classname="lifecycle &amp;gt; Input Service Implementation" time="0.002607" file="__tests__/unit/services/input-impl.test.ts" line="53" assertions="4" />
        <testcase name="handles non-TTY stdin gracefully" classname="lifecycle &amp;gt; Input Service Implementation" time="0.00071" file="__tests__/unit/services/input-impl.test.ts" line="72" assertions="1" />
      </testsuite>
      <testsuite name="key events" file="__tests__/unit/services/input-impl.test.ts" line="90" tests="4" assertions="14" failures="0" skipped="0" time="0.011" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="parses simple character keys" classname="key events &amp;gt; Input Service Implementation" time="0.005687" file="__tests__/unit/services/input-impl.test.ts" line="91" assertions="4" />
        <testcase name="parses special keys" classname="key events &amp;gt; Input Service Implementation" time="0.002391" file="__tests__/unit/services/input-impl.test.ts" line="116" assertions="4" />
        <testcase name="parses control key combinations" classname="key events &amp;gt; Input Service Implementation" time="0.002423" file="__tests__/unit/services/input-impl.test.ts" line="143" assertions="3" />
        <testcase name="handles multi-byte UTF-8 characters" classname="key events &amp;gt; Input Service Implementation" time="0.002637" file="__tests__/unit/services/input-impl.test.ts" line="167" assertions="3" />
      </testsuite>
      <testsuite name="mouse events" file="__tests__/unit/services/input-impl.test.ts" line="192" tests="4" assertions="5" failures="0" skipped="0" time="0.011" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="parses mouse press events" classname="mouse events &amp;gt; Input Service Implementation" time="0.005085" file="__tests__/unit/services/input-impl.test.ts" line="193" assertions="1" />
        <testcase name="parses mouse release events" classname="mouse events &amp;gt; Input Service Implementation" time="0.002404" file="__tests__/unit/services/input-impl.test.ts" line="224" assertions="1" />
        <testcase name="parses mouse wheel events" classname="mouse events &amp;gt; Input Service Implementation" time="0.002705" file="__tests__/unit/services/input-impl.test.ts" line="250" assertions="2" />
        <testcase name="parses mouse events with modifiers" classname="mouse events &amp;gt; Input Service Implementation" time="0.002329" file="__tests__/unit/services/input-impl.test.ts" line="281" assertions="1" />
      </testsuite>
      <testsuite name="window resize" file="__tests__/unit/services/input-impl.test.ts" line="309" tests="2" assertions="2" failures="0" skipped="0" time="0.005" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="emits resize events" classname="window resize &amp;gt; Input Service Implementation" time="0.005185" file="__tests__/unit/services/input-impl.test.ts" line="310" assertions="1" />
        <testcase name="handles missing stdout gracefully" classname="window resize &amp;gt; Input Service Implementation" time="0.000471" file="__tests__/unit/services/input-impl.test.ts" line="361" assertions="1" />
      </testsuite>
      <testsuite name="focus events" file="__tests__/unit/services/input-impl.test.ts" line="383" tests="1" assertions="2" failures="0" skipped="0" time="0.004" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="tracks focus state" classname="focus events &amp;gt; Input Service Implementation" time="0.004256" file="__tests__/unit/services/input-impl.test.ts" line="384" assertions="2" />
      </testsuite>
      <testsuite name="paste events" file="__tests__/unit/services/input-impl.test.ts" line="410" tests="2" assertions="2" failures="0" skipped="0" time="0.004" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles bracketed paste" classname="paste events &amp;gt; Input Service Implementation" time="0.002294" file="__tests__/unit/services/input-impl.test.ts" line="411" assertions="1" />
        <testcase name="handles multi-line paste" classname="paste events &amp;gt; Input Service Implementation" time="0.002233" file="__tests__/unit/services/input-impl.test.ts" line="437" assertions="1" />
      </testsuite>
      <testsuite name="raw input" file="__tests__/unit/services/input-impl.test.ts" line="464" tests="1" assertions="3" failures="0" skipped="0" time="0.002" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="provides raw input stream" classname="raw input &amp;gt; Input Service Implementation" time="0.002558" file="__tests__/unit/services/input-impl.test.ts" line="465" assertions="3" />
      </testsuite>
      <testsuite name="error handling" file="__tests__/unit/services/input-impl.test.ts" line="490" tests="2" assertions="2" failures="0" skipped="0" time="0.002" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles stdin errors" classname="error handling &amp;gt; Input Service Implementation" time="0.000482" file="__tests__/unit/services/input-impl.test.ts" line="491" assertions="1" />
        <testcase name="handles invalid key sequences" classname="error handling &amp;gt; Input Service Implementation" time="0.002291" file="__tests__/unit/services/input-impl.test.ts" line="512" assertions="1" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/services/terminal.test.ts" file="__tests__/unit/services/terminal.test.ts" tests="31" assertions="56" failures="7" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Terminal Service" file="__tests__/unit/services/terminal.test.ts" line="12" tests="31" assertions="56" failures="7" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="basic operations" file="__tests__/unit/services/terminal.test.ts" line="45" tests="6" assertions="10" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="clears the screen" classname="basic operations &amp;gt; Terminal Service" time="0.000629" file="__tests__/unit/services/terminal.test.ts" line="46" assertions="1" />
        <testcase name="writes text without newline" classname="basic operations &amp;gt; Terminal Service" time="0.000191" file="__tests__/unit/services/terminal.test.ts" line="60" assertions="1" />
        <testcase name="writes text with newline" classname="basic operations &amp;gt; Terminal Service" time="0.000185" file="__tests__/unit/services/terminal.test.ts" line="73" assertions="1" />
        <testcase name="moves cursor to absolute position" classname="basic operations &amp;gt; Terminal Service" time="0.000166" file="__tests__/unit/services/terminal.test.ts" line="86" assertions="1" />
        <testcase name="moves cursor relatively" classname="basic operations &amp;gt; Terminal Service" time="0.000383" file="__tests__/unit/services/terminal.test.ts" line="100" assertions="4" />
        <testcase name="handles cursor visibility" classname="basic operations &amp;gt; Terminal Service" time="0.00017" file="__tests__/unit/services/terminal.test.ts" line="121" assertions="2" />
      </testsuite>
      <testsuite name="state management" file="__tests__/unit/services/terminal.test.ts" line="137" tests="6" assertions="9" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="gets terminal size" classname="state management &amp;gt; Terminal Service" time="0.000165" file="__tests__/unit/services/terminal.test.ts" line="138" assertions="1" />
        <testcase name="handles missing terminal size" classname="state management &amp;gt; Terminal Service" time="0.000151" file="__tests__/unit/services/terminal.test.ts" line="151" assertions="1" />
        <testcase name="sets raw mode" classname="state management &amp;gt; Terminal Service" time="0.000319" file="__tests__/unit/services/terminal.test.ts" line="168" assertions="2" />
        <testcase name="handles non-TTY for raw mode" classname="state management &amp;gt; Terminal Service" time="0.000153" file="__tests__/unit/services/terminal.test.ts" line="189" assertions="1" />
        <testcase name="manages alternate screen buffer" classname="state management &amp;gt; Terminal Service" time="0.00026" file="__tests__/unit/services/terminal.test.ts" line="206" assertions="2" />
        <testcase name="saves and restores cursor position" classname="state management &amp;gt; Terminal Service" time="0.000191" file="__tests__/unit/services/terminal.test.ts" line="221" assertions="2" />
      </testsuite>
      <testsuite name="capabilities detection" file="__tests__/unit/services/terminal.test.ts" line="237" tests="6" assertions="9" failures="3" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="detects terminal capabilities from environment" classname="capabilities detection &amp;gt; Terminal Service" time="0.000359" file="__tests__/unit/services/terminal.test.ts" line="238" assertions="3">
          <failure type="AssertionError" />
        </testcase>
        <testcase name="detects 256 color support" classname="capabilities detection &amp;gt; Terminal Service" time="0.000199" file="__tests__/unit/services/terminal.test.ts" line="258" assertions="1" />
        <testcase name="detects basic 16 color support" classname="capabilities detection &amp;gt; Terminal Service" time="0.000219" file="__tests__/unit/services/terminal.test.ts" line="274" assertions="1">
          <failure type="AssertionError" />
        </testcase>
        <testcase name="checks individual color support methods" classname="capabilities detection &amp;gt; Terminal Service" time="0.000192" file="__tests__/unit/services/terminal.test.ts" line="290" assertions="2" />
        <testcase name="checks unicode support" classname="capabilities detection &amp;gt; Terminal Service" time="0.000153" file="__tests__/unit/services/terminal.test.ts" line="310" assertions="1" />
        <testcase name="handles non-unicode locale" classname="capabilities detection &amp;gt; Terminal Service" time="0.000199" file="__tests__/unit/services/terminal.test.ts" line="325" assertions="1">
          <failure type="AssertionError" />
        </testcase>
      </testsuite>
      <testsuite name="screen management" file="__tests__/unit/services/terminal.test.ts" line="341" tests="3" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="clears line regions" classname="screen management &amp;gt; Terminal Service" time="0.000196" file="__tests__/unit/services/terminal.test.ts" line="342" assertions="3" />
        <testcase name="clears screen regions" classname="screen management &amp;gt; Terminal Service" time="0.000129" file="__tests__/unit/services/terminal.test.ts" line="359" assertions="2" />
        <testcase name="scrolls the terminal" classname="screen management &amp;gt; Terminal Service" time="0.000192" file="__tests__/unit/services/terminal.test.ts" line="374" assertions="2" />
      </testsuite>
      <testsuite name="advanced features" file="__tests__/unit/services/terminal.test.ts" line="390" tests="5" assertions="7" failures="1" skipped="0" time="0.001" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="sets terminal title" classname="advanced features &amp;gt; Terminal Service" time="0.000146" file="__tests__/unit/services/terminal.test.ts" line="391" assertions="1" />
        <testcase name="rings terminal bell" classname="advanced features &amp;gt; Terminal Service" time="0.000125" file="__tests__/unit/services/terminal.test.ts" line="404" assertions="1" />
        <testcase name="gets cursor position" classname="advanced features &amp;gt; Terminal Service" time="0.001356" file="__tests__/unit/services/terminal.test.ts" line="417" assertions="1">
          <failure type="AssertionError" />
        </testcase>
        <testcase name="sets cursor shape" classname="advanced features &amp;gt; Terminal Service" time="0.000299" file="__tests__/unit/services/terminal.test.ts" line="439" assertions="3" />
        <testcase name="sets cursor blink" classname="advanced features &amp;gt; Terminal Service" time="0.000166" file="__tests__/unit/services/terminal.test.ts" line="456" assertions="1" />
      </testsuite>
      <testsuite name="error handling" file="__tests__/unit/services/terminal.test.ts" line="472" tests="3" assertions="6" failures="3" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles write errors" classname="error handling &amp;gt; Terminal Service" time="0.000692" file="__tests__/unit/services/terminal.test.ts" line="473" assertions="3">
          <failure type="AssertionError" />
        </testcase>
        <testcase name="handles non-TTY terminals" classname="error handling &amp;gt; Terminal Service" time="0.000345" file="__tests__/unit/services/terminal.test.ts" line="494" assertions="1">
          <failure type="AssertionError" />
        </testcase>
        <testcase name="handles missing stdout" classname="error handling &amp;gt; Terminal Service" time="0.00027" file="__tests__/unit/services/terminal.test.ts" line="513" assertions="2">
          <failure type="AssertionError" />
        </testcase>
      </testsuite>
      <testsuite name="integration scenarios" file="__tests__/unit/services/terminal.test.ts" line="532" tests="2" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="performs full screen setup and teardown" classname="integration scenarios &amp;gt; Terminal Service" time="0.000397" file="__tests__/unit/services/terminal.test.ts" line="533" assertions="6" />
        <testcase name="handles terminal resize gracefully" classname="integration scenarios &amp;gt; Terminal Service" time="0.00021" file="__tests__/unit/services/terminal.test.ts" line="566" assertions="2" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/services/terminal-impl.test.ts" file="__tests__/unit/services/terminal-impl.test.ts" tests="27" assertions="117" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Terminal Implementation Behavior" file="__tests__/unit/services/terminal-impl.test.ts" line="36" tests="26" assertions="74" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="ANSI Escape Sequences" file="__tests__/unit/services/terminal-impl.test.ts" line="68" tests="4" assertions="19" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="uses correct escape sequences for basic operations" classname="ANSI Escape Sequences &amp;gt; Terminal Implementation Behavior" time="0.000026" file="__tests__/unit/services/terminal-impl.test.ts" line="69" assertions="7" />
        <testcase name="generates correct cursor movement sequences" classname="ANSI Escape Sequences &amp;gt; Terminal Implementation Behavior" time="0.000012" file="__tests__/unit/services/terminal-impl.test.ts" line="85" assertions="5" />
        <testcase name="generates correct clearing sequences" classname="ANSI Escape Sequences &amp;gt; Terminal Implementation Behavior" time="0.000012" file="__tests__/unit/services/terminal-impl.test.ts" line="96" assertions="5" />
        <testcase name="generates correct scrolling sequences" classname="ANSI Escape Sequences &amp;gt; Terminal Implementation Behavior" time="0.000005" file="__tests__/unit/services/terminal-impl.test.ts" line="106" assertions="2" />
      </testsuite>
      <testsuite name="Capability Detection" file="__tests__/unit/services/terminal-impl.test.ts" line="114" tests="4" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="detects truecolor support from COLORTERM" classname="Capability Detection &amp;gt; Terminal Implementation Behavior" time="0.000013" file="__tests__/unit/services/terminal-impl.test.ts" line="115" assertions="1" />
        <testcase name="detects 256 color support from TERM" classname="Capability Detection &amp;gt; Terminal Implementation Behavior" time="0.000004" file="__tests__/unit/services/terminal-impl.test.ts" line="137" assertions="1" />
        <testcase name="detects unicode support based on platform" classname="Capability Detection &amp;gt; Terminal Implementation Behavior" time="0.000005" file="__tests__/unit/services/terminal-impl.test.ts" line="164" assertions="1" />
        <testcase name="detects terminal emulator specific features" classname="Capability Detection &amp;gt; Terminal Implementation Behavior" time="0.00002" file="__tests__/unit/services/terminal-impl.test.ts" line="174" assertions="2" />
      </testsuite>
      <testsuite name="Terminal Size Detection" file="__tests__/unit/services/terminal-impl.test.ts" line="200" tests="2" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="gets size from stdout properties" classname="Terminal Size Detection &amp;gt; Terminal Implementation Behavior" time="0.000015" file="__tests__/unit/services/terminal-impl.test.ts" line="201" assertions="2" />
        <testcase name="uses fallback values when size unavailable" classname="Terminal Size Detection &amp;gt; Terminal Implementation Behavior" time="0.000016" file="__tests__/unit/services/terminal-impl.test.ts" line="226" assertions="2" />
      </testsuite>
      <testsuite name="Raw Mode Handling" file="__tests__/unit/services/terminal-impl.test.ts" line="252" tests="1" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="checks TTY status before setting raw mode" classname="Raw Mode Handling &amp;gt; Terminal Implementation Behavior" time="0.000014" file="__tests__/unit/services/terminal-impl.test.ts" line="253" assertions="2" />
      </testsuite>
      <testsuite name="Error Handling Patterns" file="__tests__/unit/services/terminal-impl.test.ts" line="269" tests="2" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates proper TerminalError instances" classname="Error Handling Patterns &amp;gt; Terminal Implementation Behavior" time="0.000025" file="__tests__/unit/services/terminal-impl.test.ts" line="270" assertions="5" />
        <testcase name="handles write operation errors" classname="Error Handling Patterns &amp;gt; Terminal Implementation Behavior" time="0.000042" file="__tests__/unit/services/terminal-impl.test.ts" line="283" assertions="1" />
      </testsuite>
      <testsuite name="State Management" file="__tests__/unit/services/terminal-impl.test.ts" line="292" tests="2" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="tracks raw mode state changes" classname="State Management &amp;gt; Terminal Implementation Behavior" time="0.000019" file="__tests__/unit/services/terminal-impl.test.ts" line="293" assertions="4" />
        <testcase name="tracks alternate screen state" classname="State Management &amp;gt; Terminal Implementation Behavior" time="0.00003" file="__tests__/unit/services/terminal-impl.test.ts" line="310" assertions="4" />
      </testsuite>
      <testsuite name="Cursor Movement Logic" file="__tests__/unit/services/terminal-impl.test.ts" line="328" tests="1" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles relative cursor movements" classname="Cursor Movement Logic &amp;gt; Terminal Implementation Behavior" time="0.000061" file="__tests__/unit/services/terminal-impl.test.ts" line="329" assertions="6" />
      </testsuite>
      <testsuite name="Color Support Logic" file="__tests__/unit/services/terminal-impl.test.ts" line="354" tests="2" assertions="9" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="determines color support levels correctly" classname="Color Support Logic &amp;gt; Terminal Implementation Behavior" time="0.000032" file="__tests__/unit/services/terminal-impl.test.ts" line="355" assertions="5" />
        <testcase name="validates color support queries" classname="Color Support Logic &amp;gt; Terminal Implementation Behavior" time="0.000031" file="__tests__/unit/services/terminal-impl.test.ts" line="370" assertions="4" />
      </testsuite>
      <testsuite name="Terminal Title Handling" file="__tests__/unit/services/terminal-impl.test.ts" line="403" tests="1" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="generates window title escape sequence" classname="Terminal Title Handling &amp;gt; Terminal Implementation Behavior" time="0.00002" file="__tests__/unit/services/terminal-impl.test.ts" line="404" assertions="3" />
      </testsuite>
      <testsuite name="Bell Handling" file="__tests__/unit/services/terminal-impl.test.ts" line="413" tests="1" assertions="1" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="generates bell escape sequence" classname="Bell Handling &amp;gt; Terminal Implementation Behavior" time="0.000008" file="__tests__/unit/services/terminal-impl.test.ts" line="414" assertions="1" />
      </testsuite>
      <testsuite name="Cursor Position Queries" file="__tests__/unit/services/terminal-impl.test.ts" line="420" tests="2" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="generates cursor position request sequence" classname="Cursor Position Queries &amp;gt; Terminal Implementation Behavior" time="0.00001" file="__tests__/unit/services/terminal-impl.test.ts" line="421" assertions="1" />
        <testcase name="parses cursor position response" classname="Cursor Position Queries &amp;gt; Terminal Implementation Behavior" time="0.00008" file="__tests__/unit/services/terminal-impl.test.ts" line="426" assertions="3" />
      </testsuite>
      <testsuite name="Cursor Shape Control" file="__tests__/unit/services/terminal-impl.test.ts" line="441" tests="2" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="generates cursor shape sequences" classname="Cursor Shape Control &amp;gt; Terminal Implementation Behavior" time="0.000024" file="__tests__/unit/services/terminal-impl.test.ts" line="442" assertions="3" />
        <testcase name="generates cursor blink sequences" classname="Cursor Shape Control &amp;gt; Terminal Implementation Behavior" time="0.000017" file="__tests__/unit/services/terminal-impl.test.ts" line="457" assertions="2" />
      </testsuite>
      <testsuite name="Integration Patterns" file="__tests__/unit/services/terminal-impl.test.ts" line="467" tests="2" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="combines multiple escape sequences correctly" classname="Integration Patterns &amp;gt; Terminal Implementation Behavior" time="0.000022" file="__tests__/unit/services/terminal-impl.test.ts" line="468" assertions="1" />
        <testcase name="restores terminal state correctly" classname="Integration Patterns &amp;gt; Terminal Implementation Behavior" time="0.000016" file="__tests__/unit/services/terminal-impl.test.ts" line="481" assertions="1" />
      </testsuite>
    </testsuite>
    <testsuite name="Terminal Implementation Coverage" file="__tests__/unit/services/terminal-impl.test.ts" line="497" tests="1" assertions="43" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testcase name="covers all ANSI sequence constants" classname="Terminal Implementation Coverage" time="0.000146" file="__tests__/unit/services/terminal-impl.test.ts" line="498" assertions="43" />
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/services/input-buffer.test.ts" file="__tests__/unit/services/input-buffer.test.ts" tests="9" assertions="39" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Input Buffer Parsing" file="__tests__/unit/services/input-buffer.test.ts" line="9" tests="9" assertions="39" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="Character Parsing" file="__tests__/unit/services/input-buffer.test.ts" line="10" tests="6" assertions="25" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="parses regular characters" classname="Character Parsing &amp;gt; Input Buffer Parsing" time="0.000048" file="__tests__/unit/services/input-buffer.test.ts" line="11" assertions="7" />
        <testcase name="parses numbers" classname="Character Parsing &amp;gt; Input Buffer Parsing" time="0.000028" file="__tests__/unit/services/input-buffer.test.ts" line="24" assertions="4" />
        <testcase name="parses special characters" classname="Character Parsing &amp;gt; Input Buffer Parsing" time="0.000012" file="__tests__/unit/services/input-buffer.test.ts" line="33" assertions="4" />
        <testcase name="parses Unicode characters" classname="Character Parsing &amp;gt; Input Buffer Parsing" time="0.000016" file="__tests__/unit/services/input-buffer.test.ts" line="42" assertions="4" />
        <testcase name="handles control characters" classname="Character Parsing &amp;gt; Input Buffer Parsing" time="0.000011" file="__tests__/unit/services/input-buffer.test.ts" line="51" assertions="3" />
        <testcase name="handles other control characters" classname="Character Parsing &amp;gt; Input Buffer Parsing" time="0.000014" file="__tests__/unit/services/input-buffer.test.ts" line="59" assertions="3" />
      </testsuite>
      <testsuite name="Edge Cases" file="__tests__/unit/services/input-buffer.test.ts" line="68" tests="3" assertions="14" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles empty string" classname="Edge Cases &amp;gt; Input Buffer Parsing" time="0.000008" file="__tests__/unit/services/input-buffer.test.ts" line="69" assertions="4" />
        <testcase name="handles whitespace" classname="Edge Cases &amp;gt; Input Buffer Parsing" time="0.000013" file="__tests__/unit/services/input-buffer.test.ts" line="78" assertions="4" />
        <testcase name="returns consistent structure" classname="Edge Cases &amp;gt; Input Buffer Parsing" time="0.000013" file="__tests__/unit/services/input-buffer.test.ts" line="87" assertions="6" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/services/renderer.test.ts" file="__tests__/unit/services/renderer.test.ts" tests="57" assertions="104" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="RendererService" file="__tests__/unit/services/renderer.test.ts" line="357" tests="37" assertions="71" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="Core Rendering" file="__tests__/unit/services/renderer.test.ts" line="358" tests="4" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="renders a view" classname="Core Rendering &amp;gt; RendererService" time="0.000637" file="__tests__/unit/services/renderer.test.ts" line="359" assertions="1" />
        <testcase name="manages frame lifecycle" classname="Core Rendering &amp;gt; RendererService" time="0.00027" file="__tests__/unit/services/renderer.test.ts" line="375" assertions="1" />
        <testcase name="throws error when ending frame without beginning" classname="Core Rendering &amp;gt; RendererService" time="0.000296" file="__tests__/unit/services/renderer.test.ts" line="390" assertions="1" />
        <testcase name="forces complete redraw" classname="Core Rendering &amp;gt; RendererService" time="0.000211" file="__tests__/unit/services/renderer.test.ts" line="404" assertions="2" />
      </testsuite>
      <testsuite name="Viewport Management" file="__tests__/unit/services/renderer.test.ts" line="421" tests="3" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="sets and gets viewport" classname="Viewport Management &amp;gt; RendererService" time="0.000201" file="__tests__/unit/services/renderer.test.ts" line="422" assertions="1" />
        <testcase name="pushes and pops viewport" classname="Viewport Management &amp;gt; RendererService" time="0.000265" file="__tests__/unit/services/renderer.test.ts" line="439" assertions="2" />
        <testcase name="handles empty viewport stack error" classname="Viewport Management &amp;gt; RendererService" time="0.000175" file="__tests__/unit/services/renderer.test.ts" line="463" assertions="1" />
      </testsuite>
      <testsuite name="Buffer Management" file="__tests__/unit/services/renderer.test.ts" line="478" tests="3" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="tracks dirty regions" classname="Buffer Management &amp;gt; RendererService" time="0.000193" file="__tests__/unit/services/renderer.test.ts" line="479" assertions="1" />
        <testcase name="clears dirty regions" classname="Buffer Management &amp;gt; RendererService" time="0.000186" file="__tests__/unit/services/renderer.test.ts" line="496" assertions="1" />
        <testcase name="adds dirty regions when rendering" classname="Buffer Management &amp;gt; RendererService" time="0.000188" file="__tests__/unit/services/renderer.test.ts" line="512" assertions="3" />
      </testsuite>
      <testsuite name="Advanced Rendering Features" file="__tests__/unit/services/renderer.test.ts" line="532" tests="5" assertions="12" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="renders at specific position" classname="Advanced Rendering Features &amp;gt; RendererService" time="0.000359" file="__tests__/unit/services/renderer.test.ts" line="533" assertions="2" />
        <testcase name="renders batch of views" classname="Advanced Rendering Features &amp;gt; RendererService" time="0.000314" file="__tests__/unit/services/renderer.test.ts" line="551" assertions="4" />
        <testcase name="sets and clears clip region" classname="Advanced Rendering Features &amp;gt; RendererService" time="0.000199" file="__tests__/unit/services/renderer.test.ts" line="575" assertions="2" />
        <testcase name="saves and restores rendering state" classname="Advanced Rendering Features &amp;gt; RendererService" time="0.000328" file="__tests__/unit/services/renderer.test.ts" line="593" assertions="3" />
        <testcase name="handles restore state error when no saved state" classname="Advanced Rendering Features &amp;gt; RendererService" time="0.000198" file="__tests__/unit/services/renderer.test.ts" line="626" assertions="1" />
      </testsuite>
      <testsuite name="Performance Monitoring" file="__tests__/unit/services/renderer.test.ts" line="641" tests="2" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="tracks render statistics" classname="Performance Monitoring &amp;gt; RendererService" time="0.000227" file="__tests__/unit/services/renderer.test.ts" line="642" assertions="1" />
        <testcase name="resets statistics" classname="Performance Monitoring &amp;gt; RendererService" time="0.00022" file="__tests__/unit/services/renderer.test.ts" line="662" assertions="1" />
      </testsuite>
      <testsuite name="Text Operations" file="__tests__/unit/services/renderer.test.ts" line="685" tests="5" assertions="11" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="measures text correctly" classname="Text Operations &amp;gt; RendererService" time="0.000417" file="__tests__/unit/services/renderer.test.ts" line="686" assertions="4" />
        <testcase name="wraps text to specified width" classname="Text Operations &amp;gt; RendererService" time="0.000269" file="__tests__/unit/services/renderer.test.ts" line="708" assertions="1" />
        <testcase name="wraps text with break long words option" classname="Text Operations &amp;gt; RendererService" time="0.000174" file="__tests__/unit/services/renderer.test.ts" line="728" assertions="1" />
        <testcase name="wraps text preserving indentation" classname="Text Operations &amp;gt; RendererService" time="0.000177" file="__tests__/unit/services/renderer.test.ts" line="749" assertions="1" />
        <testcase name="truncates text with ellipsis" classname="Text Operations &amp;gt; RendererService" time="0.000394" file="__tests__/unit/services/renderer.test.ts" line="770" assertions="4" />
      </testsuite>
      <testsuite name="Layer Management" file="__tests__/unit/services/renderer.test.ts" line="793" tests="10" assertions="16" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates and manages layers" classname="Layer Management &amp;gt; RendererService" time="0.000247" file="__tests__/unit/services/renderer.test.ts" line="794" assertions="4" />
        <testcase name="handles duplicate layer creation error" classname="Layer Management &amp;gt; RendererService" time="0.000208" file="__tests__/unit/services/renderer.test.ts" line="816" assertions="1" />
        <testcase name="removes layers" classname="Layer Management &amp;gt; RendererService" time="0.000189" file="__tests__/unit/services/renderer.test.ts" line="831" assertions="2" />
        <testcase name="handles remove non-existent layer error" classname="Layer Management &amp;gt; RendererService" time="0.000166" file="__tests__/unit/services/renderer.test.ts" line="848" assertions="1" />
        <testcase name="renders to layer" classname="Layer Management &amp;gt; RendererService" time="0.000265" file="__tests__/unit/services/renderer.test.ts" line="862" assertions="1" />
        <testcase name="handles render to non-existent layer error" classname="Layer Management &amp;gt; RendererService" time="0.000217" file="__tests__/unit/services/renderer.test.ts" line="881" assertions="1" />
        <testcase name="sets layer visibility" classname="Layer Management &amp;gt; RendererService" time="0.000252" file="__tests__/unit/services/renderer.test.ts" line="897" assertions="3" />
        <testcase name="handles set visibility on non-existent layer error" classname="Layer Management &amp;gt; RendererService" time="0.000178" file="__tests__/unit/services/renderer.test.ts" line="917" assertions="1" />
        <testcase name="composites layers in correct z-order" classname="Layer Management &amp;gt; RendererService" time="0.000609" file="__tests__/unit/services/renderer.test.ts" line="931" assertions="1" />
        <testcase name="composites only visible layers" classname="Layer Management &amp;gt; RendererService" time="0.000388" file="__tests__/unit/services/renderer.test.ts" line="958" assertions="1" />
      </testsuite>
      <testsuite name="Dirty Region Optimization" file="__tests__/unit/services/renderer.test.ts" line="986" tests="3" assertions="9" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="optimizes overlapping dirty regions" classname="Dirty Region Optimization &amp;gt; RendererService" time="0.000294" file="__tests__/unit/services/renderer.test.ts" line="987" assertions="3" />
        <testcase name="preserves non-overlapping dirty regions" classname="Dirty Region Optimization &amp;gt; RendererService" time="0.000231" file="__tests__/unit/services/renderer.test.ts" line="1013" assertions="1" />
        <testcase name="handles complex overlapping scenarios" classname="Dirty Region Optimization &amp;gt; RendererService" time="0.000291" file="__tests__/unit/services/renderer.test.ts" line="1035" assertions="5" />
      </testsuite>
      <testsuite name="Profiling and Statistics" file="__tests__/unit/services/renderer.test.ts" line="1070" tests="2" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="enables and disables profiling" classname="Profiling and Statistics &amp;gt; RendererService" time="0.000248" file="__tests__/unit/services/renderer.test.ts" line="1071" assertions="3" />
        <testcase name="provides detailed frame statistics" classname="Profiling and Statistics &amp;gt; RendererService" time="0.000255" file="__tests__/unit/services/renderer.test.ts" line="1090" assertions="4" />
      </testsuite>
    </testsuite>
    <testsuite name="RenderUtils" file="__tests__/unit/services/renderer.test.ts" line="1122" tests="20" assertions="33" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="emptyView" file="__tests__/unit/services/renderer.test.ts" line="1123" tests="2" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates an empty view with specified dimensions" classname="emptyView &amp;gt; RenderUtils" time="0.000091" file="__tests__/unit/services/renderer.test.ts" line="1124" assertions="3" />
        <testcase name="handles zero dimensions" classname="emptyView &amp;gt; RenderUtils" time="0.000054" file="__tests__/unit/services/renderer.test.ts" line="1134" assertions="3" />
      </testsuite>
      <testsuite name="textView" file="__tests__/unit/services/renderer.test.ts" line="1145" tests="3" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates a view from simple string" classname="textView &amp;gt; RenderUtils" time="0.00006" file="__tests__/unit/services/renderer.test.ts" line="1146" assertions="1" />
        <testcase name="handles empty string" classname="textView &amp;gt; RenderUtils" time="0.000034" file="__tests__/unit/services/renderer.test.ts" line="1153" assertions="1" />
        <testcase name="handles multi-line string" classname="textView &amp;gt; RenderUtils" time="0.000032" file="__tests__/unit/services/renderer.test.ts" line="1160" assertions="1" />
      </testsuite>
      <testsuite name="joinHorizontal" file="__tests__/unit/services/renderer.test.ts" line="1168" tests="4" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="joins multiple views horizontally" classname="joinHorizontal &amp;gt; RenderUtils" time="0.000215" file="__tests__/unit/services/renderer.test.ts" line="1169" assertions="1" />
        <testcase name="handles views with different heights" classname="joinHorizontal &amp;gt; RenderUtils" time="0.000064" file="__tests__/unit/services/renderer.test.ts" line="1180" assertions="1" />
        <testcase name="handles empty views array" classname="joinHorizontal &amp;gt; RenderUtils" time="0.000043" file="__tests__/unit/services/renderer.test.ts" line="1191" assertions="1" />
        <testcase name="handles single view" classname="joinHorizontal &amp;gt; RenderUtils" time="0.000043" file="__tests__/unit/services/renderer.test.ts" line="1198" assertions="1" />
      </testsuite>
      <testsuite name="joinVertical" file="__tests__/unit/services/renderer.test.ts" line="1207" tests="3" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="joins multiple views vertically" classname="joinVertical &amp;gt; RenderUtils" time="0.000118" file="__tests__/unit/services/renderer.test.ts" line="1208" assertions="1" />
        <testcase name="handles views with newlines" classname="joinVertical &amp;gt; RenderUtils" time="0.000045" file="__tests__/unit/services/renderer.test.ts" line="1219" assertions="1" />
        <testcase name="handles empty views array" classname="joinVertical &amp;gt; RenderUtils" time="0.000035" file="__tests__/unit/services/renderer.test.ts" line="1229" assertions="1" />
      </testsuite>
      <testsuite name="addPadding" file="__tests__/unit/services/renderer.test.ts" line="1237" tests="3" assertions="10" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="adds padding around a view" classname="addPadding &amp;gt; RenderUtils" time="0.000188" file="__tests__/unit/services/renderer.test.ts" line="1238" assertions="7" />
        <testcase name="handles zero padding" classname="addPadding &amp;gt; RenderUtils" time="0.000051" file="__tests__/unit/services/renderer.test.ts" line="1255" assertions="1" />
        <testcase name="handles view without width/height" classname="addPadding &amp;gt; RenderUtils" time="0.000018" file="__tests__/unit/services/renderer.test.ts" line="1263" assertions="2" />
      </testsuite>
      <testsuite name="clipView" file="__tests__/unit/services/renderer.test.ts" line="1272" tests="5" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="clips a view to specified dimensions" classname="clipView &amp;gt; RenderUtils" time="0.00013" file="__tests__/unit/services/renderer.test.ts" line="1273" assertions="3" />
        <testcase name="handles view smaller than clip dimensions" classname="clipView &amp;gt; RenderUtils" time="0.000036" file="__tests__/unit/services/renderer.test.ts" line="1284" assertions="1" />
        <testcase name="handles single line view" classname="clipView &amp;gt; RenderUtils" time="0.000039" file="__tests__/unit/services/renderer.test.ts" line="1292" assertions="1" />
        <testcase name="handles empty view" classname="clipView &amp;gt; RenderUtils" time="0.000025" file="__tests__/unit/services/renderer.test.ts" line="1300" assertions="1" />
        <testcase name="handles zero clip dimensions" classname="clipView &amp;gt; RenderUtils" time="0.000035" file="__tests__/unit/services/renderer.test.ts" line="1308" assertions="1" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/services/input.test.ts" file="__tests__/unit/services/input.test.ts" tests="33" assertions="107" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Input Service Interface" file="__tests__/unit/services/input.test.ts" line="10" tests="12" assertions="28" failures="0" skipped="0" time="0.003" hostname="Andrews-MacBook-Pro-188.local">
      <testcase name="should handle key events stream" classname="Input Service Interface" time="0.002215" file="__tests__/unit/services/input.test.ts" line="86" assertions="3" />
      <testcase name="should handle mouse events stream" classname="Input Service Interface" time="0.000712" file="__tests__/unit/services/input.test.ts" line="103" assertions="3" />
      <testcase name="should handle resize events stream" classname="Input Service Interface" time="0.000697" file="__tests__/unit/services/input.test.ts" line="120" assertions="2" />
      <testcase name="should handle paste events stream" classname="Input Service Interface" time="0.000728" file="__tests__/unit/services/input.test.ts" line="136" assertions="2" />
      <testcase name="should handle focus events stream" classname="Input Service Interface" time="0.000533" file="__tests__/unit/services/input.test.ts" line="152" assertions="2" />
      <testcase name="should handle mouse control operations" classname="Input Service Interface" time="0.00029" file="__tests__/unit/services/input.test.ts" line="168" assertions="1" />
      <testcase name="should handle paste control operations" classname="Input Service Interface" time="0.000187" file="__tests__/unit/services/input.test.ts" line="186" assertions="1" />
      <testcase name="should handle focus tracking operations" classname="Input Service Interface" time="0.000159" file="__tests__/unit/services/input.test.ts" line="201" assertions="1" />
      <testcase name="should handle synchronous input operations" classname="Input Service Interface" time="0.000281" file="__tests__/unit/services/input.test.ts" line="216" assertions="3" />
      <testcase name="should handle key filtering and mapping" classname="Input Service Interface" time="0.001085" file="__tests__/unit/services/input.test.ts" line="237" assertions="5" />
      <testcase name="should handle ANSI sequence parsing" classname="Input Service Interface" time="0.000233" file="__tests__/unit/services/input.test.ts" line="264" assertions="2" />
      <testcase name="should handle raw input stream" classname="Input Service Interface" time="0.000486" file="__tests__/unit/services/input.test.ts" line="281" assertions="3" />
    </testsuite>
    <testsuite name="KeyUtils" file="__tests__/unit/services/input.test.ts" line="299" tests="15" assertions="53" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="isPrintable" file="__tests__/unit/services/input.test.ts" line="300" tests="2" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="should identify printable characters" classname="isPrintable &amp;gt; KeyUtils" time="0.000053" file="__tests__/unit/services/input.test.ts" line="301" assertions="4" />
        <testcase name="should reject non-printable characters" classname="isPrintable &amp;gt; KeyUtils" time="0.00002" file="__tests__/unit/services/input.test.ts" line="308" assertions="4" />
      </testsuite>
      <testsuite name="isNavigation" file="__tests__/unit/services/input.test.ts" line="316" tests="2" assertions="11" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="should identify navigation keys" classname="isNavigation &amp;gt; KeyUtils" time="0.000065" file="__tests__/unit/services/input.test.ts" line="317" assertions="8" />
        <testcase name="should reject non-navigation keys" classname="isNavigation &amp;gt; KeyUtils" time="0.000014" file="__tests__/unit/services/input.test.ts" line="328" assertions="3" />
      </testsuite>
      <testsuite name="isFunctionKey" file="__tests__/unit/services/input.test.ts" line="335" tests="2" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="should identify function keys" classname="isFunctionKey &amp;gt; KeyUtils" time="0.00006" file="__tests__/unit/services/input.test.ts" line="336" assertions="3" />
        <testcase name="should reject non-function keys" classname="isFunctionKey &amp;gt; KeyUtils" time="0.000013" file="__tests__/unit/services/input.test.ts" line="342" assertions="3" />
      </testsuite>
      <testsuite name="isModifierOnly" file="__tests__/unit/services/input.test.ts" line="349" tests="2" assertions="7" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="should identify modifier-only keys" classname="isModifierOnly &amp;gt; KeyUtils" time="0.000028" file="__tests__/unit/services/input.test.ts" line="350" assertions="4" />
        <testcase name="should reject non-modifier keys" classname="isModifierOnly &amp;gt; KeyUtils" time="0.00001" file="__tests__/unit/services/input.test.ts" line="357" assertions="3" />
      </testsuite>
      <testsuite name="matches" file="__tests__/unit/services/input.test.ts" line="364" tests="4" assertions="13" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="should match simple keys" classname="matches &amp;gt; KeyUtils" time="0.000059" file="__tests__/unit/services/input.test.ts" line="365" assertions="2" />
        <testcase name="should match keys by code" classname="matches &amp;gt; KeyUtils" time="0.000025" file="__tests__/unit/services/input.test.ts" line="371" assertions="2" />
        <testcase name="should match modifier combinations" classname="matches &amp;gt; KeyUtils" time="0.000036" file="__tests__/unit/services/input.test.ts" line="377" assertions="6" />
        <testcase name="should match complex modifier combinations" classname="matches &amp;gt; KeyUtils" time="0.00002" file="__tests__/unit/services/input.test.ts" line="391" assertions="3" />
      </testsuite>
      <testsuite name="format" file="__tests__/unit/services/input.test.ts" line="399" tests="3" assertions="8" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="should format simple keys" classname="format &amp;gt; KeyUtils" time="0.000039" file="__tests__/unit/services/input.test.ts" line="400" assertions="2" />
        <testcase name="should format keys with modifiers" classname="format &amp;gt; KeyUtils" time="0.00003" file="__tests__/unit/services/input.test.ts" line="405" assertions="4" />
        <testcase name="should format keys with multiple modifiers" classname="format &amp;gt; KeyUtils" time="0.000018" file="__tests__/unit/services/input.test.ts" line="412" assertions="2" />
      </testsuite>
    </testsuite>
    <testsuite name="MouseUtils" file="__tests__/unit/services/input.test.ts" line="419" tests="6" assertions="26" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="isClick" file="__tests__/unit/services/input.test.ts" line="420" tests="1" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="should identify click events" classname="isClick &amp;gt; MouseUtils" time="0.00004" file="__tests__/unit/services/input.test.ts" line="421" assertions="4" />
      </testsuite>
      <testsuite name="isDrag" file="__tests__/unit/services/input.test.ts" line="429" tests="1" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="should identify drag events" classname="isDrag &amp;gt; MouseUtils" time="0.000022" file="__tests__/unit/services/input.test.ts" line="430" assertions="4" />
      </testsuite>
      <testsuite name="isWheel" file="__tests__/unit/services/input.test.ts" line="438" tests="1" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="should identify wheel events" classname="isWheel &amp;gt; MouseUtils" time="0.00003" file="__tests__/unit/services/input.test.ts" line="439" assertions="4" />
      </testsuite>
      <testsuite name="getScrollDirection" file="__tests__/unit/services/input.test.ts" line="447" tests="1" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="should get scroll direction from wheel events" classname="getScrollDirection &amp;gt; MouseUtils" time="0.00003" file="__tests__/unit/services/input.test.ts" line="448" assertions="4" />
      </testsuite>
      <testsuite name="isWithinBounds" file="__tests__/unit/services/input.test.ts" line="456" tests="2" assertions="10" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="should check if mouse position is within bounds" classname="isWithinBounds &amp;gt; MouseUtils" time="0.000049" file="__tests__/unit/services/input.test.ts" line="457" assertions="7" />
        <testcase name="should handle edge cases" classname="isWithinBounds &amp;gt; MouseUtils" time="0.000017" file="__tests__/unit/services/input.test.ts" line="472" assertions="3" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/services/storage.test.ts" file="__tests__/unit/services/storage.test.ts" tests="34" assertions="50" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="StorageService" file="__tests__/unit/services/storage.test.ts" line="328" tests="16" assertions="23" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="State Management" file="__tests__/unit/services/storage.test.ts" line="329" tests="6" assertions="10" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="saves and loads state" classname="State Management &amp;gt; StorageService" time="0.00069" file="__tests__/unit/services/storage.test.ts" line="330" assertions="1" />
        <testcase name="saves state with pretty formatting" classname="State Management &amp;gt; StorageService" time="0.000226" file="__tests__/unit/services/storage.test.ts" line="352" assertions="1" />
        <testcase name="returns null for non-existent state" classname="State Management &amp;gt; StorageService" time="0.000177" file="__tests__/unit/services/storage.test.ts" line="369" assertions="1" />
        <testcase name="clears state" classname="State Management &amp;gt; StorageService" time="0.00023" file="__tests__/unit/services/storage.test.ts" line="385" assertions="1" />
        <testcase name="checks if state exists" classname="State Management &amp;gt; StorageService" time="0.000195" file="__tests__/unit/services/storage.test.ts" line="401" assertions="2" />
        <testcase name="lists state keys" classname="State Management &amp;gt; StorageService" time="0.00024" file="__tests__/unit/services/storage.test.ts" line="419" assertions="4" />
      </testsuite>
      <testsuite name="Configuration Management" file="__tests__/unit/services/storage.test.ts" line="441" tests="4" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="loads config with defaults" classname="Configuration Management &amp;gt; StorageService" time="0.000237" file="__tests__/unit/services/storage.test.ts" line="442" assertions="1" />
        <testcase name="saves and loads config" classname="Configuration Management &amp;gt; StorageService" time="0.000273" file="__tests__/unit/services/storage.test.ts" line="463" assertions="1" />
        <testcase name="gets config path" classname="Configuration Management &amp;gt; StorageService" time="0.000207" file="__tests__/unit/services/storage.test.ts" line="485" assertions="1" />
        <testcase name="watches config changes" classname="Configuration Management &amp;gt; StorageService" time="0.000278" file="__tests__/unit/services/storage.test.ts" line="499" assertions="1" />
      </testsuite>
      <testsuite name="Cache Management" file="__tests__/unit/services/storage.test.ts" line="518" tests="5" assertions="8" failures="0" skipped="0" time="0.016" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="saves and loads cache" classname="Cache Management &amp;gt; StorageService" time="0.000286" file="__tests__/unit/services/storage.test.ts" line="519" assertions="1" />
        <testcase name="handles cache TTL expiration" classname="Cache Management &amp;gt; StorageService" time="0.006848" file="__tests__/unit/services/storage.test.ts" line="537" assertions="1" />
        <testcase name="clears specific cache key" classname="Cache Management &amp;gt; StorageService" time="0.000496" file="__tests__/unit/services/storage.test.ts" line="558" assertions="2" />
        <testcase name="clears expired cache entries" classname="Cache Management &amp;gt; StorageService" time="0.005709" file="__tests__/unit/services/storage.test.ts" line="580" assertions="1" />
        <testcase name="gets cache statistics" classname="Cache Management &amp;gt; StorageService" time="0.005672" file="__tests__/unit/services/storage.test.ts" line="604" assertions="3" />
      </testsuite>
      <testsuite name="Error Handling" file="__tests__/unit/services/storage.test.ts" line="628" tests="1" assertions="1" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles save errors" classname="Error Handling &amp;gt; StorageService" time="0.000433" file="__tests__/unit/services/storage.test.ts" line="629" assertions="1" />
      </testsuite>
    </testsuite>
    <testsuite name="StorageUtils" file="__tests__/unit/services/storage.test.ts" line="655" tests="18" assertions="27" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="getConfigPaths" file="__tests__/unit/services/storage.test.ts" line="656" tests="4" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="generates correct paths for macOS" classname="getConfigPaths &amp;gt; StorageUtils" time="0.000087" file="__tests__/unit/services/storage.test.ts" line="672" assertions="1" />
        <testcase name="generates correct paths for Windows" classname="getConfigPaths &amp;gt; StorageUtils" time="0.000051" file="__tests__/unit/services/storage.test.ts" line="685" assertions="1" />
        <testcase name="generates correct paths for Linux" classname="getConfigPaths &amp;gt; StorageUtils" time="0.000037" file="__tests__/unit/services/storage.test.ts" line="700" assertions="1" />
        <testcase name="handles missing environment variables" classname="getConfigPaths &amp;gt; StorageUtils" time="0.000074" file="__tests__/unit/services/storage.test.ts" line="714" assertions="1" />
      </testsuite>
      <testsuite name="getDataPaths" file="__tests__/unit/services/storage.test.ts" line="725" tests="3" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="generates correct paths for macOS" classname="getDataPaths &amp;gt; StorageUtils" time="0.000072" file="__tests__/unit/services/storage.test.ts" line="740" assertions="1" />
        <testcase name="generates correct paths for Windows" classname="getDataPaths &amp;gt; StorageUtils" time="0.000022" file="__tests__/unit/services/storage.test.ts" line="752" assertions="1" />
        <testcase name="generates correct paths for Linux" classname="getDataPaths &amp;gt; StorageUtils" time="0.000026" file="__tests__/unit/services/storage.test.ts" line="766" assertions="1" />
      </testsuite>
      <testsuite name="getCachePaths" file="__tests__/unit/services/storage.test.ts" line="780" tests="3" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="generates correct paths for macOS" classname="getCachePaths &amp;gt; StorageUtils" time="0.000037" file="__tests__/unit/services/storage.test.ts" line="795" assertions="1" />
        <testcase name="generates correct paths for Windows" classname="getCachePaths &amp;gt; StorageUtils" time="0.000043" file="__tests__/unit/services/storage.test.ts" line="807" assertions="1" />
        <testcase name="generates correct paths for Linux" classname="getCachePaths &amp;gt; StorageUtils" time="0.000022" file="__tests__/unit/services/storage.test.ts" line="821" assertions="1" />
      </testsuite>
      <testsuite name="generateBackupName" file="__tests__/unit/services/storage.test.ts" line="835" tests="3" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="generates backup name with timestamp" classname="generateBackupName &amp;gt; StorageUtils" time="0.00009" file="__tests__/unit/services/storage.test.ts" line="836" assertions="1" />
        <testcase name="generates backup name with custom suffix" classname="generateBackupName &amp;gt; StorageUtils" time="0.000021" file="__tests__/unit/services/storage.test.ts" line="843" assertions="1" />
        <testcase name="handles files without extension" classname="generateBackupName &amp;gt; StorageUtils" time="0.000011" file="__tests__/unit/services/storage.test.ts" line="850" assertions="1" />
      </testsuite>
      <testsuite name="isSafePath" file="__tests__/unit/services/storage.test.ts" line="858" tests="4" assertions="13" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="allows safe paths" classname="isSafePath &amp;gt; StorageUtils" time="0.000037" file="__tests__/unit/services/storage.test.ts" line="859" assertions="4" />
        <testcase name="blocks directory traversal attacks" classname="isSafePath &amp;gt; StorageUtils" time="0.000017" file="__tests__/unit/services/storage.test.ts" line="866" assertions="4" />
        <testcase name="handles Windows paths correctly" classname="isSafePath &amp;gt; StorageUtils" time="0.00001" file="__tests__/unit/services/storage.test.ts" line="873" assertions="2" />
        <testcase name="handles edge cases" classname="isSafePath &amp;gt; StorageUtils" time="0.00002" file="__tests__/unit/services/storage.test.ts" line="878" assertions="3" />
      </testsuite>
      <testsuite name="ensureDirectory" file="__tests__/unit/services/storage.test.ts" line="885" tests="1" assertions="1" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles existing directory" classname="ensureDirectory &amp;gt; StorageUtils" time="0.000052" file="__tests__/unit/services/storage.test.ts" line="886" assertions="1" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/services/storage-impl.test.ts" file="__tests__/unit/services/storage-impl.test.ts" tests="28" assertions="16" failures="20" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Storage Service Implementation" file="__tests__/unit/services/storage-impl.test.ts" line="25" tests="28" assertions="16" failures="20" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="state management" file="__tests__/unit/services/storage-impl.test.ts" line="38" tests="5" assertions="5" failures="3" skipped="0" time="0.001" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="saves and retrieves state" classname="state management &amp;gt; Storage Service Implementation" time="0.001411" file="__tests__/unit/services/storage-impl.test.ts" line="39" assertions="1" />
        <testcase name="returns null for non-existent state" classname="state management &amp;gt; Storage Service Implementation" time="0.000708" file="__tests__/unit/services/storage-impl.test.ts" line="54" assertions="1">
          <failure type="AssertionError" />
        </testcase>
        <testcase name="deletes state" classname="state management &amp;gt; Storage Service Implementation" time="0.000658" file="__tests__/unit/services/storage-impl.test.ts" line="67" assertions="0">
          <failure type="AssertionError" />
        </testcase>
        <testcase name="lists all state keys" classname="state management &amp;gt; Storage Service Implementation" time="0.000432" file="__tests__/unit/services/storage-impl.test.ts" line="83" assertions="3" />
        <testcase name="clears all state" classname="state management &amp;gt; Storage Service Implementation" time="0.000521" file="__tests__/unit/services/storage-impl.test.ts" line="103" assertions="0">
          <failure type="AssertionError" />
        </testcase>
      </testsuite>
      <testsuite name="cache management" file="__tests__/unit/services/storage-impl.test.ts" line="124" tests="5" assertions="4" failures="2" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="caches data without TTL" classname="cache management &amp;gt; Storage Service Implementation" time="0.000632" file="__tests__/unit/services/storage-impl.test.ts" line="125" assertions="1" />
        <testcase name="caches data with TTL" classname="cache management &amp;gt; Storage Service Implementation" time="0.000161" file="__tests__/unit/services/storage-impl.test.ts" line="140" assertions="0">
          <failure type="AssertionError" />
        </testcase>
        <testcase name="invalidates cache" classname="cache management &amp;gt; Storage Service Implementation" time="0.000351" file="__tests__/unit/services/storage-impl.test.ts" line="165" assertions="1" />
        <testcase name="clears all cache" classname="cache management &amp;gt; Storage Service Implementation" time="0.000567" file="__tests__/unit/services/storage-impl.test.ts" line="181" assertions="1">
          <failure type="AssertionError" />
        </testcase>
        <testcase name="lists cache keys" classname="cache management &amp;gt; Storage Service Implementation" time="0.000355" file="__tests__/unit/services/storage-impl.test.ts" line="201" assertions="1" />
      </testsuite>
      <testsuite name="config management" file="__tests__/unit/services/storage-impl.test.ts" line="219" tests="5" assertions="2" failures="5" skipped="0" time="0.001" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="saves and loads config" classname="config management &amp;gt; Storage Service Implementation" time="0.000736" file="__tests__/unit/services/storage-impl.test.ts" line="220" assertions="0">
          <failure type="AssertionError" />
        </testcase>
        <testcase name="validates config with schema" classname="config management &amp;gt; Storage Service Implementation" time="0.001175" file="__tests__/unit/services/storage-impl.test.ts" line="241" assertions="1">
          <failure type="AssertionError" />
        </testcase>
        <testcase name="returns null for non-existent config" classname="config management &amp;gt; Storage Service Implementation" time="0.000347" file="__tests__/unit/services/storage-impl.test.ts" line="271" assertions="1">
          <failure type="AssertionError" />
        </testcase>
        <testcase name="deletes config" classname="config management &amp;gt; Storage Service Implementation" time="0.000574" file="__tests__/unit/services/storage-impl.test.ts" line="284" assertions="0">
          <failure type="AssertionError" />
        </testcase>
        <testcase name="lists config files" classname="config management &amp;gt; Storage Service Implementation" time="0.000406" file="__tests__/unit/services/storage-impl.test.ts" line="300" assertions="0">
          <failure type="AssertionError" />
        </testcase>
      </testsuite>
      <testsuite name="file operations" file="__tests__/unit/services/storage-impl.test.ts" line="319" tests="5" assertions="3" failures="3" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="writes and reads files" classname="file operations &amp;gt; Storage Service Implementation" time="0.000514" file="__tests__/unit/services/storage-impl.test.ts" line="320" assertions="1">
          <failure type="AssertionError" />
        </testcase>
        <testcase name="reads file content" classname="file operations &amp;gt; Storage Service Implementation" time="0.000282" file="__tests__/unit/services/storage-impl.test.ts" line="341" assertions="1" />
        <testcase name="deletes files" classname="file operations &amp;gt; Storage Service Implementation" time="0.000341" file="__tests__/unit/services/storage-impl.test.ts" line="357" assertions="0">
          <failure type="AssertionError" />
        </testcase>
        <testcase name="checks file existence" classname="file operations &amp;gt; Storage Service Implementation" time="0.000285" file="__tests__/unit/services/storage-impl.test.ts" line="376" assertions="1" />
        <testcase name="handles non-existent files" classname="file operations &amp;gt; Storage Service Implementation" time="0.000354" file="__tests__/unit/services/storage-impl.test.ts" line="392" assertions="0">
          <failure type="AssertionError" />
        </testcase>
      </testsuite>
      <testsuite name="transactions" file="__tests__/unit/services/storage-impl.test.ts" line="409" tests="3" assertions="0" failures="3" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="executes transaction successfully" classname="transactions &amp;gt; Storage Service Implementation" time="0.000669" file="__tests__/unit/services/storage-impl.test.ts" line="410" assertions="0">
          <failure type="AssertionError" />
        </testcase>
        <testcase name="rolls back on failure" classname="transactions &amp;gt; Storage Service Implementation" time="0.00042" file="__tests__/unit/services/storage-impl.test.ts" line="433" assertions="0">
          <failure type="AssertionError" />
        </testcase>
        <testcase name="handles nested transactions" classname="transactions &amp;gt; Storage Service Implementation" time="0.000278" file="__tests__/unit/services/storage-impl.test.ts" line="468" assertions="0">
          <failure type="AssertionError" />
        </testcase>
      </testsuite>
      <testsuite name="storage paths" file="__tests__/unit/services/storage-impl.test.ts" line="499" tests="3" assertions="0" failures="3" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="resolves data paths correctly" classname="storage paths &amp;gt; Storage Service Implementation" time="0.000235" file="__tests__/unit/services/storage-impl.test.ts" line="500" assertions="0">
          <failure type="AssertionError" />
        </testcase>
        <testcase name="resolves cache paths correctly" classname="storage paths &amp;gt; Storage Service Implementation" time="0.000272" file="__tests__/unit/services/storage-impl.test.ts" line="514" assertions="0">
          <failure type="AssertionError" />
        </testcase>
        <testcase name="resolves config paths correctly" classname="storage paths &amp;gt; Storage Service Implementation" time="0.000238" file="__tests__/unit/services/storage-impl.test.ts" line="528" assertions="0">
          <failure type="AssertionError" />
        </testcase>
      </testsuite>
      <testsuite name="error handling" file="__tests__/unit/services/storage-impl.test.ts" line="543" tests="2" assertions="2" failures="1" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles file system errors" classname="error handling &amp;gt; Storage Service Implementation" time="0.000419" file="__tests__/unit/services/storage-impl.test.ts" line="544" assertions="1" />
        <testcase name="validates file paths" classname="error handling &amp;gt; Storage Service Implementation" time="0.000589" file="__tests__/unit/services/storage-impl.test.ts" line="562" assertions="1">
          <failure type="AssertionError" />
        </testcase>
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/services/mouse-router.test.ts" file="__tests__/unit/services/mouse-router.test.ts" tests="16" assertions="17" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="MouseRouterService" file="__tests__/unit/services/mouse-router.test.ts" line="17" tests="6" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="MouseRouterServiceLive" file="__tests__/unit/services/mouse-router.test.ts" line="40" tests="6" assertions="6" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="should register and route mouse events to components" classname="MouseRouterServiceLive &amp;gt; MouseRouterService" time="0.000878" file="__tests__/unit/services/mouse-router.test.ts" line="41" assertions="1" />
        <testcase name="should return null for mouse events outside component bounds" classname="MouseRouterServiceLive &amp;gt; MouseRouterService" time="0.00022" file="__tests__/unit/services/mouse-router.test.ts" line="76" assertions="1" />
        <testcase name="should unregister components" classname="MouseRouterServiceLive &amp;gt; MouseRouterService" time="0.000306" file="__tests__/unit/services/mouse-router.test.ts" line="95" assertions="1" />
        <testcase name="should update component bounds" classname="MouseRouterServiceLive &amp;gt; MouseRouterService" time="0.000218" file="__tests__/unit/services/mouse-router.test.ts" line="120" assertions="1" />
        <testcase name="should clear all components" classname="MouseRouterServiceLive &amp;gt; MouseRouterService" time="0.000216" file="__tests__/unit/services/mouse-router.test.ts" line="138" assertions="1" />
        <testcase name="should return null when handler returns null" classname="MouseRouterServiceLive &amp;gt; MouseRouterService" time="0.000198" file="__tests__/unit/services/mouse-router.test.ts" line="153" assertions="1" />
      </testsuite>
    </testsuite>
    <testsuite name="Helper Functions" file="__tests__/unit/services/mouse-router.test.ts" line="183" tests="10" assertions="11" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="clickHandler" file="__tests__/unit/services/mouse-router.test.ts" line="184" tests="3" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="should respond to left click press events" classname="clickHandler &amp;gt; Helper Functions" time="0.000057" file="__tests__/unit/services/mouse-router.test.ts" line="185" assertions="1" />
        <testcase name="should ignore non-left clicks" classname="clickHandler &amp;gt; Helper Functions" time="0.00002" file="__tests__/unit/services/mouse-router.test.ts" line="195" assertions="1" />
        <testcase name="should ignore release events" classname="clickHandler &amp;gt; Helper Functions" time="0.000015" file="__tests__/unit/services/mouse-router.test.ts" line="205" assertions="1" />
      </testsuite>
      <testsuite name="pressReleaseHandler" file="__tests__/unit/services/mouse-router.test.ts" line="216" tests="4" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="should respond to left press events" classname="pressReleaseHandler &amp;gt; Helper Functions" time="0.000039" file="__tests__/unit/services/mouse-router.test.ts" line="217" assertions="1" />
        <testcase name="should respond to left release events" classname="pressReleaseHandler &amp;gt; Helper Functions" time="0.000023" file="__tests__/unit/services/mouse-router.test.ts" line="228" assertions="1" />
        <testcase name="should ignore non-left button events" classname="pressReleaseHandler &amp;gt; Helper Functions" time="0.000012" file="__tests__/unit/services/mouse-router.test.ts" line="239" assertions="1" />
        <testcase name="should ignore motion and wheel events" classname="pressReleaseHandler &amp;gt; Helper Functions" time="0.00002" file="__tests__/unit/services/mouse-router.test.ts" line="250" assertions="2" />
      </testsuite>
      <testsuite name="coordinateHandler" file="__tests__/unit/services/mouse-router.test.ts" line="263" tests="3" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="should provide local coordinates to callback" classname="coordinateHandler &amp;gt; Helper Functions" time="0.000032" file="__tests__/unit/services/mouse-router.test.ts" line="264" assertions="1" />
        <testcase name="should handle callback returning null" classname="coordinateHandler &amp;gt; Helper Functions" time="0.000013" file="__tests__/unit/services/mouse-router.test.ts" line="284" assertions="1" />
        <testcase name="should work with all mouse event types" classname="coordinateHandler &amp;gt; Helper Functions" time="0.000051" file="__tests__/unit/services/mouse-router.test.ts" line="294" assertions="1" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/services/renderer-impl.test.ts" file="__tests__/unit/services/renderer-impl.test.ts" tests="15" assertions="1" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Renderer Service Implementation" file="__tests__/unit/services/renderer-impl.test.ts" line="30" tests="15" assertions="1" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="basic rendering" file="__tests__/unit/services/renderer-impl.test.ts" line="31" tests="3" assertions="0" failures="0" skipped="0" time="0.002" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="renders simple text" classname="basic rendering &amp;gt; Renderer Service Implementation" time="0.002286" file="__tests__/unit/services/renderer-impl.test.ts" line="32" assertions="0" />
        <testcase name="renders styled text" classname="basic rendering &amp;gt; Renderer Service Implementation" time="0.000393" file="__tests__/unit/services/renderer-impl.test.ts" line="44" assertions="0" />
        <testcase name="handles empty text" classname="basic rendering &amp;gt; Renderer Service Implementation" time="0.000318" file="__tests__/unit/services/renderer-impl.test.ts" line="56" assertions="0" />
      </testsuite>
      <testsuite name="layout rendering" file="__tests__/unit/services/renderer-impl.test.ts" line="69" tests="3" assertions="0" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="renders vertical stack" classname="layout rendering &amp;gt; Renderer Service Implementation" time="0.000368" file="__tests__/unit/services/renderer-impl.test.ts" line="70" assertions="0" />
        <testcase name="renders horizontal stack" classname="layout rendering &amp;gt; Renderer Service Implementation" time="0.000354" file="__tests__/unit/services/renderer-impl.test.ts" line="86" assertions="0" />
        <testcase name="renders nested layouts" classname="layout rendering &amp;gt; Renderer Service Implementation" time="0.00036" file="__tests__/unit/services/renderer-impl.test.ts" line="101" assertions="0" />
      </testsuite>
      <testsuite name="viewport management" file="__tests__/unit/services/renderer-impl.test.ts" line="121" tests="2" assertions="0" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles viewport updates" classname="viewport management &amp;gt; Renderer Service Implementation" time="0.000497" file="__tests__/unit/services/renderer-impl.test.ts" line="122" assertions="0" />
        <testcase name="supports viewport operations" classname="viewport management &amp;gt; Renderer Service Implementation" time="0.000325" file="__tests__/unit/services/renderer-impl.test.ts" line="141" assertions="0" />
      </testsuite>
      <testsuite name="renderer reliability" file="__tests__/unit/services/renderer-impl.test.ts" line="154" tests="1" assertions="0" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles consecutive renders" classname="renderer reliability &amp;gt; Renderer Service Implementation" time="0.000327" file="__tests__/unit/services/renderer-impl.test.ts" line="155" assertions="0" />
      </testsuite>
      <testsuite name="performance features" file="__tests__/unit/services/renderer-impl.test.ts" line="171" tests="2" assertions="0" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="supports diff rendering" classname="performance features &amp;gt; Renderer Service Implementation" time="0.000342" file="__tests__/unit/services/renderer-impl.test.ts" line="172" assertions="0" />
        <testcase name="handles identical renders efficiently" classname="performance features &amp;gt; Renderer Service Implementation" time="0.000636" file="__tests__/unit/services/renderer-impl.test.ts" line="188" assertions="0" />
      </testsuite>
      <testsuite name="error handling" file="__tests__/unit/services/renderer-impl.test.ts" line="204" tests="1" assertions="1" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles invalid views gracefully" classname="error handling &amp;gt; Renderer Service Implementation" time="0.000438" file="__tests__/unit/services/renderer-impl.test.ts" line="205" assertions="1" />
      </testsuite>
      <testsuite name="complex scenarios" file="__tests__/unit/services/renderer-impl.test.ts" line="226" tests="3" assertions="0" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="renders large content" classname="complex scenarios &amp;gt; Renderer Service Implementation" time="0.000923" file="__tests__/unit/services/renderer-impl.test.ts" line="227" assertions="0" />
        <testcase name="handles rapid updates" classname="complex scenarios &amp;gt; Renderer Service Implementation" time="0.000615" file="__tests__/unit/services/renderer-impl.test.ts" line="242" assertions="0" />
        <testcase name="handles mixed content types" classname="complex scenarios &amp;gt; Renderer Service Implementation" time="0.00047" file="__tests__/unit/services/renderer-impl.test.ts" line="259" assertions="0" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/services/hit-test.test.ts" file="__tests__/unit/services/hit-test.test.ts" tests="11" assertions="35" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Hit Test Service" file="__tests__/unit/services/hit-test.test.ts" line="10" tests="11" assertions="35" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testcase name="registers and tests component bounds" classname="Hit Test Service" time="0.000654" file="__tests__/unit/services/hit-test.test.ts" line="27" assertions="7" />
      <testcase name="unregisters components" classname="Hit Test Service" time="0.000182" file="__tests__/unit/services/hit-test.test.ts" line="52" assertions="2" />
      <testcase name="clears all components" classname="Hit Test Service" time="0.000171" file="__tests__/unit/services/hit-test.test.ts" line="71" assertions="2" />
      <testcase name="handles overlapping components with z-index" classname="Hit Test Service" time="0.000139" file="__tests__/unit/services/hit-test.test.ts" line="91" assertions="2" />
      <testcase name="updates existing component bounds" classname="Hit Test Service" time="0.000149" file="__tests__/unit/services/hit-test.test.ts" line="109" assertions="3" />
      <testcase name="gets all registered component bounds" classname="Hit Test Service" time="0.000171" file="__tests__/unit/services/hit-test.test.ts" line="132" assertions="2" />
      <testcase name="finds all components at a point" classname="Hit Test Service" time="0.000203" file="__tests__/unit/services/hit-test.test.ts" line="151" assertions="2" />
      <testcase name="handles edge detection correctly" classname="Hit Test Service" time="0.000209" file="__tests__/unit/services/hit-test.test.ts" line="173" assertions="8" />
      <testcase name="calculates correct local coordinates" classname="Hit Test Service" time="0.00013" file="__tests__/unit/services/hit-test.test.ts" line="192" assertions="3" />
      <testcase name="handles zero-sized components" classname="Hit Test Service" time="0.000111" file="__tests__/unit/services/hit-test.test.ts" line="204" assertions="1" />
      <testcase name="handles negative coordinates" classname="Hit Test Service" time="0.000112" file="__tests__/unit/services/hit-test.test.ts" line="215" assertions="3" />
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/components/builders/panel-additional.test.ts" file="__tests__/unit/components/builders/panel-additional.test.ts" tests="18" assertions="32" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Panel Builders - Additional Coverage" file="__tests__/unit/components/builders/panel-additional.test.ts" line="18" tests="18" assertions="32" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="Card" file="__tests__/unit/components/builders/panel-additional.test.ts" line="19" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates card with title" classname="Card &amp;gt; Panel Builders - Additional Coverage" time="0.000242" file="__tests__/unit/components/builders/panel-additional.test.ts" line="20" assertions="2" />
        <testcase name="creates card without title" classname="Card &amp;gt; Panel Builders - Additional Coverage" time="0.000061" file="__tests__/unit/components/builders/panel-additional.test.ts" line="28" assertions="1" />
      </testsuite>
      <testsuite name="Sidebar" file="__tests__/unit/components/builders/panel-additional.test.ts" line="36" tests="1" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates sidebar" classname="Sidebar &amp;gt; Panel Builders - Additional Coverage" time="0.000109" file="__tests__/unit/components/builders/panel-additional.test.ts" line="37" assertions="3" />
      </testsuite>
      <testsuite name="StatusPanel" file="__tests__/unit/components/builders/panel-additional.test.ts" line="51" tests="5" assertions="9" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates info status panel" classname="StatusPanel &amp;gt; Panel Builders - Additional Coverage" time="0.000115" file="__tests__/unit/components/builders/panel-additional.test.ts" line="52" assertions="2" />
        <testcase name="creates success status panel" classname="StatusPanel &amp;gt; Panel Builders - Additional Coverage" time="0.000078" file="__tests__/unit/components/builders/panel-additional.test.ts" line="61" assertions="2" />
        <testcase name="creates warning status panel" classname="StatusPanel &amp;gt; Panel Builders - Additional Coverage" time="0.000057" file="__tests__/unit/components/builders/panel-additional.test.ts" line="70" assertions="2" />
        <testcase name="creates error status panel" classname="StatusPanel &amp;gt; Panel Builders - Additional Coverage" time="0.000059" file="__tests__/unit/components/builders/panel-additional.test.ts" line="79" assertions="2" />
        <testcase name="handles unknown status type" classname="StatusPanel &amp;gt; Panel Builders - Additional Coverage" time="0.000067" file="__tests__/unit/components/builders/panel-additional.test.ts" line="88" assertions="1" />
      </testsuite>
      <testsuite name="CollapsiblePanel" file="__tests__/unit/components/builders/panel-additional.test.ts" line="97" tests="2" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="shows content when not collapsed" classname="CollapsiblePanel &amp;gt; Panel Builders - Additional Coverage" time="0.000092" file="__tests__/unit/components/builders/panel-additional.test.ts" line="98" assertions="2" />
        <testcase name="hides content when collapsed" classname="CollapsiblePanel &amp;gt; Panel Builders - Additional Coverage" time="0.000056" file="__tests__/unit/components/builders/panel-additional.test.ts" line="110" assertions="2" />
      </testsuite>
      <testsuite name="ThemedPanel" file="__tests__/unit/components/builders/panel-additional.test.ts" line="123" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates themed panel with default options" classname="ThemedPanel &amp;gt; Panel Builders - Additional Coverage" time="0.000082" file="__tests__/unit/components/builders/panel-additional.test.ts" line="124" assertions="1" />
        <testcase name="creates themed panel with custom options" classname="ThemedPanel &amp;gt; Panel Builders - Additional Coverage" time="0.00008" file="__tests__/unit/components/builders/panel-additional.test.ts" line="131" assertions="2" />
      </testsuite>
      <testsuite name="FloatingPanel" file="__tests__/unit/components/builders/panel-additional.test.ts" line="142" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates floating panel" classname="FloatingPanel &amp;gt; Panel Builders - Additional Coverage" time="0.000109" file="__tests__/unit/components/builders/panel-additional.test.ts" line="143" assertions="2" />
        <testcase name="creates floating panel without title" classname="FloatingPanel &amp;gt; Panel Builders - Additional Coverage" time="0.000074" file="__tests__/unit/components/builders/panel-additional.test.ts" line="154" assertions="1" />
      </testsuite>
      <testsuite name="Panel with array content" file="__tests__/unit/components/builders/panel-additional.test.ts" line="162" tests="1" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles array of views" classname="Panel with array content &amp;gt; Panel Builders - Additional Coverage" time="0.00008" file="__tests__/unit/components/builders/panel-additional.test.ts" line="163" assertions="4" />
      </testsuite>
      <testsuite name="Panel with custom borders" file="__tests__/unit/components/builders/panel-additional.test.ts" line="180" tests="1" assertions="1" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="uses custom border style" classname="Panel with custom borders &amp;gt; Panel Builders - Additional Coverage" time="0.000053" file="__tests__/unit/components/builders/panel-additional.test.ts" line="181" assertions="1" />
      </testsuite>
      <testsuite name="Panel edge cases" file="__tests__/unit/components/builders/panel-additional.test.ts" line="200" tests="2" assertions="2" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles height option" classname="Panel edge cases &amp;gt; Panel Builders - Additional Coverage" time="0.000039" file="__tests__/unit/components/builders/panel-additional.test.ts" line="201" assertions="1" />
        <testcase name="handles different padding values" classname="Panel edge cases &amp;gt; Panel Builders - Additional Coverage" time="0.000054" file="__tests__/unit/components/builders/panel-additional.test.ts" line="210" assertions="1" />
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="__tests__/unit/components/builders/panel-coverage.test.ts" file="__tests__/unit/components/builders/panel-coverage.test.ts" tests="17" assertions="31" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
    <testsuite name="Panel Builders - Coverage" file="__tests__/unit/components/builders/panel-coverage.test.ts" line="18" tests="17" assertions="31" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
      <testsuite name="Panel" file="__tests__/unit/components/builders/panel-coverage.test.ts" line="19" tests="4" assertions="9" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates basic panel" classname="Panel &amp;gt; Panel Builders - Coverage" time="0.000211" file="__tests__/unit/components/builders/panel-coverage.test.ts" line="20" assertions="4" />
        <testcase name="handles optional properties" classname="Panel &amp;gt; Panel Builders - Coverage" time="0.000045" file="__tests__/unit/components/builders/panel-coverage.test.ts" line="31" assertions="1" />
        <testcase name="supports custom width" classname="Panel &amp;gt; Panel Builders - Coverage" time="0.000041" file="__tests__/unit/components/builders/panel-coverage.test.ts" line="38" assertions="1" />
        <testcase name="supports multiline content" classname="Panel &amp;gt; Panel Builders - Coverage" time="0.000087" file="__tests__/unit/components/builders/panel-coverage.test.ts" line="48" assertions="3" />
      </testsuite>
      <testsuite name="HeaderPanel" file="__tests__/unit/components/builders/panel-coverage.test.ts" line="64" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates header panel with default style" classname="HeaderPanel &amp;gt; Panel Builders - Coverage" time="0.000083" file="__tests__/unit/components/builders/panel-coverage.test.ts" line="65" assertions="2" />
        <testcase name="accepts custom options" classname="HeaderPanel &amp;gt; Panel Builders - Coverage" time="0.0001" file="__tests__/unit/components/builders/panel-coverage.test.ts" line="73" assertions="1" />
      </testsuite>
      <testsuite name="InfoPanel" file="__tests__/unit/components/builders/panel-coverage.test.ts" line="81" tests="2" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates info panel" classname="InfoPanel &amp;gt; Panel Builders - Coverage" time="0.000074" file="__tests__/unit/components/builders/panel-coverage.test.ts" line="82" assertions="2" />
        <testcase name="handles array content" classname="InfoPanel &amp;gt; Panel Builders - Coverage" time="0.000054" file="__tests__/unit/components/builders/panel-coverage.test.ts" line="90" assertions="2" />
      </testsuite>
      <testsuite name="SuccessPanel" file="__tests__/unit/components/builders/panel-coverage.test.ts" line="102" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates success panel" classname="SuccessPanel &amp;gt; Panel Builders - Coverage" time="0.000072" file="__tests__/unit/components/builders/panel-coverage.test.ts" line="103" assertions="2" />
        <testcase name="works without title" classname="SuccessPanel &amp;gt; Panel Builders - Coverage" time="0.000041" file="__tests__/unit/components/builders/panel-coverage.test.ts" line="111" assertions="1" />
      </testsuite>
      <testsuite name="WarningPanel" file="__tests__/unit/components/builders/panel-coverage.test.ts" line="119" tests="2" assertions="3" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates warning panel" classname="WarningPanel &amp;gt; Panel Builders - Coverage" time="0.000059" file="__tests__/unit/components/builders/panel-coverage.test.ts" line="120" assertions="2" />
        <testcase name="supports custom width" classname="WarningPanel &amp;gt; Panel Builders - Coverage" time="0.000041" file="__tests__/unit/components/builders/panel-coverage.test.ts" line="128" assertions="1" />
      </testsuite>
      <testsuite name="ErrorPanel" file="__tests__/unit/components/builders/panel-coverage.test.ts" line="135" tests="2" assertions="5" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="creates error panel" classname="ErrorPanel &amp;gt; Panel Builders - Coverage" time="0.000133" file="__tests__/unit/components/builders/panel-coverage.test.ts" line="136" assertions="2" />
        <testcase name="handles multiline error messages" classname="ErrorPanel &amp;gt; Panel Builders - Coverage" time="0.000104" file="__tests__/unit/components/builders/panel-coverage.test.ts" line="144" assertions="3" />
      </testsuite>
      <testsuite name="Panel edge cases" file="__tests__/unit/components/builders/panel-coverage.test.ts" line="158" tests="3" assertions="4" failures="0" skipped="0" time="0" hostname="Andrews-MacBook-Pro-188.local">
        <testcase name="handles empty content" classname="Panel edge cases &amp;gt; Panel Builders - Coverage" time="0.000041" file="__tests__/unit/components/builders/panel-coverage.test.ts" line="159" assertions="1" />
        <testcase name="handles very long titles" classname="Panel edge cases &amp;gt; Panel Builders - Coverage" time="0.000074" file="__tests__/unit/components/builders/panel-coverage.test.ts" line="165" assertions="1" />
        <testcase name="handles special characters" classname="Panel edge cases &amp;gt; Panel Builders - Coverage" time="0.000075" file="__tests__/unit/components/builders/panel-coverage.test.ts" line="174" assertions="2" />
      </testsuite>
    </testsuite>
  </testsuite>
</testsuites>
